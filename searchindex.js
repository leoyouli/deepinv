Search.setIndex({"docnames": ["auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.loss", "deepinv.models", "deepinv.multigpu", "deepinv.notation", "deepinv.optim", "deepinv.physics", "deepinv.pnp", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "sg_execution_times", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.CharbonnierLoss", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.EquivariantDenoiser", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.PDNet_DualBlock", "stubs/deepinv.models.PDNet_PrimalBlock", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGV", "stubs/deepinv.models.TV", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDict", "stubs/deepinv.models.WaveletPrior", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L1Prior", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.OptimIterator", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.GDIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.physics.BlindBlur", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformGaussianNoise", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.physics.blur.gaussian_blur", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.DiffusionSampler", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Scale", "stubs/deepinv.transform.Shift", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "filenames": ["auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.loss.rst", "deepinv.models.rst", "deepinv.multigpu.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.physics.rst", "deepinv.pnp.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "sg_execution_times.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.CharbonnierLoss.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.EquivariantDenoiser.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.PDNet_DualBlock.rst", "stubs/deepinv.models.PDNet_PrimalBlock.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGV.rst", "stubs/deepinv.models.TV.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDict.rst", "stubs/deepinv.models.WaveletPrior.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L1Prior.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.OptimIterator.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.GDIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.physics.BlindBlur.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformGaussianNoise.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.physics.blur.gaussian_blur.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.DiffusionSampler.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Scale.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "titles": ["Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Single photon lidar operator for depth ranging.", "Saving and loading models", "Stacking and concatenating forward operators.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised denoising with the SURE loss.", "Computation times", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Loss", "Models", "Using multiple GPUs", "Math Notation", "Optim", "Physics", "PnP and RED algorithms", "Diffusion algorithms", "Unfolded algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "Computation times", "HDF5Dataset", "generate_dataset", "CharbonnierLoss", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LpNorm", "MCLoss", "MOILoss", "Neighbor2Neighbor", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "ArtifactRemoval", "AutoEncoder", "BM3D", "ConvDecoder", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "EquivariantDenoiser", "GSDRUNet", "MedianFilter", "PDNet_DualBlock", "PDNet_PrimalBlock", "SCUNet", "SwinIR", "TGV", "TV", "UNet", "WaveletDict", "WaveletPrior", "BaseOptim", "DataFidelity", "FixedPoint", "IndicatorL2", "L1", "L1Prior", "L2", "OptimIterator", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "Tikhonov", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "GDIteration", "HQSIteration", "PGDIteration", "BlindBlur", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Denoising", "Downsampling", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "MRI", "Pansharpen", "Physics", "PoissonGaussianNoise", "PoissonNoise", "SinglePhotonLidar", "SinglePixelCamera", "Tomography", "UniformGaussianNoise", "UniformNoise", "gaussian_blur", "DDRM", "DPS", "DiffPIR", "DiffusionSampler", "MonteCarlo", "SKRock", "ULA", "test", "train", "Rotate", "Scale", "Shift", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_url_image", "ones_like", "plot", "plot_curves", "plot_parameters", "rand_like", "randn_like", "zeros_like"], "terms": {"go": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "end": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 43, 45, 85, 88, 100, 101, 102, 103, 104, 105, 117, 120, 130, 131, 141, 142], "download": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 69, 71, 72, 74, 78, 79, 129, 131], "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 47, 52, 57], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 42, 47, 48, 54, 87, 126, 127], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 39, 58, 71, 79, 80, 81], "In": [0, 3, 4, 5, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 39, 43, 45, 50, 71, 89, 101, 117, 124], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 50, 51, 53, 54, 55, 56, 57, 61, 62, 63, 66, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 97, 100, 104, 106, 107, 109, 115, 116, 117, 118, 120, 122, 123, 124, 125, 129, 130, 131, 133, 136, 137, 141, 142, 152], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 43, 44, 46, 53, 70, 71, 87, 88, 89, 92], "show": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 20, 22, 23, 24, 25, 28, 29, 30, 33, 85, 87, 150, 151, 152], "how": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 33, 43, 85, 87], "us": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 59, 66, 67, 78, 79, 87, 89, 106, 134, 139], "an": [0, 1, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 22, 23, 25, 29, 30, 32, 35, 41, 42, 43, 45, 47, 48, 53, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 78, 80, 81, 83, 84, 85, 91, 92, 94, 95, 99, 101, 106, 109, 111, 114, 116, 117, 120, 124, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 150], "here": [0, 1, 2, 4, 5, 7, 10, 12, 16, 17, 18, 19, 20, 22, 23, 28, 29, 32, 33, 36, 83], "simpl": [0, 1, 4, 6, 7, 8, 12, 16, 17, 20, 23, 24, 25, 31, 33, 42, 66, 118, 136], "l2": [0, 11, 12, 13, 14, 16, 18, 19, 20, 22, 28, 29, 30, 33, 85, 86, 87, 94, 95, 131, 143], "penal": [0, 41, 85], "squar": [0, 8, 18, 32, 56, 57, 58, 59, 60, 61, 62, 63, 125], "norm": [0, 5, 6, 16, 19, 32, 53, 54, 64, 80, 82, 83, 84, 85, 89, 91, 109, 117, 137, 146], "admm": [0, 41, 47, 87, 99, 100, 143, 144], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 42, 54, 112, 114, 117, 121, 122, 126, 127, 129, 131, 150], "deepinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 42, 85, 86, 87, 91, 129, 131], "from": [0, 1, 4, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 52, 54, 56, 57, 58, 65, 67, 69, 70, 71, 72, 74, 78, 79, 80, 81, 82, 92, 109, 111, 112, 114, 116, 117, 120, 121, 122, 124, 126, 127, 129, 130, 131, 135, 136, 137, 141, 147, 148, 150], "pathlib": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "torch": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 39, 42, 46, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 148, 149, 150, 152, 153, 154, 155], "util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 106, 115, 117, 119, 120, 129, 131, 136, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "dataload": [0, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 136, 137], "data_fidel": [0, 4, 11, 12, 13, 14, 16, 18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 85, 86, 87, 91, 92, 99, 100, 101, 102, 103, 130, 131, 133, 134, 135, 143, 144], "optim_build": [0, 11, 12, 13, 14, 41, 85], "training_util": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "test": [0, 6, 11, 13, 35, 49, 50, 69, 70, 72, 74, 78, 83, 117, 150], "torchvis": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 52], "transform": [0, 1, 7, 8, 11, 12, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 52, 67, 73, 79, 83, 84, 109, 111, 118, 124, 125, 138, 139, 140], "demo": [0, 1, 4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 32, 33], "load_dataset": [0, 1, 8, 11, 13, 22, 28, 32, 33], "checkpoint": [0, 4, 13, 14, 19, 20, 22, 23, 24, 25, 79, 137], "base_dir": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "original_data_dir": [0, 1, 4, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "data_dir": [0, 1, 4, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "measur": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 22, 24, 25, 26, 28, 31, 32, 33, 37, 40, 42, 44, 46, 48, 49, 50, 52, 56, 57, 58, 59, 61, 62, 63, 65, 70, 82, 85, 86, 87, 88, 89, 91, 94, 106, 107, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 136, 137, 147], "results_dir": [0, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "deg_dir": [0, 4, 8, 11, 13, 22, 23, 24, 25, 32], "global": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "random": [0, 1, 2, 5, 7, 8, 11, 12, 13, 14, 19, 20, 22, 23, 24, 25, 28, 29, 30, 32, 33, 38, 42, 43, 46, 52, 57, 59, 62, 63, 69, 70, 71, 72, 73, 74, 78, 79, 109, 110, 111, 112, 116, 117, 118, 119, 124, 125, 126, 129, 130, 131, 133, 138, 139, 140, 153], "seed": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 109, 110, 111, 112, 116, 118, 119, 124, 125, 129, 130, 131, 133], "pytorch": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 69, 71, 72, 74, 75, 78, 79], "ensur": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38], "reproduc": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 109, 110, 111, 112, 116, 118, 119, 124, 125, 129, 131], "manual_se": [0, 1, 2, 7, 8, 11, 12, 13, 14, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 109, 110, 111, 112, 116, 118, 119, 124, 125, 129, 131], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 44, 48, 50, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 70, 71, 74, 75, 78, 79, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 97, 98, 99, 100, 101, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 143, 144, 146, 150, 153], "devic": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 50, 65, 69, 72, 74, 78, 83, 84, 107, 108, 109, 113, 116, 118, 119, 123, 124, 125, 129, 130, 131, 136, 137, 142, 147, 148], "get_freer_gpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 129, 131], "cuda": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 39, 107, 108, 129, 131], "is_avail": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 129, 131], "els": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 85, 88, 129, 131, 141], "cpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 50, 65, 69, 72, 74, 78, 83, 84, 107, 108, 109, 113, 116, 118, 119, 123, 124, 125, 129, 130, 131, 136, 137, 142, 148], "cbsd68": [0, 8, 32], "paper": [0, 2, 3, 11, 17, 20, 69, 70, 72, 100, 131, 139], "zhang": [0, 11, 72], "et": [0, 2, 11, 13, 18, 19, 38, 67, 70, 71, 72, 82], "al": [0, 2, 11, 13, 18, 19, 38, 67, 70, 71, 72, 82], "2017": [0, 11], "motion": [0, 11, 13], "kernel": [0, 3, 7, 11, 13, 16, 18, 44, 75, 97, 106, 133], "levin": [0, 11, 13], "2009": [0, 11, 13], "variabl": [0, 1, 4, 11, 12, 13, 14, 20, 25, 31, 32, 41, 43, 62, 63, 80, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101], "fetch": [0, 1, 11, 12, 14], "method": [0, 2, 6, 8, 10, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 28, 29, 30, 31, 32, 33, 38, 41, 42, 43, 44, 47, 48, 49, 50, 53, 54, 69, 70, 72, 80, 81, 85, 86, 88, 91, 93, 95, 99, 100, 108, 109, 111, 114, 117, 120, 123, 125, 129, 132, 134, 136, 137, 147], "l2_prior": 0, "dataset_nam": [0, 1, 11, 12, 13], "set3c": [0, 1, 8, 11, 12, 13, 28, 31, 32, 33], "img_siz": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 79, 108, 113, 117, 119, 148], "256": [0, 1, 7, 8, 11, 13, 23, 38, 68, 69, 71, 74, 78, 150], "dataset_path": [0, 13], "val_transform": [0, 1, 11, 13], "compos": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 72, 83, 89, 117], "centercrop": [0, 1, 8, 11, 13, 28, 32, 33], "totensor": [0, 1, 8, 11, 13, 23, 24, 25, 28, 29, 30, 32, 33, 36], "blurfft": [0, 11, 16, 18, 28], "modul": [0, 6, 11, 14, 16, 17, 28, 29, 30, 31, 33, 38, 39, 42, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 95, 109, 112, 114, 116, 117, 119, 120, 121, 122, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 152], "The": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 94, 95, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 123, 124, 125, 129, 130, 131, 133, 134, 135, 137, 141, 145, 150, 152], "class": [0, 1, 6, 7, 8, 11, 12, 14, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 38, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145], "perform": [0, 2, 8, 11, 14, 18, 19, 31, 32, 33, 38, 41, 43, 45, 51, 55, 66, 68, 70, 71, 75, 76, 77, 78, 80, 81, 85, 87, 92, 95, 99, 106, 107, 108, 131, 137, 139, 141, 142, 143, 144], "convolut": [0, 2, 3, 20, 44, 68, 69, 70, 72, 74, 79, 82, 97, 106, 107, 108], "via": [0, 12, 16, 18, 19, 20, 24, 25, 36, 39, 42, 44, 45, 47, 50, 57, 69, 71, 72, 78, 82, 97, 108, 109, 111, 116, 117, 120, 124, 125], "fourier": [0, 7, 118], "choos": [0, 4, 7, 8, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 39, 45, 58, 71, 85, 87], "gaussian": [0, 1, 2, 3, 5, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 25, 28, 29, 30, 33, 40, 43, 44, 61, 62, 91, 97, 109, 112, 113, 114, 117, 119, 121, 123, 126, 128, 131, 135, 154], "standard": [0, 3, 5, 7, 11, 12, 14, 17, 18, 19, 20, 32, 36, 38, 40, 41, 43, 60, 61, 62, 71, 85, 91, 112, 114, 115, 119, 121, 123, 126, 128, 134, 135, 143, 144, 154], "deviat": [0, 3, 7, 11, 12, 13, 14, 17, 18, 19, 38, 40, 41, 43, 61, 62, 85, 91, 99, 112, 114, 119, 121, 123, 126, 128, 143, 144], "3": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 39, 54, 69, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 86, 91, 106, 109, 110, 111, 112, 116, 118, 119, 123, 124, 125, 129, 131, 150], "add": [0, 1, 11, 13, 79, 114, 117, 120, 121, 122, 126, 127, 145], "nois": [0, 1, 3, 7, 11, 12, 13, 14, 18, 19, 24, 25, 33, 38, 40, 41, 43, 44, 52, 57, 61, 62, 63, 67, 69, 70, 71, 72, 73, 79, 82, 83, 91, 93, 97, 107, 109, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 133, 134, 135, 137, 146], "03": [0, 6, 11, 12, 13, 14, 15, 17, 18, 19, 22, 28, 29, 30, 32, 33, 34, 48], "filter": [0, 2, 5, 7, 11, 13, 16, 18, 28, 67, 75, 106, 107, 108, 113, 117, 119, 123, 125, 128], "filter_torch": 0, "gaussian_blur": [0, 7, 28, 107, 108], "sigma": [0, 2, 3, 4, 6, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 28, 31, 32, 33, 36, 40, 42, 43, 44, 61, 62, 66, 67, 69, 71, 72, 73, 75, 78, 79, 82, 91, 93, 96, 97, 101, 104, 112, 114, 121, 123, 126, 128, 129, 130, 131, 134, 135, 142], "noise_level_img": [0, 11, 12, 13, 14, 28, 31, 33], "n_channel": [0, 1, 4, 8, 11, 12, 13, 14, 22, 28, 29, 30, 31, 32, 33], "color": [0, 1, 5, 6, 7, 8, 11, 12, 13, 14, 28, 31, 32, 33, 38], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 41, 42, 43, 44, 45, 52, 54, 57, 59, 61, 62, 63, 64, 68, 69, 71, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 140, 141, 142, 143, 144, 146, 150, 153], "grai": [0, 1, 7, 8, 11, 12, 13, 14, 28, 31, 32, 33, 129, 131], "scale": [0, 1, 8, 11, 12, 13, 14, 23, 24, 25, 28, 31, 32, 33, 79, 82, 88], "instanc": [0, 12, 18, 30, 31, 39, 41, 43, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 85, 87, 92, 95, 99, 100, 101, 102, 103, 143, 144], "enabl": [0, 19, 42, 141, 142], "comput": [0, 1, 2, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 72, 75, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 107, 109, 111, 113, 114, 116, 117, 119, 120, 124, 125, 130, 131, 132, 133, 134, 135, 136, 141, 142, 146, 147, 148, 150, 151], "effic": 0, "backward": [0, 28, 45, 47, 88, 89, 125, 141], "p": [0, 3, 11, 13, 16, 19, 20, 40, 44, 55, 62, 63, 85, 97, 121, 122, 123, 130, 135], "noise_model": [0, 2, 6, 7, 11, 12, 13, 14, 16, 17, 18, 20, 28, 31, 33, 36, 42, 112, 114, 117, 120, 121, 122, 126, 127, 129, 131], "gaussiannois": [0, 1, 2, 6, 7, 11, 12, 13, 14, 16, 17, 18, 20, 28, 31, 33, 36, 42, 112, 119, 129, 131], "parallel": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 39, 67], "gpu": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 50, 65, 69, 72, 74, 78, 83, 84, 116, 118, 123, 125, 136, 137, 147, 148], "fasten": [0, 1, 8, 11, 12, 13, 14, 22, 24, 25, 28, 29, 30, 32, 33], "train": [0, 1, 4, 9, 10, 11, 12, 13, 14, 18, 19, 36, 37, 38, 39, 44, 45, 47, 48, 49, 50, 60, 65, 68, 69, 71, 72, 74, 78, 82, 97, 111, 116, 117, 120, 133, 134, 135, 136, 142, 147, 152], "otherwis": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 52, 53, 54, 55, 57, 59, 71, 73, 85, 87, 106, 107, 109, 113, 117, 119, 124, 125], "all": [0, 1, 2, 8, 10, 11, 12, 13, 14, 19, 22, 23, 24, 25, 28, 29, 30, 32, 33, 35, 38, 39, 41, 42, 48, 51, 55, 66, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 85, 86, 92, 99, 116, 137, 143, 144], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 56, 57, 70, 72, 82, 83, 84, 85, 87, 92, 94, 100, 101, 102, 104, 106, 107, 109, 110, 111, 113, 115, 117, 119, 120, 125, 130, 133, 134, 135, 137, 138, 142, 146, 148, 150, 152], "synchron": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33], "num_work": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 50], "4": [0, 1, 3, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 38, 50, 68, 69, 73, 75, 78, 79, 82, 85, 86, 87, 91, 107, 108, 117, 118, 119, 125, 141, 150], "n_images_max": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33], "maxim": [0, 8, 11, 13, 28, 29, 30, 32, 33, 38, 86, 94, 95], "number": [0, 2, 4, 6, 8, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 39, 47, 50, 62, 63, 66, 68, 69, 70, 72, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 109, 117, 120, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 150, 153, 154], "restor": [0, 11, 13, 22, 28, 29, 30, 33, 38, 47, 69, 79, 129, 131], "input": [0, 2, 3, 7, 11, 12, 13, 14, 18, 19, 31, 33, 38, 41, 43, 53, 54, 66, 68, 69, 70, 71, 72, 73, 74, 78, 79, 82, 87, 92, 97, 99, 100, 101, 102, 103, 106, 108, 109, 111, 113, 115, 116, 119, 122, 123, 125, 137, 138, 139, 140, 141, 143, 144], "measurement_dir": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33], "deepinv_dataset_path": 0, "generate_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36], "train_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 50], "test_dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 50], "none": [0, 1, 11, 12, 13, 22, 23, 24, 25, 28, 33, 39, 50, 65, 66, 69, 71, 72, 74, 75, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 95, 99, 113, 118, 119, 120, 126, 129, 130, 131, 133, 134, 135, 137, 139, 141, 143, 144, 148, 150, 151, 152], "save_dir": [0, 1, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 50, 150, 151, 152], "train_datapoint": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 50], "vector": [0, 1, 8, 11, 13, 16, 22, 23, 24, 25, 28, 29, 30, 32, 33, 40, 54, 61, 62, 63, 68, 70, 80, 85, 111, 135, 137], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 39, 41, 44, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 97, 98, 101, 102, 105, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135], "00": [0, 1, 2, 4, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 48], "": [0, 1, 2, 4, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 44, 69, 71, 72, 74, 78, 79, 80, 81, 97, 106, 109, 111, 113, 118, 133, 136, 137], "100": [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 85, 88, 89, 109, 117, 129, 131, 132], "45": [0, 6, 7, 13, 19, 22, 29, 31, 125], "31it": [0, 29, 32], "ha": [0, 1, 2, 3, 5, 6, 8, 11, 13, 17, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 58, 69, 85, 86, 87, 94, 95, 106, 107, 108, 109, 113, 116, 118, 119, 124, 125, 129, 130, 150], "been": [0, 1, 2, 8, 11, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 58, 87], "save": [0, 1, 8, 9, 10, 11, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 33, 36, 46, 48, 50, 79, 84, 86, 88, 93, 95, 109, 111, 116, 117, 120, 124, 132, 136, 137, 142, 144, 147, 150, 151, 152], "function": [0, 1, 2, 3, 6, 7, 8, 11, 12, 13, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 43, 45, 46, 50, 51, 52, 53, 54, 55, 57, 58, 59, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 81, 85, 86, 87, 88, 89, 91, 92, 94, 95, 99, 100, 101, 102, 107, 109, 111, 117, 120, 123, 125, 132, 133, 134, 135, 136, 137, 141, 143, 144], "instanti": [0, 11, 12, 13, 14, 85], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 146, 148, 150], "proxim": [0, 6, 12, 13, 14, 18, 31, 41, 42, 43, 45, 80, 81, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 99, 105, 111, 113, 116, 117, 134, 143, 144], "gradient": [0, 12, 13, 14, 19, 20, 24, 38, 41, 43, 45, 52, 58, 74, 80, 81, 86, 87, 89, 91, 94, 95, 96, 98, 99, 103, 105, 109, 113, 117, 120, 125, 130, 137, 141, 143, 144], "descent": [0, 14, 30, 43, 86, 94, 95, 99, 103, 105, 120, 143, 144], "follow": [0, 11, 12, 14, 16, 18, 19, 20, 29, 32, 35, 38, 40, 41, 43, 47, 61, 62, 63, 84, 85, 110, 130, 131, 135, 142], "min_": [0, 2, 70], "x": [0, 1, 2, 3, 5, 6, 7, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 149, 153, 154, 155], "frac": [0, 16, 18, 19, 20, 25, 29, 30, 44, 45, 53, 54, 59, 61, 62, 63, 73, 80, 81, 85, 88, 89, 91, 97, 98, 109, 111, 117, 121, 122, 130, 131, 134, 135, 141, 146], "y": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 16, 17, 18, 19, 20, 23, 24, 25, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 71, 76, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 100, 101, 102, 103, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 133, 135, 136, 137, 141, 142], "ax": [0, 20, 29, 30, 32, 41, 44, 85, 86, 87, 89, 91, 101, 109, 111, 117, 120, 125], "_2": [0, 19, 23, 25, 29, 30, 32, 41, 53, 54, 61, 62, 63, 64, 80, 81, 85, 87, 88, 89, 91, 98, 134, 135], "rho": [0, 18, 19], "where": [0, 2, 3, 7, 8, 11, 12, 16, 18, 19, 20, 23, 24, 25, 29, 30, 31, 32, 36, 41, 42, 43, 44, 45, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 94, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 130, 131, 135, 137, 141, 142, 146, 150, 152], "A": [0, 4, 6, 8, 9, 10, 12, 13, 16, 18, 19, 23, 27, 28, 29, 30, 31, 32, 37, 40, 41, 42, 43, 44, 45, 47, 48, 54, 56, 61, 62, 63, 65, 69, 71, 80, 81, 84, 85, 86, 87, 88, 89, 91, 92, 101, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 134, 135, 136, 137, 142, 147, 150], "forward": [0, 1, 9, 10, 19, 22, 28, 29, 30, 31, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 97, 100, 101, 102, 103, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 145, 147, 150], "regular": [0, 2, 4, 10, 12, 14, 15, 18, 20, 22, 24, 28, 29, 30, 32, 33, 40, 41, 43, 45, 47, 48, 49, 50, 58, 59, 72, 74, 85, 86, 87, 90, 91, 92, 95, 96, 97, 98, 99, 113, 114, 117, 120, 134, 135, 136, 141, 142, 143, 144, 147], "paramet": [0, 2, 4, 8, 11, 12, 13, 16, 18, 19, 20, 32, 43, 45, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152], "creat": [0, 5, 9, 10, 12, 42, 46, 48, 49, 50, 54, 85, 86, 87, 91, 109, 111, 112, 114, 117, 118, 120, 129, 133, 147, 150], "which": [0, 1, 4, 5, 7, 11, 13, 16, 17, 18, 19, 20, 22, 24, 25, 28, 29, 30, 32, 33, 37, 38, 39, 41, 42, 44, 45, 47, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 69, 72, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 108, 109, 113, 116, 117, 120, 124, 125, 129, 130, 133, 136, 137, 142, 148], "inherit": [0, 6, 13, 16, 31, 39, 41, 42, 43, 118], "l2prior": 0, "def": [0, 4, 6, 12, 13, 16, 18, 19, 30, 31, 32, 87, 133], "__init__": [0, 6, 12, 13, 16, 31, 133], "self": [0, 3, 6, 12, 13, 16, 26, 31, 47, 48, 49, 50, 52, 56, 57, 58, 59, 61, 62, 63, 65, 72, 82, 86, 88, 91, 93, 95, 109, 111, 112, 116, 117, 118, 120, 122, 124, 129, 133, 136, 137, 138, 139, 142, 144, 147], "arg": [0, 13, 30, 31, 32, 41, 43, 80, 81, 83, 84, 85, 86, 87, 90, 93, 95, 96, 97, 98, 117, 141, 142], "kwarg": [0, 6, 12, 13, 31, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 86, 87, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 124, 125, 136, 141, 142, 143, 144], "super": [0, 6, 10, 12, 15, 16, 31, 34, 48, 49, 50, 60, 72, 74, 85, 86, 91, 93, 95, 96, 99, 113, 114, 117, 120, 133, 136, 137, 139, 142, 144, 147, 152], "explicit_prior": [0, 13, 95], "true": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 49, 50, 52, 53, 54, 57, 59, 65, 66, 70, 71, 72, 73, 75, 76, 77, 79, 82, 85, 87, 92, 94, 95, 100, 101, 102, 109, 113, 116, 117, 122, 124, 125, 129, 130, 131, 132, 133, 136, 137, 141, 146, 150, 151, 152], "g": [0, 1, 3, 10, 12, 13, 16, 19, 23, 29, 30, 36, 37, 38, 41, 42, 45, 50, 52, 56, 57, 58, 59, 60, 73, 85, 87, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 112, 116, 122, 125, 130, 132, 137, 142, 143, 144, 146], "5": [0, 2, 4, 5, 6, 7, 8, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 62, 63, 71, 76, 77, 79, 80, 81, 82, 85, 86, 87, 91, 109, 112, 126, 129, 131, 135, 139, 141], "view": [0, 7, 19, 20, 139], "shape": [0, 2, 7, 17, 18, 19, 20, 30, 68, 69, 79, 88, 109, 119, 124, 145, 150], "dim": [0, 3, 6, 7, 17, 19, 20, 78, 79], "return": [0, 1, 4, 6, 12, 13, 14, 16, 17, 18, 19, 20, 23, 30, 31, 32, 38, 41, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 133, 136, 137, 138, 139, 140, 141, 145, 147, 148, 149, 150, 153, 154, 155], "specifi": [0, 7, 11, 12, 13, 14, 32, 33, 72, 95], "select": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 32, 33, 85], "fidel": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 32, 33, 40, 43, 45, 85, 86, 87, 89, 91, 92, 94, 99, 101, 130, 131, 143, 144], "term": [0, 4, 11, 12, 13, 14, 18, 19, 22, 28, 29, 30, 32, 33, 40, 41, 43, 45, 80, 81, 85, 86, 87, 89, 90, 92, 95, 96, 98, 99, 101, 131, 143, 144], "specif": [0, 6, 11, 13, 38, 85, 87], "given": [0, 18, 44, 53, 54, 85, 87, 97, 101, 102, 103, 104, 105, 116, 117, 123], "note": [0, 16, 18, 19, 28, 30, 33, 39, 86, 88, 94, 101, 104, 136, 137], "have": [0, 2, 3, 10, 14, 17, 18, 19, 23, 38, 42, 47, 54, 71, 86, 117, 118, 120, 123, 124, 129, 142, 146], "params_algo": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 31, 32, 33, 41, 85, 99, 142, 143, 144, 152], "stepsiz": [0, 4, 11, 12, 13, 14, 22, 28, 29, 30, 32, 33, 41, 43, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 102, 103, 105, 142, 143, 144], "lambda": [0, 4, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 32, 33, 40, 41, 43, 81, 83, 84, 85, 86, 87, 91, 92, 95, 99, 100, 101, 102, 103, 104, 105, 111, 117, 120, 131, 132, 133, 134, 135, 142, 143, 144], "log": [0, 14, 16, 19, 20, 28, 29, 30, 31, 33, 38, 44, 91, 94, 97, 109, 124, 130, 133, 134, 135], "verbos": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 53, 54, 70, 80, 81, 85, 117, 129, 130, 131, 132, 133, 134, 135, 136, 137], "plot_metr": [0, 11, 13, 14, 28, 31, 33, 136, 137], "converg": [0, 5, 6, 11, 12, 13, 14, 17, 31, 33, 41, 43, 53, 54, 80, 81, 85, 86, 87, 88, 89, 92, 94, 95, 104, 117, 132, 133, 134, 135], "metric": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 28, 29, 30, 31, 32, 33, 52, 55, 56, 57, 58, 59, 60, 85, 87, 136, 141, 151], "along": [0, 12, 14, 31, 33, 85, 87, 136, 138, 140], "curv": [0, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "early_stop": [0, 11, 12, 13, 14, 85, 87], "stop": [0, 2, 11, 12, 13, 70, 85, 87], "when": [0, 7, 12, 13, 16, 19, 20, 24, 35, 39, 43, 57, 58, 70, 71, 82, 86, 87, 94, 95, 117, 122, 131], "criteria": [0, 11, 13, 133], "reach": [0, 12, 13, 85, 87], "crit_conv": [0, 13, 85, 88, 89, 133, 135], "cost": [0, 12, 13, 85, 87, 92, 99, 100, 101, 102, 103, 143, 144], "differ": [0, 2, 13, 19, 23, 24, 30, 37, 43, 46, 57, 58, 64, 70, 79, 119, 129, 130, 145], "between": [0, 2, 5, 11, 13, 14, 18, 19, 40, 41, 52, 53, 59, 66, 82, 85, 86, 92, 94, 95, 117, 125, 131, 133, 135, 137, 150], "consecut": [0, 13, 86, 94, 95], "iter": [0, 1, 2, 4, 5, 6, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 28, 32, 33, 34, 45, 48, 49, 50, 53, 54, 60, 70, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 109, 117, 120, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 147, 152], "smaller": [0, 13, 41, 59, 71, 86, 94, 95, 106, 107, 113, 119, 134, 135], "than": [0, 1, 4, 13, 18, 29, 32, 41, 46, 86, 94, 95, 106, 107, 109, 113, 117, 119, 124, 125, 134, 135, 150], "thres_conv": [0, 13, 85, 132], "1e": [0, 2, 5, 6, 8, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 51, 54, 80, 81, 85, 87, 88, 89, 141], "backtrack": [0, 13, 85], "fals": [0, 1, 4, 7, 8, 11, 12, 13, 14, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 41, 49, 50, 53, 54, 55, 59, 65, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 85, 87, 92, 99, 100, 101, 102, 109, 122, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 143, 144, 146, 148, 150], "backtrak": 0, "automat": [0, 13, 14, 19, 35, 38, 86, 94, 95, 96], "adjust": [0, 13, 111], "max_it": [0, 4, 11, 12, 13, 14, 16, 17, 20, 22, 28, 29, 30, 31, 32, 33, 53, 54, 83, 85, 87, 88, 89, 117, 120, 130, 131, 132, 133, 134, 135], "500": 0, "maximum": [0, 17, 18, 44, 53, 54, 80, 81, 85, 87, 88, 89, 97, 106, 117, 120, 126, 132, 140, 141, 146, 150], "ip": [0, 11, 12, 13, 14], "model": [0, 9, 10, 18, 21, 22, 23, 24, 25, 28, 29, 30, 33, 39, 40, 41, 43, 44, 45, 46, 48, 52, 53, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 100, 101, 102, 107, 109, 111, 113, 114, 115, 116, 117, 119, 120, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 144, 146, 147, 148, 150, 152], "g_first": [0, 4, 13, 30, 32, 41, 92, 99, 100, 101, 102, 143, 144], "can": [0, 1, 4, 5, 6, 7, 8, 10, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 78, 79, 82, 83, 84, 85, 87, 91, 97, 99, 107, 109, 111, 113, 116, 117, 119, 120, 124, 125, 129, 130, 133, 136, 137, 141, 142, 143, 144, 152], "batch_siz": [0, 1, 8, 11, 13, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 50, 69], "wandb_vi": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 136, 137], "plot": [0, 1, 5, 6, 7, 8, 11, 13, 18, 19, 22, 23, 24, 25, 28, 31, 32, 85, 136, 137, 141, 151, 152], "weight": [0, 4, 8, 11, 13, 14, 19, 22, 23, 24, 25, 28, 29, 31, 32, 33, 52, 57, 64, 69, 71, 72, 74, 78, 79, 136, 137, 142], "bia": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 72, 76, 77, 79, 82], "plot_imag": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 136, 137], "hdf5dataset": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36], "shuffl": [0, 1, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 32, 33, 36, 69, 74], "test_dataload": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 136], "save_fold": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 136], "process": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 37, 50, 67, 88, 109, 117, 120, 131], "out": [0, 8, 11, 13, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 47, 54, 109, 133, 134, 135], "current": [0, 12, 13, 16, 17, 18, 19, 22, 31, 85, 87, 92, 100, 101, 102, 103], "crit": [0, 13, 17, 80, 81], "82e": 0, "06": [0, 13, 18, 19, 22, 23, 29, 30, 34, 48], "object": [0, 2, 5, 7, 13, 17, 20, 22, 28, 29, 30, 31, 32, 33, 41, 43, 92, 103, 117, 120, 141, 145, 150], "00e": [0, 13, 17], "05": [0, 7, 13, 18, 19, 22, 23, 24, 25, 29, 30, 31, 32, 33, 36, 42, 80, 81, 85, 88, 89, 131, 134, 135], "33": [0, 2, 8, 13, 17, 18, 19, 21, 22, 29, 48], "19": [0, 2, 8, 17, 18, 19, 22, 23, 24, 25, 28, 30, 31, 32, 33], "52": [0, 19, 22, 25, 28, 29, 30, 33], "7": [0, 5, 8, 12, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 68, 76, 107, 108, 113, 116, 131], "72e": 0, "67": [0, 8, 13, 17, 18, 19, 22, 28], "02": [0, 8, 14, 16, 17, 18, 19, 22, 23, 24, 26, 28, 29, 30, 31, 32, 48, 71, 131], "53": [0, 8, 18, 19, 22, 24, 28, 32], "60": [0, 17, 18, 19, 22, 23, 28, 29, 30, 31, 33], "9": [0, 8, 9, 13, 17, 18, 19, 20, 22, 23, 24, 28, 29, 30, 31, 32, 33, 59, 75, 85], "67e": 0, "07": [0, 15, 18, 19, 22, 23, 29, 30, 48], "40": [0, 8, 17, 18, 19, 22, 23, 28, 29, 30, 31, 33, 34, 48], "50": [0, 3, 4, 8, 11, 17, 18, 19, 22, 23, 24, 28, 29, 31, 32, 38, 54, 79, 86, 87, 95, 117, 120, 123, 141], "psnr": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 85, 136, 141, 146], "No": [0, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "learn": [0, 2, 8, 11, 13, 24, 25, 26, 28, 32, 33, 34, 35, 38, 43, 48, 49, 50, 52, 56, 57, 60, 65, 69, 70, 72, 76, 77, 82, 83, 84, 86, 91, 92, 93, 95, 101, 105, 109, 111, 114, 116, 117, 118, 120, 125, 136, 137, 138, 139, 142, 144, 147, 152], "rec": [0, 5, 6, 8, 11, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "16": [0, 5, 8, 11, 14, 16, 18, 19, 22, 28, 29, 30, 31, 32, 33, 107, 108, 113, 124], "13": [0, 6, 8, 13, 18, 19, 22, 23, 28, 29, 30, 31, 32], "31": [0, 8, 15, 19, 22, 25, 28], "db": [0, 2, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "17": [0, 8, 18, 19, 22, 28, 30, 31, 32, 33], "68": [0, 5, 19, 22, 29, 30], "679091771443684": 0, "3090783392264167": 0, "130569140116375": 0, "3114573240802421": 0, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 48, 57, 64, 66, 80, 81, 84, 140], "run": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 51, 55, 66, 67, 68, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 99, 129, 130, 131, 132, 133, 135, 143, 144], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 43, 71, 85, 109, 111, 113, 116, 123, 132, 136, 137], "script": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "minut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "8": [0, 2, 5, 8, 11, 13, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 38, 73, 79, 107, 108, 117], "036": [0, 9, 48], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 43, 85, 92, 106, 116, 117, 118, 119, 123], "jupyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "notebook": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "demo_custom_prior": [0, 9, 48], "ipynb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 67], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 48], "galleri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 48], "sphinx": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "deep": [1, 9, 10, 11, 34, 35, 48, 49, 50, 60, 65, 68, 69, 70, 72, 85, 86, 91, 93, 95, 99, 108, 111, 114, 116, 117, 120, 128, 136, 137, 141, 142, 143, 146, 147, 148, 150], "invers": [1, 2, 5, 6, 7, 8, 13, 16, 17, 20, 22, 23, 25, 35, 37, 40, 42, 43, 45, 46, 47, 52, 56, 57, 60, 61, 62, 63, 65, 106, 108, 115, 116, 118, 120, 125, 129, 136], "problem": [1, 2, 6, 8, 17, 22, 23, 28, 29, 32, 35, 37, 41, 43, 45, 46, 47, 70, 80, 81, 83, 84, 85, 87, 92, 107, 109, 111, 112, 113, 115, 117, 119, 125, 129, 131], "natur": [1, 24, 46, 71], "contain": [1, 3, 4, 12, 22, 28, 29, 30, 32, 33, 37, 41, 42, 43, 44, 45, 49, 50, 57, 73, 85, 87, 92, 99, 100, 101, 102, 103, 106, 107, 108, 123, 133, 134, 135, 138, 140, 143, 144, 148, 152], "set3": 1, "imagefold": 1, "you": [1, 6, 10, 17, 18, 19, 20, 22, 23, 24, 25, 28, 33, 35, 47], "ani": [1, 6, 35, 47, 52, 56, 57, 58, 59, 60, 73, 101, 117, 118, 120, 136, 137, 141, 142], "other": [1, 5, 18, 36, 39, 41, 43, 52, 56, 57, 58, 59, 60, 67, 84, 117, 120, 136, 137, 145], "long": [1, 19, 137], "set": [1, 2, 4, 7, 13, 16, 17, 18, 20, 28, 29, 30, 31, 33, 37, 38, 39, 42, 44, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 69, 70, 71, 72, 74, 78, 79, 84, 88, 91, 97, 100, 101, 102, 114, 116, 117, 120, 121, 122, 126, 127, 133, 135, 136, 137], "up": [1, 4, 6, 28, 29, 31, 33, 42, 71], "oper": [1, 9, 10, 18, 19, 24, 25, 26, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 52, 56, 57, 58, 59, 61, 62, 63, 64, 65, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 145, 147, 150], "32": [1, 2, 4, 6, 8, 11, 13, 14, 16, 17, 19, 20, 22, 24, 25, 28, 29, 30, 31, 32, 33, 66, 76, 77, 109, 113, 117, 119, 124, 129, 131], "batch": [1, 11, 13, 22, 23, 29, 30, 50, 67, 69, 70, 71, 72, 82, 85, 86, 88, 91, 123, 136, 150], "channel": [1, 2, 3, 5, 6, 7, 11, 13, 31, 38, 68, 69, 71, 72, 74, 78, 79, 82, 109, 110, 116, 118, 123, 124, 150], "dimens": [1, 11, 13, 66, 71, 79, 86, 88, 89, 94, 111, 138, 140], "displai": [1, 107, 108, 113, 119], "unsqueez": [1, 6, 7, 11, 13, 17, 20, 31, 86, 111], "zip": [1, 8, 10, 11, 19, 32, 33], "385k": [1, 11, 33], "ib": [1, 8, 11, 22, 32, 33], "46": [1, 8, 19, 21, 22, 28, 29], "7mib": [1, 8, 22, 33], "denois": [1, 2, 4, 10, 11, 12, 14, 15, 16, 20, 22, 26, 28, 29, 32, 33, 40, 41, 44, 45, 47, 48, 49, 50, 58, 61, 62, 63, 65, 67, 69, 71, 72, 73, 74, 78, 79, 82, 83, 84, 85, 86, 91, 93, 95, 96, 97, 99, 111, 113, 114, 117, 120, 121, 122, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 142, 143, 144, 147], "ignor": [1, 38, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "attribut": [1, 18, 39, 100, 101, 102, 114, 121, 122, 126, 127, 152], "e": [1, 3, 6, 10, 12, 16, 17, 18, 22, 23, 24, 25, 36, 37, 38, 41, 42, 43, 44, 45, 50, 52, 53, 54, 56, 57, 58, 59, 60, 69, 72, 73, 74, 83, 85, 86, 87, 88, 89, 91, 94, 97, 99, 107, 108, 109, 110, 112, 116, 117, 118, 122, 125, 129, 133, 134, 135, 137, 141, 142, 143, 144, 146], "label": [1, 25, 29, 41, 43, 71, 85], "physic": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 40, 41, 43, 44, 50, 52, 56, 57, 58, 59, 61, 62, 63, 65, 70, 85, 86, 87, 88, 89, 91, 92, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 141], "dinv_dataset_path": [1, 11, 13], "133": [1, 8, 19, 28, 33], "57it": [1, 8, 28], "over": [1, 19, 73, 80, 81, 87, 125], "pair": [1, 8, 23, 32, 36, 37, 49, 50, 59, 136], "signal": [1, 6, 7, 37, 38, 40, 46, 49, 50, 52, 56, 57, 60, 65, 88, 97, 106, 107, 109, 110, 111, 113, 117, 119, 120, 123, 125, 146], "adapt": [1, 46, 58, 61, 62, 63, 71, 79, 80, 81, 85], "build": [1, 10, 12, 20, 21, 38, 39, 45, 47, 48, 75, 86, 91, 95, 97, 99, 108, 111, 114, 117, 120, 133, 135, 143, 144, 146, 147, 148, 150], "custom": [1, 4, 9, 10, 14, 15, 21, 32, 34, 47, 48, 49, 50, 60, 72, 75, 85, 86, 91, 92, 93, 95, 97, 99, 105, 108, 109, 111, 113, 114, 117, 119, 120, 124, 128, 133, 135, 136, 137, 142, 143, 144, 146, 147, 148, 150, 151, 152], "case": [1, 3, 12, 19, 36, 38, 39, 43, 50, 71, 88, 89, 92, 109, 117, 120, 124, 125, 130], "doesn": [1, 97], "t": [1, 3, 18, 19, 29, 30, 71, 75, 80, 87, 94, 97, 115, 123, 130, 131, 136, 141], "meet": [1, 20], "need": [1, 4, 16, 18, 32, 35, 39, 41, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 101, 122, 137], "373": [1, 9, 48], "demo_dataset": [1, 9, 48], "noisi": [2, 16, 17, 18, 19, 20, 38, 42, 58, 61, 62, 63, 67, 69, 71, 72, 79, 82, 83, 84, 111, 114, 119, 120, 121, 122, 126, 127], "incomplet": [2, 10, 17, 20, 26, 48, 49, 50, 52, 56, 57, 65, 82, 109, 111, 116, 117, 120, 125, 136, 137, 147], "base": [2, 16, 19, 36, 41, 43, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 145], "ulyanov": [2, 70], "2018": [2, 31, 70], "minim": [2, 23, 29, 32, 41, 43, 70, 80, 85, 92, 104, 130], "loss": [2, 8, 10, 20, 22, 23, 26, 28, 29, 30, 31, 32, 33, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 82, 86, 91, 111, 112, 117, 120, 122, 136, 137, 147], "theta": [2, 8, 23, 32, 43, 70, 130, 131], "af_": [2, 70], "z": [2, 12, 31, 41, 43, 44, 61, 62, 63, 70, 87, 89, 92, 94, 97, 100, 102, 111, 113, 114, 117, 120, 121, 126, 135], "f_": [2, 8, 70], "decod": [2, 68, 69, 70], "network": [2, 9, 10, 18, 19, 20, 40, 43, 45, 48, 49, 50, 53, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 78, 79, 82, 107, 109, 111, 113, 116, 117, 119, 120, 125, 130, 131, 136, 137, 147], "should": [2, 3, 12, 22, 28, 41, 50, 51, 55, 59, 61, 62, 63, 66, 68, 70, 75, 76, 77, 78, 79, 80, 81, 95, 99, 101, 105, 107, 109, 111, 113, 115, 117, 118, 119, 124, 125, 129, 131, 133, 135, 136, 142, 143, 144, 150], "earli": [2, 13, 70], "avoid": [2, 16, 70, 133], "overfit": [2, 70], "adam": [2, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 70], "optim": [2, 4, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 43, 44, 45, 48, 70, 72, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 114, 117, 120, 124, 130, 131, 133, 134, 135, 137, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152], "load_url_imag": [2, 12, 14, 16, 17, 18, 19, 20], "lionel": [2, 16, 17, 20], "messi": [2, 16, 17, 20], "wikipedia": [2, 16, 17, 20, 109, 117, 125], "url": [2, 4, 7, 12, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 79, 148], "http": [2, 4, 7, 10, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 29, 31, 47, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 65, 71, 72, 73, 79, 80, 81, 101, 109, 113, 115, 117, 123, 125, 129, 130, 131, 134, 135, 136, 137], "upload": [2, 16, 17, 20], "wikimedia": [2, 16, 17, 20], "org": [2, 16, 17, 20, 52, 53, 54, 55, 57, 61, 62, 63, 65, 72, 73, 109, 113, 115, 117, 123, 125, 129, 130, 131, 134, 135], "common": [2, 16, 17, 20, 28, 33, 41], "b": [2, 3, 4, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 30, 32, 61, 62, 63, 75, 79, 86, 88, 91, 118, 123, 133, 134, 135, 146, 150], "b4": [2, 16, 17, 20], "argentina": [2, 16, 17, 20], "2022": [2, 16, 17, 20], "fifa": [2, 16, 17, 20], "world": [2, 16, 17, 20], "cup_": [2, 16, 17, 20], "28crop": [2, 16, 17, 20], "29": [2, 13, 16, 17, 18, 19, 20, 22, 31, 32], "jpg": [2, 16, 17, 20], "_c": [2, 7, 20], "0x7f1334107b50": [2, 7, 20], "inpaint": [2, 4, 8, 10, 17, 19, 20, 23, 34, 47, 48, 49, 50, 60, 84, 86, 88, 93, 95, 111, 117, 120, 129, 131, 136, 137, 142, 144, 147], "level": [2, 3, 4, 7, 12, 14, 16, 17, 18, 19, 20, 29, 32, 33, 38, 41, 44, 67, 69, 71, 72, 73, 79, 82, 83, 84, 91, 93, 94, 97, 123, 129, 130, 131, 134, 135], "mask": [2, 4, 6, 7, 8, 16, 17, 19, 20, 22, 23, 24, 32, 58, 59, 111, 116, 118, 124, 129, 131], "tensor_s": [2, 7, 17, 19, 20, 23, 111, 116, 129, 131], "appli": [2, 12, 16, 17, 18, 19, 20, 22, 33, 41, 67, 71, 73, 82, 85, 97, 107, 108, 111, 113, 116, 117, 118, 119, 123, 124, 138, 139, 140], "onli": [2, 6, 8, 11, 12, 13, 16, 18, 19, 22, 23, 24, 25, 28, 31, 32, 41, 50, 69, 70, 71, 72, 74, 78, 79, 83, 84, 86, 95, 116, 117, 128, 130, 133, 136, 137, 141, 150], "work": [2, 3, 4, 8, 13, 17, 18, 19, 22, 29, 32, 70], "certain": [2, 36, 70], "recommend": [2, 4, 5, 6, 8, 18, 22, 24, 25, 29, 32, 39, 41, 47, 70, 109, 117, 124], "convdecod": [2, 70], "rate": [2, 70, 78, 79, 137], "manual": [2, 14], "obtain": [2, 5, 7, 16, 20, 44, 45, 73, 129, 130, 131, 133, 134, 139], "good": [2, 8, 32, 125], "howev": [2, 22, 39, 52, 56, 57, 58, 59, 60, 70, 119], "valu": [2, 5, 6, 7, 16, 17, 18, 22, 25, 28, 29, 30, 41, 42, 44, 46, 61, 62, 63, 70, 71, 79, 80, 85, 87, 97, 99, 108, 111, 118, 122, 124, 125, 129, 131, 134, 135, 137, 143, 144, 146, 150], "mai": [2, 3, 41, 43, 70, 82, 85, 92, 122], "experi": [2, 70], "small": [2, 25, 28, 33, 41, 62, 63, 80, 125], "reduc": [2, 18, 19, 22, 23, 24, 25], "runtim": 2, "could": 2, "improv": [2, 65], "more": [2, 4, 16, 32, 38, 41, 42, 43, 45, 69, 71, 72, 73, 74, 78, 79, 83, 85, 90, 99, 109, 117, 120, 125, 134, 135, 136, 137, 139, 141, 143, 144], "lr": [2, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "64": [2, 5, 6, 7, 8, 12, 18, 19, 22, 23, 24, 25, 28, 29, 30, 33, 69, 72, 74, 78], "per": [2, 3, 17, 20, 22, 23, 38, 43, 44, 69, 71, 72, 78, 123, 124, 138, 140], "layer": [2, 22, 31, 33, 38, 45, 66, 68, 69, 71, 72, 78, 79, 82], "in_siz": [2, 68], "size": [2, 3, 7, 8, 11, 13, 16, 18, 19, 20, 22, 28, 29, 30, 31, 32, 33, 40, 41, 42, 45, 46, 50, 59, 61, 62, 63, 68, 70, 71, 75, 79, 85, 86, 87, 88, 89, 91, 101, 104, 106, 107, 108, 109, 111, 113, 116, 117, 118, 119, 120, 123, 124, 125, 134, 135, 141, 145, 146, 148, 150], "backbon": [2, 8, 29, 39, 45], "img_shap": [2, 7, 12, 29, 30, 36, 42, 68, 109, 124], "f": [2, 3, 5, 6, 12, 14, 16, 17, 18, 20, 36, 41, 43, 45, 53, 54, 62, 75, 80, 85, 86, 87, 89, 91, 92, 95, 99, 100, 101, 102, 103, 104, 105, 111, 117, 118, 131, 133, 143, 144], "deepimageprior": [2, 68], "learning_r": [2, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 70], "input_s": [2, 70], "somewhat": 2, "surpris": 2, "sinc": [2, 16, 19, 20, 39, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 87, 88, 89, 109, 124], "mani": [2, 45, 47, 113], "potenti": [2, 13, 30], "data": [2, 36, 37, 39, 40, 43, 45, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 78, 85, 86, 87, 88, 89, 91, 92, 94, 99, 100, 101, 102, 103, 130, 131, 136, 137, 143, 144], "architectur": [2, 4, 8, 18, 22, 24, 25, 28, 32, 33, 39, 45, 47, 65, 66, 68, 69, 72, 74, 78, 79, 82], "act": [2, 25, 41, 42, 85], "implicit": [2, 41, 43, 45, 95, 141], "provid": [2, 6, 7, 12, 13, 14, 16, 38, 44, 45, 46, 50, 119, 125, 136], "while": [2, 6, 22, 41, 43, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 85], "phenomenon": 2, "yet": 2, "well": [2, 5, 6, 19, 47, 52, 56, 57, 58, 59, 60, 68, 87, 92, 107, 109, 111, 113, 117, 119, 125, 136, 142], "understood": 2, "some": [2, 6, 7, 16, 19, 38, 39, 42, 46, 107, 109, 111, 113, 117, 119, 120, 125], "effort": 2, "explain": [2, 47], "For": [2, 4, 8, 12, 14, 18, 19, 22, 28, 29, 30, 32, 33, 36, 39, 41, 43, 80, 85, 95, 123, 134, 135, 141], "see": [2, 3, 16, 19, 20, 25, 29, 30, 32, 40, 41, 42, 45, 57, 58, 59, 62, 63, 68, 69, 71, 72, 74, 78, 79, 80, 81, 83, 85, 87, 99, 100, 109, 117, 120, 123, 124, 136, 137, 139, 141, 142, 143, 144], "neural": [2, 8, 19, 20, 31, 43, 53, 68, 82], "tangent": 2, "link": [2, 10, 18, 40, 71, 133, 134, 135], "cnn": [2, 11, 69], "non": [2, 20, 107, 109, 111, 113, 115, 117, 119, 120, 125, 142], "local": [2, 24, 35], "linear": [2, 5, 7, 8, 12, 14, 16, 17, 18, 19, 20, 29, 30, 32, 41, 64, 65, 80, 81, 86, 87, 107, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 124, 125, 136], "x_lin": [2, 12, 14, 16, 17, 20], "a_adjoint": [2, 4, 6, 7, 12, 14, 16, 17, 20, 31, 32, 42, 85, 86, 87, 91, 107, 109, 111, 113, 117, 119, 125], "print": [2, 4, 5, 6, 8, 12, 14, 16, 17, 20, 22, 23, 24, 25, 32, 53, 54, 70, 80, 81, 85, 86, 91, 117, 129, 130, 131, 132, 133, 134, 135], "cal_psnr": [2, 12, 14, 16, 17, 20, 117, 129, 131], "2f": [2, 5, 6, 12, 14, 16, 17, 20, 53], "titl": [2, 3, 5, 6, 7, 12, 14, 16, 17, 18, 19, 20, 150], "ground": [2, 8, 12, 14, 16, 17, 18, 19, 20, 29, 30, 32, 60, 85, 87, 136, 137, 141], "truth": [2, 8, 12, 14, 16, 17, 18, 19, 20, 29, 30, 32, 60, 85, 87, 136, 141], "11": [2, 8, 13, 18, 19, 22, 28, 29, 30, 31, 32], "103": [2, 13, 19, 23, 26, 48], "65it": [2, 29, 33], "22": [2, 8, 12, 13, 18, 19, 22, 23, 24, 28, 29, 30, 31, 32], "107": [2, 19], "03it": [2, 23, 29, 31], "108": [2, 19, 29], "29it": [2, 8, 22, 25, 29, 32, 33], "44": [2, 8, 19, 20, 22, 28, 29, 30], "63it": [2, 28, 29], "55": [2, 13, 19, 22, 31], "70it": [2, 8, 30, 33], "66": [2, 4, 8, 16, 19, 22, 29, 32, 33], "77": [2, 3, 18, 19, 22, 28, 33], "71it": [2, 8, 18, 29, 31], "88": [2, 8, 19, 22, 29, 30, 32], "98it": [2, 29, 31], "99": [2, 19, 22, 29, 31, 33], "109": [2, 19], "15it": [2, 29, 30, 32], "49it": [2, 8, 24, 25, 28, 29], "58": [2, 8, 19, 22, 23, 24, 28, 29, 33], "61": [2, 19, 22], "219": [2, 9, 48], "demo_dip": [2, 9, 48], "singlephotonlidar": 3, "matplotlib": [3, 18, 29], "pyplot": [3, 18, 29], "plt": [3, 18, 29], "bin": [3, 123], "pixel": [3, 4, 8, 12, 17, 19, 20, 25, 29, 30, 32, 42, 66, 69, 74, 107, 108, 113, 116, 117, 119, 120, 123, 124, 125, 146], "impuls": [3, 123], "respons": [3, 123], "defin": [3, 5, 6, 18, 22, 23, 24, 25, 36, 41, 42, 43, 45, 51, 52, 55, 56, 57, 60, 66, 68, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 97, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 124, 125, 129, 130, 131, 133], "y_": [3, 123], "j": [3, 19, 80, 81, 85, 109, 123], "mathcal": [3, 18, 19, 20, 23, 32, 37, 44, 61, 62, 63, 73, 88, 97, 109, 114, 121, 122, 123, 126, 127, 130, 131, 135], "h": [3, 30, 70, 79, 87, 107, 108, 109, 113, 116, 118, 123, 124, 146, 150], "d_": [3, 32, 123, 130, 131], "r_": [3, 16, 23, 123], "b_": [3, 123], "poisson": [3, 7, 24, 25, 44, 62, 63, 94, 121, 122, 123], "scene": [3, 115, 123], "intens": [3, 115, 123], "background": [3, 94, 123], "irf_sigma": 3, "peak": [3, 123, 146], "locat": 3, "around": [3, 46], "50th": 3, "ratio": [3, 7, 59, 79, 132, 146], "10": [3, 5, 6, 7, 8, 9, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 30, 31, 32, 33, 48, 53, 54, 72, 83, 107, 108, 109, 113, 124, 125, 129, 133, 134, 146], "w": [3, 11, 19, 30, 31, 70, 79, 94, 106, 107, 108, 109, 116, 117, 118, 123, 124, 136, 146, 150], "first": [3, 5, 7, 11, 13, 18, 19, 30, 31, 41, 43, 64, 85, 86, 92, 106, 118, 119, 123, 124, 136, 138, 140, 150], "third": [3, 123], "associ": [3, 7, 18, 36, 38, 50, 52, 56, 57, 58, 59, 61, 62, 63, 85, 86, 87, 91, 133], "sbr": 3, "bkg_level": 3, "d": [3, 16, 20, 32, 41, 44, 53, 55, 64, 71, 73, 80, 81, 86, 88, 89, 91, 93, 94, 96, 97, 109, 115, 123], "ones": [3, 4, 6, 7, 16, 18, 19, 29, 32, 43, 46, 107, 108, 117, 118, 125, 129, 131, 149], "r": [3, 6, 12, 13, 16, 18, 19, 24, 25, 31, 32, 41, 43, 53, 54, 58, 59, 61, 62, 63, 69, 74, 75, 80, 85, 88, 94, 109, 111, 116, 123, 136], "ones_lik": 3, "cat": [3, 6, 7, 19, 82], "shown": [3, 31, 43], "blue": 3, "red": [3, 10, 15, 48, 49, 50, 74, 85, 86, 91, 95, 97, 99, 113, 114, 117, 120, 136, 147], "xhat": [3, 17, 18, 19, 85, 129, 131], "a_dagg": [3, 5, 6, 7, 31, 42, 106, 109, 111, 115, 117, 120, 123, 125], "figur": [3, 18, 150], "subplot": [3, 18], "detach": [3, 4, 18, 19, 29, 32], "numpi": [3, 16, 17, 18, 19, 129], "stem": 3, "linefmt": 3, "markerfmt": 3, "tight_layout": [3, 18], "home": [3, 4, 13, 14, 18, 19, 20, 22, 23, 24, 25, 29, 32], "runner": [3, 4, 13, 14, 18, 19, 20, 22, 23, 24, 25, 29, 32], "userwarn": [3, 4, 18, 22, 29, 32], "pad": [3, 8, 22, 23, 24, 25, 28, 31, 33, 75, 82, 106, 107, 108, 113, 119, 138, 139, 140], "same": [3, 4, 16, 22, 23, 24, 25, 32, 38, 41, 75, 85, 86, 88, 89, 94, 99, 106, 107, 109, 113, 119, 143, 144, 146, 149, 150, 153, 154, 155], "even": [3, 19], "length": [3, 4, 22, 29, 30, 31, 32, 33, 85, 150], "odd": 3, "dilat": [3, 8, 23, 24, 25, 139], "requir": [3, 6, 12, 16, 17, 22, 32, 39, 41, 43, 44, 85, 97, 101, 129, 131, 133, 134, 135], "zero": [3, 5, 6, 7, 16, 18, 19, 30, 46, 84, 107, 108, 113, 116, 117, 138, 155], "copi": [3, 4, 18, 28, 29, 30, 32, 33], "trigger": 3, "intern": [3, 13, 86, 94, 95], "aten": 3, "src": 3, "nativ": 3, "cpp": 3, "1008": 3, "nn": [3, 4, 7, 16, 29, 30, 32, 38, 39, 42, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 65, 70, 79, 82, 107, 109, 112, 116, 119, 122, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 152], "conv1d": 3, "irf": 3, "330": [3, 9, 48], "demo_lidar": [3, 9, 48], "wai": [4, 22, 23, 24, 25, 35, 47], "purpos": 4, "unfold": [4, 22, 23, 28, 31, 34, 47, 48, 49, 50, 60, 72, 84, 86, 88, 91, 93, 95, 111, 113, 114, 116, 117, 120, 136, 137, 141, 142, 143, 144, 147, 152], "chambol": [4, 10, 31, 34, 48, 49, 50, 60, 80, 81, 84, 86, 88, 93, 95, 99, 101, 111, 116, 117, 120, 136, 137, 142, 143, 144, 147], "pock": [4, 10, 31, 34, 48, 49, 50, 60, 80, 81, 84, 86, 88, 93, 95, 99, 101, 111, 116, 117, 120, 136, 137, 142, 143, 144, 147], "algorithm": [4, 6, 10, 15, 21, 22, 32, 34, 41, 47, 48, 49, 50, 60, 72, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 111, 113, 114, 117, 120, 124, 125, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152], "its": [4, 6, 12, 18, 29, 30, 31, 32, 37, 42, 80, 81, 85, 111], "describ": [4, 11, 20, 23, 106, 116, 117, 120, 129, 130, 131], "constrain": [4, 10, 34, 48, 49, 50, 60, 84, 86, 88, 93, 95, 111, 116, 117, 120, 136, 137, 142, 144, 147], "indicatorl2": [4, 32], "prior": [4, 9, 10, 11, 12, 14, 22, 28, 29, 32, 33, 34, 40, 44, 45, 47, 48, 49, 50, 60, 68, 69, 70, 85, 86, 87, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 108, 109, 111, 114, 116, 117, 120, 128, 133, 134, 135, 136, 137, 142, 143, 144, 146, 147, 148, 150, 152], "pnp": [4, 10, 15, 21, 22, 28, 29, 32, 38, 41, 47, 48, 49, 50, 53, 69, 72, 85, 86, 91, 92, 95, 97, 99, 108, 111, 114, 116, 117, 120, 124, 125, 131, 133, 135, 136, 137, 146, 147, 148, 150, 151], "unfolded_build": [4, 22, 29, 30, 31, 32, 33, 45], "get_weights_url": [4, 22, 23, 24, 25], "dataset": [4, 9, 10, 14, 19, 37, 38, 47, 48, 49, 50, 111, 112, 114, 117, 120, 136, 137, 147, 150], "degrad": [4, 14, 24, 25, 38], "ckpt_dir": [4, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "ckpt": [4, 8, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "miss": 4, "rather": [4, 18, 29, 32, 44, 46, 97], "complex": [4, 7, 109, 118, 124], "consist": [4, 7, 12, 18, 19, 22, 23, 32, 38, 40, 45, 56, 57, 58, 59, 60, 85, 119], "radiu": [4, 32, 88, 89], "trainabl": [4, 8, 22, 23, 24, 25, 28, 29, 30, 32, 33, 45, 58, 59, 61, 62, 63, 82, 142], "soft": [4, 10, 30, 32, 34, 48, 49, 50, 60, 83, 84, 86, 89, 91, 93, 95, 105, 109, 117, 120, 136, 137, 142, 144, 147, 152], "threshold": [4, 10, 30, 32, 34, 48, 49, 50, 60, 83, 84, 85, 86, 89, 90, 91, 93, 95, 105, 109, 117, 120, 132, 133, 135, 136, 137, 142, 144, 147, 152], "wavelet": [4, 29, 32, 83, 84], "basi": [4, 29, 32], "If": [4, 5, 6, 22, 23, 29, 30, 32, 35, 44, 47, 50, 55, 59, 61, 62, 63, 65, 69, 70, 71, 72, 73, 74, 78, 79, 84, 85, 88, 92, 97, 99, 100, 101, 102, 106, 107, 109, 111, 113, 116, 117, 119, 120, 122, 124, 125, 126, 128, 133, 134, 135, 137, 141, 143, 144, 146, 148, 150], "initi": [4, 13, 18, 19, 22, 28, 29, 30, 32, 33, 69, 70, 71, 72, 74, 78, 79, 85, 87, 120, 130, 131, 152], "list": [4, 5, 7, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 39, 41, 46, 47, 50, 57, 69, 70, 74, 78, 83, 85, 99, 106, 107, 109, 111, 113, 115, 119, 120, 125, 129, 136, 137, 139, 142, 143, 144, 145, 150], "distinct": [4, 22, 29, 30, 31, 32, 33, 41, 85, 99, 143, 144], "each": [4, 16, 18, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41, 58, 62, 63, 67, 70, 78, 79, 83, 84, 85, 87, 92, 99, 117, 120, 136, 137, 142, 143, 144, 150], "cp": [4, 32, 41, 99, 143, 144], "fix": [4, 11, 22, 28, 29, 30, 32, 33, 41, 43, 45, 85, 87, 92, 117, 120, 141], "across": [4, 22, 29, 30, 32, 33, 50, 85, 124, 137, 141], "singl": [4, 9, 10, 12, 17, 22, 24, 28, 29, 30, 31, 32, 33, 38, 41, 44, 46, 48, 50, 58, 85, 92, 99, 100, 101, 102, 103, 104, 105, 107, 108, 117, 118, 120, 123, 124, 143, 144, 145, 147, 150], "30": [4, 8, 9, 11, 14, 17, 18, 19, 22, 28, 29, 30, 31, 32, 34, 48], "20": [4, 5, 7, 8, 13, 17, 18, 19, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 38, 48, 72, 146], "unrol": [4, 22, 28, 29, 30, 31, 32, 33, 38, 45, 136, 137, 141], "waveletprior": [4, 29, 32, 83], "wv": [4, 29, 32, 83, 84], "db8": [4, 29, 32, 83, 84], "rang": [4, 6, 9, 10, 18, 19, 22, 23, 29, 31, 32, 39, 48, 54, 71, 79, 87, 120, 123, 131, 132, 137, 138, 147], "lamb": [4, 11, 12, 13, 22, 28, 29, 30, 32, 33, 86, 95], "sigma_denois": [4, 11, 13, 20, 22, 28, 29, 32, 33, 93, 96], "01": [4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 48, 61, 62, 63, 70], "g_param": [4, 11, 12, 13, 14, 16, 22, 28, 29, 30, 31, 32, 33, 41, 87, 142], "k": [4, 7, 11, 12, 16, 20, 29, 30, 31, 32, 41, 43, 45, 80, 83, 84, 85, 87, 92, 100, 101, 102, 103, 104, 105, 134, 135, 142], "k_adjoint": [4, 31, 32], "trainable_param": [4, 22, 28, 29, 30, 32, 33, 142], "becaus": [4, 32], "custom_init_cp": [4, 32], "x_init": [4, 32, 85, 87, 120, 130, 131, 133], "u_init": [4, 32], "est": [4, 12, 13, 31, 32, 85, 87, 92, 100, 101, 102, 103], "custom_init": [4, 31, 32, 85], "39": [4, 8, 19, 22, 28, 29, 32, 33], "To": [4, 18, 22, 28, 29, 32, 33, 95], "construct": [4, 18, 29, 32, 42], "tensor": [4, 5, 6, 7, 12, 13, 18, 19, 22, 29, 31, 32, 46, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 138, 139, 140, 141, 145, 146, 148, 149, 150, 153, 154, 155], "sourcetensor": [4, 18, 29, 32], "clone": [4, 18, 19, 29, 32], "requires_grad_": [4, 18, 19, 29, 32, 54], "el": [4, 29, 32], "param_valu": [4, 29, 32], "state_dict": [4, 22, 23, 24, 25, 32], "model_nontrain": 4, "pth": [4, 14, 20, 22, 23, 24, 25, 32, 109, 116, 124], "pgd": [4, 13, 14, 28, 29, 30, 32, 41, 43, 45, 85, 87, 92, 99, 105, 141, 143, 144], "prior_new": [4, 32], "params_algo_new": [4, 32], "model_new": [4, 32], "init": 4, "n": [4, 13, 18, 19, 20, 23, 27, 40, 42, 44, 53, 54, 61, 62, 71, 97, 109, 111, 114, 116, 117, 119, 120, 121, 124, 126, 130, 131, 135, 146], "file_nam": [4, 22, 23, 24, 25], "demo_unfolded_cp": 4, "model_nam": [4, 22, 23, 24, 25], "ckpt_state_dict": 4, "hub": [4, 13, 14, 19, 20, 22, 23, 24, 25], "load_state_dict_from_url": [4, 22, 23, 24, 25], "map_loc": [4, 22, 23, 24, 25], "storag": [4, 22, 23, 24, 25], "loc": [4, 22, 23, 24, 25], "load_state_dict": [4, 22, 23, 24, 25, 32, 109, 116, 124], "after": [4, 16, 35, 79, 87, 133, 152], "0100": 4, "requires_grad": [4, 54], "huggingfac": [4, 13, 14, 19, 20, 22, 23, 24, 25, 38], "co": [4, 13, 14, 19, 20, 22, 23, 24, 25], "resolv": [4, 13, 14, 19, 20, 22, 23, 24, 25], "main": [4, 6, 13, 14, 19, 20, 22, 23, 24, 25, 35], "cach": [4, 13, 14, 19, 20, 22, 23, 24, 25], "8k": 4, "36": [4, 8, 19, 22, 25, 28, 29, 30], "1mb": [4, 22, 23], "0545": [4, 29], "0512": [4, 29], "0481": [4, 29], "0484": 4, "0526": [4, 29], "0535": [4, 29], "0427": [4, 29], "189": [4, 9, 19, 29, 48], "demo_load": [4, 9, 48], "gener": [4, 7, 10, 12, 13, 14, 19, 31, 36, 38, 43, 45, 50, 52, 57, 70, 80, 88, 89, 92, 101, 109, 120, 129, 130, 131, 133, 136, 137, 138, 140], "new": [5, 6, 16, 32, 118, 133], "particular": [5, 45, 101, 125], "pan": 5, "sharpen": 5, "downsampl": [5, 7, 13, 28, 33, 69, 74, 82, 117, 119], "grayscal": [5, 6, 7, 12, 14, 38, 42, 110, 119, 148], "exist": [5, 45, 109, 116, 117, 120, 124, 125], "mathemat": 5, "equival": [5, 19], "begin": [5, 12, 18, 19, 32, 41, 43, 45, 85, 88, 100, 101, 102, 103, 104, 105, 117, 120, 130, 131, 141, 142], "bmatrix": [5, 117, 120], "y_1": [5, 59], "y_2": [5, 59], "a_1": [5, 24, 58, 59, 117, 120], "a_2": [5, 24, 58, 59, 117, 120], "two": [5, 18, 19, 22, 23, 24, 41, 43, 58, 59, 86, 91, 92, 94, 95, 106, 117, 120, 125, 145], "one": [5, 19, 23, 39, 41, 43, 47, 49, 51, 53, 54, 55, 66, 68, 75, 76, 77, 78, 80, 81, 107, 108, 109, 111, 113, 115, 117, 119, 125, 133, 134, 135], "anoth": 5, "convert": [5, 6, 17, 44, 71, 110, 111, 148], "pansharpen": [5, 7], "factor": [5, 7, 13, 29, 30, 33, 79, 88, 91, 113, 117, 118, 119, 132, 137, 139], "physics1": [5, 117], "physics2": [5, 6, 117], "decolor": [5, 6], "physics_stack": 5, "tensorlist": [5, 117, 119, 120, 149, 153, 154, 155], "ad": [5, 10, 18, 40, 46, 114, 117, 121, 122, 126, 127], "multipli": [5, 33, 41, 46, 100, 117, 137, 145], "etc": [5, 6, 16, 22, 41, 43, 44, 45, 46, 47, 50, 52, 87, 145], "It": [5, 22, 40, 43, 45, 46, 50, 52, 64, 71, 72, 91, 108, 109, 113, 117, 119, 120, 124, 129, 145], "also": [5, 6, 7, 17, 19, 22, 25, 29, 30, 35, 38, 41, 42, 43, 44, 46, 47, 50, 69, 71, 72, 74, 78, 79, 84, 89, 95, 97, 117], "possibl": [5, 28, 35, 39, 71, 72, 85, 119, 141, 146], "fill": [5, 149, 153, 154, 155], "line": [5, 10, 116, 118, 125], "similarli": [5, 32, 41, 95], "48": [5, 8, 19, 22, 23, 28, 29, 30, 33, 124], "xlin": [5, 6], "pseudo": [5, 6, 42, 65, 108, 116, 118, 125], "high": [5, 7, 119], "re": [5, 7, 70, 118], "low": [5, 7, 12, 44, 97, 113, 119], "transpos": [5, 6, 65, 69, 74, 85, 86, 87, 91, 107, 109, 111, 113, 117, 119, 125], "linearphys": [5, 6, 42, 85, 86, 87, 91, 107, 109, 111, 113, 119, 125, 130, 131], "adjointness_test": [5, 6, 117], "unit": [5, 6, 18, 109, 117], "compute_norm": [5, 6, 117, 135], "power": [5, 6, 18, 53, 54, 71, 117, 124], "physics_concat": 5, "796": [5, 9, 48], "demo_pansharpen": [5, 9, 48], "offer": 6, "larg": [6, 42, 47, 70, 71, 80, 109], "might": [6, 131], "want": [6, 13, 53, 54], "your": [6, 9, 10, 12, 21, 35, 47, 48, 49, 50, 75, 86, 91, 95, 97, 108, 111, 112, 114, 117, 120, 133, 135, 146, 147, 148, 150], "own": [6, 9, 10, 12, 31, 48, 49, 50, 69, 71, 72, 74, 78, 79, 111, 112, 114, 117, 120, 147, 150], "walk": 6, "through": [6, 19, 52, 53, 54], "creation": 6, "rgb": [6, 7, 110, 115, 119], "averag": [6, 17, 20, 38, 69, 73, 74, 107, 108, 117], "exploit": [6, 16, 24, 25], "singular": [6, 16, 17, 42, 108, 111, 118, 124, 129], "decomposit": [6, 16, 17, 42, 83, 84, 108, 111, 116, 118, 124, 129], "speed": [6, 50], "evalu": [6, 17, 19, 28, 29, 30, 38, 54, 87, 137], "remain": [6, 18], "structur": [6, 42, 69, 118], "onc": [6, 8, 19, 32, 85], "adjoint": [6, 14, 32, 40, 42, 117, 125], "must": [6, 7, 12, 14, 54, 69, 110, 129, 131, 145], "colour": [6, 110], "2989": 6, "5870": 6, "1140": 6, "96": [6, 8, 19, 22, 29, 30], "128": [6, 8, 11, 19, 22, 23, 24, 25, 31, 32, 38, 69, 71, 74, 79], "mea": 6, "close": [6, 16, 17, 42, 83, 84, 88, 89, 109, 113, 117, 120, 125], "form": [6, 8, 17, 30, 35, 41, 42, 43, 45, 83, 84, 85, 87, 88, 89, 92, 108, 109, 117, 118, 120, 125, 142], "svd": [6, 111, 116], "implement": [6, 7, 10, 12, 21, 29, 30, 31, 41, 43, 47, 48, 71, 72, 79, 86, 87, 91, 92, 94, 95, 101, 108, 111, 114, 116, 117, 120, 129, 130, 131, 147, 148, 150], "decomposablephys": [6, 16, 17, 42, 108, 110, 112, 116, 118, 124, 129], "so": [6, 19, 33, 118], "decolorizesvd": 6, "447": [6, 25], "v_adjoint": [6, 16, 111], "6687": 6, "3132": 6, "2550": 6, "v": [6, 12, 16, 45, 85, 86, 87, 91, 92, 111, 141], "y2": [6, 42], "xlin2": 6, "solut": [6, 41, 43, 45, 81, 83, 84, 85, 87, 92, 109, 117, 125, 141], "moreov": [6, 19, 85], "sampl": [6, 13, 19, 21, 23, 29, 30, 38, 44, 47, 48, 52, 57, 73, 75, 78, 86, 91, 95, 97, 108, 109, 111, 114, 116, 117, 118, 120, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 139, 146, 147, 148, 150], "ddrm": [6, 17], "start": [6, 22, 23, 24, 25, 92], "xprox": 6, "prox_l2": [6, 42, 111, 113, 117], "elaps": [6, 16, 17, 20], "xprox2": 6, "2e": [6, 22], "22e": 6, "322": [6, 9, 48], "demo_phys": [6, 9, 48], "deepinvers": [7, 35, 49], "restrict": [7, 43, 125, 130], "ourselv": 7, "2d": [7, 118, 124, 138, 139, 140], "found": [7, 17, 83], "request": [7, 35], "imageio": 7, "v2": 7, "imread": 7, "io": [7, 31, 80, 81], "bytesio": 7, "logo": 7, "cnr": 7, "www": 7, "iuem": 7, "univ": 7, "brest": 7, "fr": 7, "intranet": 7, "commun": [7, 35], "tutel": 7, "poster": 7, "png": [7, 14, 18, 19, 150], "get": [7, 18, 19, 22, 23, 24, 25, 35, 71, 85, 130, 131], "content": 7, "255": [7, 18, 19, 20, 38, 79], "dtype": [7, 18, 19, 30, 85, 87, 109, 117, 124, 125], "float": [7, 30, 41, 52, 53, 54, 57, 58, 59, 61, 62, 63, 64, 67, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 111, 114, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 146], "permut": 7, "interpol": [7, 13, 19, 53, 125, 139], "ident": [7, 12, 53, 85, 87, 111, 112, 117, 120, 133, 134, 135], "poissonnois": [7, 24, 25], "result": [7, 18, 19, 45, 46, 117, 120, 131, 132, 134, 135, 136, 137], "unless": 7, "explicit": [7, 9, 10, 13, 30, 47, 48, 49, 50, 85, 86, 91, 95, 99, 108, 111, 114, 117, 120, 128, 134, 136, 147], "consid": [7, 19], "compressedsens": [7, 29, 30, 36, 42], "matrix": [7, 16, 29, 30, 54, 107, 109, 111, 113, 116, 117, 119, 124, 125], "take": [7, 16, 18, 19, 25, 37, 38, 41, 43, 51, 55, 62, 63, 66, 68, 69, 71, 75, 76, 77, 78, 80, 81, 87, 92, 125, 137], "2048": 7, "64x64": [7, 18, 19], "correspond": [7, 13, 18, 19, 29, 30, 38, 41, 85, 92, 101, 117, 118, 120], "m": [7, 12, 25, 29, 30, 35, 36, 40, 42, 59, 61, 62, 63, 109, 111, 116, 117, 120, 124, 134], "fast": [7, 29, 30, 66, 108, 109, 116, 118, 124, 140], "channelwis": [7, 109], "spars": [7, 67], "radon": [7, 125], "mix": [7, 25], "img_width": [7, 14, 31, 125], "angl": [7, 14, 31, 125, 128, 138], "poissongaussiannois": 7, "gain": [7, 25, 62, 63, 94, 121, 122], "min": [7, 19, 32, 41, 43, 80, 81, 83, 84, 85, 101, 117, 126, 150], "max": [7, 17, 19, 20, 55, 69, 74, 90, 126, 150], "sinogram": 7, "backproject": 7, "subsampl": [7, 109, 113, 118, 124], "indic": [7, 32, 50, 84, 87, 88, 133], "coeffici": [7, 83, 84], "cartesian": 7, "approxim": [7, 16, 20, 30, 38, 44, 61, 62, 63, 73, 97, 125, 130, 134], "real": [7, 22, 118], "part": [7, 22, 45, 69, 118], "imaginari": [7, 22, 118], "rand": [7, 42, 114, 121, 122, 126, 127, 150], "75": [7, 18, 19, 22, 29, 31, 33, 139], "int": [7, 8, 16, 18, 20, 22, 23, 24, 25, 28, 31, 32, 33, 50, 53, 54, 66, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 106, 109, 113, 117, 118, 119, 120, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 148, 150], "x2": [7, 80, 81], "zeros_lik": [7, 30, 31, 117], "space": [7, 22, 31, 66, 125], "singlepixelcamera": [7, 12], "binari": [7, 23, 111, 116, 118, 124], "pattern": [7, 11, 124], "hadamard": [7, 12, 124], "degre": [7, 22, 38, 73, 125, 128, 138], "334": [7, 9, 48], "demo_physics_tour": [7, 9, 48], "32x32": [8, 32, 113, 117, 119, 124, 129, 131], "avail": [8, 32, 38, 69, 71, 72, 74, 78, 79, 83, 84, 88, 89], "128x128": [8, 22, 32], "train_dataset_nam": [8, 22, 24, 25, 28, 29, 30, 31, 32, 33], "test_dataset_nam": [8, 28, 32, 33], "test_transform": [8, 28, 32, 33], "train_transform": [8, 28, 32, 33], "randomcrop": [8, 28, 32, 33], "8m": [8, 19, 22, 23, 32, 33], "27": [8, 17, 18, 19, 22, 24, 28, 29, 31, 33], "32m": 8, "2mib": [8, 22, 32], "4m": [8, 22, 33], "57": [8, 12, 13, 18, 19, 22, 29], "6mib": [8, 22], "98": [8, 13, 19, 20, 22, 23, 28, 29], "3m": [8, 22], "randomli": [8, 19, 32, 73, 138, 140], "probabl": [8, 25, 32, 62, 63, 109, 116, 124], "probability_mask": [8, 32], "1000": [8, 18, 19, 28, 29, 30, 31, 33, 66, 71, 80, 81, 130, 131, 133, 134, 135], "my_dataset_nam": [8, 22, 23, 24, 28, 29, 30, 32, 33], "demo_training_inpaint": [8, 32], "deepinv_datasets_path": [8, 22, 23, 24, 25, 32], "dataset_filenam": [8, 22, 23, 24, 25, 28, 29, 30, 32, 33, 50], "str": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 49, 50, 69, 71, 72, 73, 74, 78, 79, 82, 83, 84, 85, 99, 106, 107, 108, 109, 113, 119, 123, 124, 125, 130, 131, 136, 137, 139, 143, 144, 148, 150, 151, 152], "train_batch_s": [8, 28, 29, 30, 31, 32, 33], "test_batch_s": [8, 28, 29, 30, 31, 32, 33], "train_dataload": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 137], "56it": [8, 23, 28], "55it": [8, 28, 29, 30], "60it": [8, 22, 25, 29, 32, 33], "phi_": [8, 23], "top": [8, 10, 12, 16, 23, 25, 31, 32, 40, 45, 61, 62, 63, 65, 83, 84, 85, 94, 101, 107, 109, 111, 113, 117, 119, 125], "post": [8, 17, 20], "u": [8, 12, 16, 18, 19, 23, 24, 25, 31, 40, 45, 61, 62, 63, 69, 76, 82, 86, 88, 89, 91, 92, 94, 111, 117, 126, 127, 141], "net": [8, 18, 23, 24, 25, 69, 82], "unet": [8, 23, 24, 25, 71, 78], "in_channel": [8, 12, 14, 22, 23, 24, 25, 28, 39, 69, 71, 72, 74, 76, 77, 82], "out_channel": [8, 12, 14, 22, 23, 24, 25, 28, 39, 69, 71, 72, 74, 76, 77, 82], "batch_norm": [8, 82], "artifactremov": [8, 23, 24, 25, 39, 107, 109, 111, 113, 117, 119, 125, 136, 137], "supervis": [8, 26, 28, 29, 30, 31, 32, 33, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 72, 82, 86, 91, 93, 95, 111, 112, 116, 117, 118, 120, 122, 136, 137, 138, 139, 142, 144, 147], "mean": [8, 16, 17, 18, 19, 20, 22, 32, 40, 41, 44, 56, 57, 58, 59, 60, 61, 62, 63, 132, 133, 134, 135], "error": [8, 17, 18, 20, 32, 52, 55, 56, 57, 58, 59, 60, 95, 125], "easili": [8, 18, 19, 32, 35, 36, 50], "done": [8, 17, 18, 19, 28, 29, 30, 31, 32, 33, 35, 36, 84, 119], "suploss": [8, 28, 29, 30, 31, 32, 33], "few": [8, 32], "epoch": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 137], "keep": [8, 19, 28, 32, 84, 109, 116, 117, 120, 124, 133, 134, 135], "short": [8, 32], "qualiti": [8, 32], "least": [8, 32], "5e": [8, 22, 23, 24, 25, 28, 33], "inform": [8, 22, 23, 24, 25, 32, 37, 38, 85, 117, 136, 137], "mse": [8, 28, 29, 30, 31, 32, 33, 52, 56, 57, 58, 59, 60], "schedul": [8, 17, 18, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 131, 137], "weight_decai": [8, 22, 23, 24, 25, 28, 29, 30, 32, 33], "lr_schedul": [8, 22, 23, 24, 25, 28, 31, 32, 33], "steplr": [8, 22, 23, 24, 25, 28, 31, 32, 33], "step_siz": [8, 16, 20, 22, 23, 24, 25, 28, 32, 33, 133, 134, 135], "eval_dataload": [8, 22, 23, 24, 25, 28, 29, 30, 31, 33, 137], "save_path": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 109, 116, 124, 137], "2067779": 8, "eval_psnr": [8, 22, 23, 24, 25, 28, 29, 30, 31, 33], "6": [8, 13, 17, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 34, 77, 79], "59": [8, 19, 22, 32, 33], "total_loss": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "114": [8, 19, 28, 29], "train_psnr": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "43": [8, 18, 19, 22], "0828": [8, 32], "0921": 8, "28": [8, 13, 18, 19, 22, 23, 28, 29, 30, 31, 33, 36, 42, 48], "0865": 8, "074": [8, 29], "0713": [8, 30], "12": [8, 18, 19, 22, 28, 29, 30, 31, 32, 33], "0625": 8, "14": [8, 13, 15, 16, 18, 19, 22, 23, 28, 29, 30, 31, 32, 33, 48], "46it": [8, 22, 29], "0856": [8, 119], "0786": [8, 30], "0747": 8, "0698": [8, 29], "93it": [8, 11, 29, 30, 31], "0718": 8, "0681": [8, 29], "0697": [8, 29], "0673": [8, 29], "15": [8, 16, 18, 19, 22, 28, 29, 30, 31, 32, 33, 38, 79], "064": 8, "0643": [8, 29], "0654": [8, 29], "0632": 8, "38": [8, 13, 19, 22, 26, 28, 29, 33, 48], "0617": 8, "071": 8, "0701": 8, "0728": 8, "23": [8, 18, 19, 22, 23, 24, 28, 30, 31, 32], "51it": [8, 23, 28, 29], "0724": [8, 24], "0725": [8, 29], "0709": [8, 29], "0689": [8, 29], "54": [8, 13, 19, 22, 23, 28, 29, 33], "64it": [8, 17, 23], "0691": [8, 29], "0688": [8, 29], "0684": [8, 29], "0683": [8, 29], "62": [8, 16, 19, 22, 23, 28, 29, 33], "77it": [8, 17, 23, 30], "0675": [8, 24, 29], "066": [8, 29], "0638": [8, 29], "70": [8, 17, 18, 19, 22, 28, 29, 31, 33, 116], "35": [8, 19, 22, 24, 25, 28, 31, 32, 33], "81it": [8, 18, 24, 29, 30, 31], "0639": [8, 29], "0635": 8, "0644": [8, 29], "0634": [8, 32], "78": [8, 19, 22, 28, 29, 30], "84it": [8, 18, 22, 24, 30], "062": 8, "0613": 8, "063": 8, "0637": [8, 29], "86": [8, 19, 22, 29], "89it": [8, 18, 23, 29, 31], "0629": [8, 29], "0646": [8, 29], "94": [8, 11, 13, 19, 29, 32, 33], "47": [8, 13, 18, 19, 22, 28, 32], "68it": [8, 16, 29, 30], "0112": [8, 31], "085": 8, "0621": [8, 29], "0555": [8, 29], "01it": [8, 13, 31], "0461": [8, 29], "0446": [8, 29], "0472": [8, 29], "0471": [8, 29], "91it": [8, 30, 31], "0449": [8, 29], "0409": 8, "0389": 8, "0429": 8, "24": [8, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32], "88it": [8, 18, 29, 31], "0403": 8, "0383": 8, "0388": 8, "82it": [8, 18, 29, 31], "037": 8, "0366": 8, "0372": [8, 32], "0364": 8, "85it": [8, 18, 29, 31], "0363": 8, "0351": [8, 118], "0339": 8, "0329": 8, "54it": [8, 22, 25, 28, 29, 30], "0318": 8, "0316": 8, "0307": 8, "0301": 8, "56": [8, 17, 19, 22, 29, 30, 34, 48], "41it": [8, 22, 29, 30], "0294": [8, 32], "0291": 8, "0282": 8, "028": 8, "0275": 8, "0272": 8, "0269": 8, "0264": [8, 32], "72": [8, 19, 22, 29, 30], "026": 8, "0254": 8, "025": 8, "0248": 8, "80": [8, 17, 18, 19, 22, 23, 25, 28, 29, 30, 31, 32, 33], "0247": 8, "0245": 8, "0241": [8, 113], "0238": 8, "18": [8, 11, 13, 17, 18, 19, 22, 28, 29, 30, 31, 32, 33], "86it": [8, 18, 29, 31], "0234": 8, "0231": 8, "0228": 8, "0225": 8, "87it": [8, 18, 30, 31], "0223": 8, "0221": 8, "00893": 8, "0115": 8, "0104": [8, 32], "0159": [8, 32], "96it": [8, 22, 23, 25, 29, 31], "0164": [8, 32], "0157": [8, 32], "0149": 8, "0148": 8, "26it": [8, 19, 29, 32], "0147": 8, "0143": 8, "0138": [8, 32], "0131": [8, 32], "52it": [8, 22, 28, 30], "0129": 8, "0125": 8, "013": 8, "0128": 8, "0123": 8, "012": [8, 32], "0116": 8, "76it": [8, 17, 18, 22, 29], "0114": [8, 32], "011": [8, 32], "0109": 8, "79it": [8, 18, 23, 29, 30, 31], "0108": [8, 32], "0106": [8, 32], "0119": [8, 32], "0117": [8, 32], "80it": [8, 22, 23, 29], "0113": 8, "0118": 8, "21": [8, 12, 18, 19, 22, 23, 28, 29, 30, 31, 32], "0107": 8, "83it": [8, 29, 30, 31], "0105": [8, 32], "0103": 8, "00656": 8, "00719": 8, "00797": 8, "00977": 8, "97it": [8, 29, 31], "0101": 8, "00857": 8, "00851": 8, "00819": 8, "00833": 8, "00822": 8, "00802": 8, "00752": 8, "73it": [8, 29], "00707": 8, "00696": 8, "00668": 8, "00662": 8, "0071": [8, 23], "00683": 8, "00666": 8, "53it": [8, 28, 29, 33], "00717": 8, "00754": 8, "00741": 8, "00723": 8, "00718": 8, "00735": 8, "00767": 8, "00761": 8, "00757": 8, "0074": 8, "00727": [8, 23], "00759": 8, "00746": 8, "00734": 8, "00835": 8, "00823": 8, "0082": 8, "00817": 8, "0081": 8, "00798": 8, "00786": [8, 31], "00775": 8, "00772": 8, "00766": 8, "00812": 8, "00815": 8, "74it": [8, 17, 29, 33], "backbone_net": [8, 23, 24, 25, 65], "maxpool": [8, 23, 24, 25, 69, 74], "maxpool2d": [8, 23, 24, 25], "kernel_s": [8, 22, 23, 24, 25, 28, 31, 33, 75, 106], "stride": [8, 22, 23, 24, 25, 28, 31, 33, 69, 74], "ceil_mod": [8, 23, 24, 25], "conv1": [8, 23, 24, 25], "sequenti": [8, 23, 24, 25, 67], "conv2d": [8, 22, 23, 24, 25, 28, 31, 33, 106, 107], "relu": [8, 22, 23, 24, 25, 28, 33, 69, 72, 74], "inplac": [8, 23, 24, 25], "conv2": [8, 23, 24, 25], "conv3": [8, 23], "up3": [8, 23], "upsampl": [8, 23, 24, 25, 69, 74, 79], "scale_factor": [8, 23, 24, 25], "mode": [8, 23, 24, 25, 33, 69, 72, 74, 78, 124, 139, 150], "nearest": [8, 23, 24, 25, 69, 71, 74, 79, 131], "up_conv3": [8, 23], "up2": [8, 23, 24, 25], "up_conv2": [8, 23, 24, 25], "conv_1x1": [8, 23, 24, 25], "now": [8, 17, 18, 19, 28, 29, 30, 32, 141], "test_psnr": [8, 32, 136], "artifact_remov": [8, 32], "test_std_psnr": [8, 32, 136], "init_psnr": [8, 32], "init_std_psnr": [8, 32], "08": [8, 9, 13, 19, 21, 22, 29, 30, 33, 48], "26": [8, 13, 18, 19, 22, 25, 28, 29, 31, 32, 34, 48], "586": [8, 9, 48], "demo_train_inpaint": [8, 9, 48], "186": [9, 19, 29], "execut": [9, 15, 21, 26, 27, 34, 48], "file": [9, 15, 21, 26, 27, 34, 41, 48, 49, 109, 116, 124, 148], "auto_exampl": [9, 15, 21, 26, 27, 34], "basic": [9, 46, 47, 48, 107, 108, 117], "mem": [9, 15, 21, 26, 27, 34, 48], "mb": [9, 15, 21, 26, 27, 34, 48, 71], "tour": [9, 10, 48, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 147, 150], "sens": [9, 10, 19, 30, 34, 36, 48, 49, 50, 52, 57, 60, 83, 84, 86, 91, 93, 95, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 128, 136, 137, 142, 144, 147, 150, 152], "reconstruct": [9, 10, 12, 13, 14, 16, 18, 20, 21, 31, 36, 38, 39, 40, 44, 45, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 79, 82, 107, 109, 111, 113, 114, 116, 117, 119, 120, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 146, 147, 148, 150], "imag": [9, 10, 15, 18, 19, 21, 26, 34, 38, 40, 42, 43, 44, 48, 49, 50, 52, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 93, 95, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151], "deblur": [9, 10, 15, 18, 34, 47, 48, 49, 50, 60, 69, 72, 85, 86, 91, 93, 95, 99, 108, 111, 114, 117, 120, 128, 136, 137, 139, 141, 143, 147], "stack": [9, 10, 48, 110, 111, 113, 117, 119, 120, 145, 147, 150], "concaten": [9, 10, 46, 48, 79, 110, 111, 113, 117, 119, 120, 138, 140, 145, 147, 150], "photon": [9, 10, 48, 120, 123, 147], "lidar": [9, 10, 48, 120, 123, 147], "depth": [9, 10, 22, 28, 33, 48, 72, 76, 77, 78, 79, 115, 120, 123, 147], "load": [9, 10, 18, 36, 42, 48, 50, 84, 86, 88, 93, 95, 109, 111, 116, 117, 120, 124, 137, 142, 144, 147, 148], "googl": 10, "colab": 10, "them": [10, 28, 29, 30, 38, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 117], "pip": [10, 47], "instal": [10, 35], "git": [10, 47], "github": [10, 31, 35, 47, 58, 71, 79, 80, 81], "com": [10, 25, 29, 47, 58, 71, 79], "egg": [10, 47], "vanilla": [10, 15, 34, 38, 48, 49, 50, 60, 72, 85, 86, 91, 93, 95, 99, 113, 114, 117, 120, 125, 136, 137, 142, 144, 146, 147, 148, 150, 151, 152], "tomographi": [10, 15, 31, 48, 72, 85, 86, 91, 93, 95, 99, 114, 117, 120, 146, 147, 148, 150, 151], "ct": [10, 15, 34, 47, 48, 60, 72, 76, 77, 85, 86, 91, 92, 93, 95, 99, 101, 114, 117, 120, 125, 136, 137, 142, 144, 146, 147, 148, 150, 151], "dpir": [10, 15, 38, 47, 48, 49, 50, 69, 85, 86, 91, 93, 95, 99, 108, 111, 114, 117, 120, 136, 147], "resolut": [10, 15, 34, 48, 49, 50, 60, 72, 74, 78, 85, 86, 91, 93, 95, 96, 99, 113, 114, 117, 119, 120, 136, 137, 139, 142, 144, 147, 152], "condat": [10, 15, 48, 72, 80, 81, 85, 86, 91, 92, 93, 95, 99, 111, 114, 117, 120, 124, 146, 147, 148, 150, 151], "vu": [10, 15, 48, 72, 85, 86, 91, 92, 93, 95, 99, 111, 114, 117, 120, 124, 146, 147, 148, 150, 151], "primal": [10, 15, 32, 34, 41, 48, 60, 72, 76, 77, 80, 81, 85, 86, 87, 91, 92, 93, 95, 99, 101, 111, 114, 117, 120, 124, 125, 136, 137, 142, 144, 146, 147, 148, 150, 151], "dual": [10, 15, 32, 34, 41, 48, 60, 72, 76, 77, 80, 81, 85, 86, 88, 89, 91, 92, 93, 95, 99, 101, 111, 114, 117, 120, 124, 125, 136, 137, 142, 144, 146, 147, 148, 150, 151], "uncertainti": [10, 17, 21, 47, 48, 53, 72, 86, 91, 95, 97, 111, 114, 116, 117, 120, 133, 135, 146, 147, 148, 150], "quantif": [10, 21, 47, 48, 53, 72, 86, 91, 95, 97, 111, 114, 116, 117, 120, 133, 135, 146, 147, 148, 150], "ula": [10, 21, 48, 53, 72, 86, 91, 95, 97, 111, 114, 116, 117, 120, 133, 146, 147, 148, 150], "diffus": [10, 18, 21, 47, 48, 69, 71, 111, 114, 116, 117, 120, 129, 130, 131, 132, 133, 146, 147, 148, 150], "dp": [10, 21, 48, 71, 86, 91, 111, 116, 117, 120, 147, 148, 150], "diffpir": [10, 19, 21, 47, 48, 71, 86, 91, 94, 108, 111, 114, 117, 120, 147, 148, 150], "sure": [10, 20, 26, 35, 48, 49, 50, 61, 62, 63, 65, 82, 111, 112, 117, 120, 122, 136, 137, 147], "neighbor2neighbor": [10, 26, 48, 49, 50, 65, 82, 111, 112, 117, 120, 122, 136, 137, 147], "multipl": [10, 11, 12, 17, 25, 26, 44, 48, 49, 50, 55, 56, 57, 62, 63, 65, 73, 82, 111, 115, 116, 117, 120, 132, 136, 137, 147], "equivari": [10, 26, 37, 48, 49, 50, 52, 56, 72, 73, 86, 91, 93, 95, 111, 117, 118, 120, 136, 137, 138, 142, 144, 147], "mri": [10, 26, 47, 48, 49, 50, 52, 56, 68, 72, 86, 91, 93, 95, 111, 117, 120, 136, 137, 138, 142, 144, 147], "lista": [10, 30, 32, 34, 48, 49, 50, 60, 83, 84, 86, 91, 93, 95, 105, 109, 117, 120, 136, 137, 142, 144, 147, 152], "compress": [10, 34, 36, 48, 49, 50, 60, 79, 83, 84, 86, 91, 93, 95, 105, 109, 117, 120, 136, 137, 142, 144, 147, 152], "equilibrium": [10, 34, 47, 48, 49, 50, 60, 72, 86, 91, 93, 95, 108, 111, 114, 117, 120, 128, 136, 137, 141, 143, 147], "deq": [10, 34, 45, 47, 48, 49, 50, 60, 72, 86, 91, 93, 95, 108, 111, 114, 117, 120, 128, 136, 137, 141, 143, 147], "scan": [10, 34, 48, 60, 76, 77, 86, 92, 95, 101, 114, 117, 120, 125, 136, 137, 142, 144, 147], "auto_examples_python": 10, "auto_examples_jupyt": 10, "zuo": 11, "gu": 11, "l": [11, 23, 37, 69, 74, 75, 80, 81, 134, 135], "proceed": 11, "ieee": [11, 31, 55, 61, 62, 63, 67, 115, 123], "confer": [11, 13], "vision": 11, "recognit": 11, "pp": [11, 80, 81], "3929": 11, "3938": 11, "drunet": [11, 17, 28, 33, 38, 39, 74, 129, 131], "get_dpir_param": 11, "load_degrad": [11, 13, 22], "kernel_index": [11, 13], "chose": 11, "among": [11, 39, 41], "levin09": 11, "mat": 11, "kernel_torch": [11, 13], "npy": [11, 13, 22], "index": [11, 13], "49": [11, 19, 22, 28, 33], "3mib": [11, 22, 32, 33], "hdf5": [11, 13, 28, 29, 30, 36, 49], "folder": [11, 13, 28, 29, 30, 49, 50], "dir": [11, 13, 36], "dinv_dataset0": [11, 13], "h5": [11, 13, 36], "As": [11, 18, 19, 22, 23, 43], "half": [11, 22, 28, 99, 104, 131, 143, 144], "quadrat": [11, 22, 28, 99, 104, 131, 143, 144], "split": [11, 22, 28, 32, 33, 41, 43, 50, 56, 58, 59, 80, 81, 88, 92, 99, 101, 102, 104, 131, 143, 144], "hq": [11, 22, 28, 41, 99, 104, 131, 141, 143, 144], "altern": [11, 14, 18, 19, 92, 100], "step": [11, 12, 13, 14, 16, 20, 22, 38, 41, 43, 45, 74, 82, 85, 87, 88, 89, 92, 99, 101, 104, 125, 131, 134, 135, 136, 141, 142, 143, 144], "pretrain": [11, 12, 13, 14, 17, 18, 20, 22, 23, 24, 25, 28, 33, 39, 47, 65, 69, 71, 72, 74, 78, 79, 129, 131, 137], "do": [11, 38, 85, 95], "plot_only_first_batch": [11, 13, 136], "By": [11, 13, 52, 56, 57, 58, 59, 60, 85, 86, 92, 94, 95, 96, 117, 119, 120, 133, 134, 135, 139], "default": [11, 13, 22, 38, 39, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 69, 71, 72, 74, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 94, 95, 96, 99, 100, 101, 102, 117, 119, 120, 126, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 152], "497402191162109": 11, "302061080932617": 11, "703": [11, 15, 48], "demo_pnp_dpir_deblur": [11, 15, 48], "camera": [12, 38, 124], "dncnn": [12, 14, 20, 22, 28, 33, 38], "get_image_url": [12, 14, 18, 19], "plot_curv": [12, 14], "optim_iter": [12, 29, 30, 31, 32, 85, 87, 99, 100, 101, 102, 103, 104, 105, 142, 143, 144], "optimiter": [12, 85, 99, 100, 101, 102, 103, 104, 105, 143, 144], "definit": [12, 19], "subclass": [12, 31, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "align": [12, 18, 19, 32, 43, 45, 100, 101, 102, 103, 104, 105, 130, 131, 142], "v_k": 12, "x_k": [12, 20, 29, 30, 32, 41, 43, 45, 85, 87, 92, 100, 101, 103, 104, 105, 135, 142], "tau": [12, 25, 32, 61, 62, 63, 85, 90, 98, 101], "z_k": [12, 20, 32, 41, 43, 45, 85, 92, 100, 101, 102, 142], "x_": [12, 16, 20, 29, 30, 32, 41, 43, 45, 85, 87, 92, 100, 101, 102, 103, 104, 105, 117, 131, 135, 142], "operatornam": [12, 18, 30, 32, 41, 43, 45, 53, 73, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 131, 141, 142], "prox": [12, 18, 29, 30, 31, 32, 41, 42, 43, 86, 88, 89, 90, 91, 93, 94, 95, 98, 100, 101, 102, 104, 105, 108, 117, 118, 131], "_": [12, 18, 19, 23, 29, 30, 32, 41, 43, 57, 73, 80, 81, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 109, 111, 117, 125, 130, 131], "u_k": [12, 32, 43, 87, 101, 104, 105], "2x_": [12, 32], "z_": [12, 16, 32, 41, 43, 45, 85, 92, 100, 101, 102, 135, 142], "fenchel": [12, 101], "legendr": [12, 101], "conjug": [12, 86, 95, 101, 109, 113, 117, 125], "cviter": 12, "g_step": [12, 22, 28, 29, 30, 31, 32, 33], "gstepcv": 12, "f_step": [12, 22, 28, 29, 30, 31, 32, 33], "fstepcv": 12, "cur_data_fidel": [12, 31, 87, 92, 100, 101, 102, 103], "cur_prior": [12, 31, 87, 92, 100, 101, 102, 103], "cur_param": [12, 87, 92, 100, 101, 102, 103], "param": [12, 13, 16, 31, 87, 133], "dict": [12, 22, 85, 87, 92, 99, 100, 101, 102, 103, 136, 137, 141, 143, 144, 151, 152], "dictionari": [12, 22, 28, 29, 30, 33, 41, 85, 87, 92, 99, 100, 101, 102, 103, 136, 137, 142, 143, 144, 151, 152], "estim": [12, 18, 19, 25, 38, 61, 62, 63, 65, 71, 92, 94, 100, 101, 102, 103, 111, 115, 117, 131, 133, 135, 136, 146], "datafidel": [12, 31, 41, 44, 85, 87, 88, 89, 91, 92, 94, 95, 99, 100, 101, 102, 103, 130, 131, 133, 134, 135, 143, 144], "relat": [12, 29, 30], "interest": [12, 18, 85], "updat": [12, 13, 18, 19, 22, 31, 32, 35, 41, 85, 87, 92, 100, 101, 102, 103, 137], "x_prev": [12, 85, 87], "z_prev": 12, "f_fn": [12, 85, 92, 99, 143, 144], "has_cost": [12, 85, 92], "reli": [12, 41, 95], "u_": [12, 32, 43, 87, 100, 101, 102, 104, 105], "moreau": [12, 44, 86, 95, 97, 104], "math": [12, 13, 18, 30, 31, 60, 86, 95, 97], "phyic": 12, "2ax_": 12, "kei": [12, 19, 41, 79, 85, 142], "prox_d_conjug": [12, 86], "gamma": [12, 18, 24, 25, 29, 30, 43, 58, 62, 63, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 100, 102, 103, 104, 105, 111, 113, 117, 121, 122, 142], "barbara": 12, "jpeg": 12, "resize_mod": [12, 14, 148], "resiz": [12, 14, 22, 148], "single_pixel": 12, "frequenc": [12, 137], "our": [12, 16, 19, 29, 30, 32, 35, 47, 101], "condatvu": 12, "200": [12, 19, 28, 29, 30, 32], "output": [12, 13, 14, 18, 19, 29, 30, 54, 66, 68, 69, 71, 72, 74, 82, 85, 86, 87, 88, 106, 107, 113, 119, 122, 123, 136, 137, 139, 141], "x_gt": [12, 14, 85, 87, 141], "compute_metr": [12, 14, 85, 87, 141], "x_model": [12, 14], "img": [12, 14, 16, 17, 18, 19, 20, 150], "gt": [12, 14, 29, 30], "recon": [12, 14, 19, 29, 30], "87": [12, 13, 14, 18, 19, 23, 28, 29, 33], "907": [12, 15, 48], "demo_pnp_custom_optim": [12, 15, 48], "plug": [13, 15, 16, 19, 20, 33, 38, 43, 47, 48, 93, 131, 134, 135, 151], "gspnp": 13, "hurault": [13, 47], "leclair": 13, "papadaki": 13, "plai": [13, 15, 16, 20, 33, 38, 43, 47, 48, 93, 131, 134, 135, 151], "represent": 13, "get_gspnp_param": 13, "blur": [13, 16, 18, 28, 33, 106, 108, 113, 117, 119, 128], "kernels_12": 13, "down": 13, "standart": [13, 14, 99], "solv": [13, 18, 19, 28, 32, 43, 45, 47, 70, 80, 81, 85, 87, 101], "use_bicubic_init": 13, "bicub": [13, 113, 119, 139], "necessarili": [13, 92], "thu": [13, 31, 70, 83, 84, 118, 133, 134, 135], "write": [13, 18, 19, 31, 39, 130, 131], "denoiser_nam": 13, "gsdrunet": [13, 38], "intermedi": [13, 66, 82], "finish": [13, 16, 17, 20, 92], "custom_output": [13, 31], "get_output": [13, 31, 85], "gradientstep": 13, "195m": [13, 19], "45m": 13, "97": [13, 18, 19, 22], "5mb": [13, 25], "25": [13, 16, 18, 19, 22, 24, 25, 28, 29, 30, 31, 38, 79, 131], "0m": [13, 33], "136mb": 13, "109mb": 13, "7m": [13, 19, 22, 23, 32, 33], "132mb": 13, "37": [13, 18, 19, 22, 28, 31], "71": [13, 19, 22, 28, 32, 33], "5m": [13, 19, 33], "146mb": 13, "154mb": 13, "107m": 13, "167mb": 13, "63": [13, 17, 18, 19, 22, 28, 29, 33], "123m": 13, "166mb": 13, "139m": 13, "160mb": 13, "81": [13, 17, 19, 22, 24, 25, 29], "157m": [13, 22], "168mb": 13, "89": [13, 16, 19, 22, 28], "173m": [13, 22], "152mb": 13, "189m": 13, "158mb": 13, "03e": 13, "64e": [13, 28], "04": [13, 15, 18, 19, 21, 22, 24, 25, 29, 30, 48], "14e": 13, "255970001220703": 13, "5749003768087071": 13, "0601496696472168": 13, "1836217893424801": 13, "794": [13, 15, 48], "demo_red_gspnp_sr": [13, 15, 48], "shepplogan": 14, "circl": [14, 31, 125], "chosen": [14, 18, 28, 33, 50, 73, 79, 85, 117, 137], "dncnn_sigma2_grai": 14, "55m": 14, "7mb": 14, "cumput": 14, "674": [14, 15, 48], "demo_vanilla_pnp": [14, 15, 48], "078": [15, 30], "unadjust": [16, 20, 44, 134, 135], "langevin": [16, 20, 47, 134, 135], "preconula": 16, "advantag": 16, "acceler": [16, 22, 28, 68, 85, 87, 118, 134, 141], "np": [16, 17, 18, 19, 109, 129], "5x5": [16, 18], "box": [16, 133, 134, 135], "001": [16, 53, 54, 62, 63, 86, 95, 117, 120, 133, 134, 135], "order": [16, 17, 18, 19, 22, 52, 64, 80, 117, 124, 129], "possibli": [16, 37, 57, 115, 133], "markov": [16, 133, 134, 135], "depend": [16, 40, 41, 45, 71, 85, 131, 133], "previou": [16, 18, 39, 85, 87, 100, 101, 102, 133], "next": [16, 18, 38, 87], "likelihood": [16, 19, 40, 44, 91, 94, 133, 134, 135], "account": [16, 35, 37, 69], "usv": 16, "modifi": [16, 39], "eta": [16, 19, 20, 85, 117, 120, 129, 130, 134, 135], "ax_": 16, "alpha": [16, 18, 19, 20, 71, 74, 130, 131, 133, 134, 135], "nabla": [16, 20, 30, 41, 43, 44, 95, 96, 97, 103, 105, 135], "sqrt": [16, 17, 18, 19, 20, 30, 109, 124, 130, 131, 135, 146], "eta_0": 16, "vrv": 16, "diagon": [16, 54, 116], "entri": [16, 41, 61, 62, 63, 109, 116, 117, 120, 124, 135], "s_": 16, "epsilon": [16, 19, 62, 114, 121, 126, 127], "numer": [16, 53, 54, 117, 125, 133, 134, 135], "issu": [16, 35, 47], "algebra": 16, "product": [16, 54], "effici": [16, 42, 109, 111, 117, 120, 124, 125], "trivial": [16, 106, 115, 116], "thei": [16, 30, 37, 38, 39, 45, 85, 95, 129], "matric": 16, "pulaiter": 16, "noise_std": 16, "x_bar": 16, "y_bar": 16, "u_adjoint": [16, 111], "pow": 16, "randn_lik": [16, 18, 19, 54], "sigma2_nois": 16, "lhood": 16, "lprior": 16, "montecarlo": [16, 132, 134, 135], "care": [16, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 131], "procedur": [16, 32, 82], "calcul": [16, 86, 90, 95, 96, 98], "varianc": [16, 17, 18, 20, 44, 132, 133, 134, 135], "thin": [16, 132, 133, 134, 135], "burnin": [16, 132], "conveni": 16, "interfac": [16, 41], "user": [16, 41, 43, 45, 50, 69, 71, 72, 74, 78, 79, 99, 112, 119, 143, 144], "1e3": [16, 133], "burnin_ratio": [16, 132, 133, 134, 135], "clip": [16, 19, 122, 132, 133, 134, 135, 137, 150], "score": [16, 19, 20, 97], "distribut": [16, 17, 20, 25, 40, 44, 97, 112, 116, 129, 130, 131, 132, 133, 134, 135], "scoreprior": [16, 20, 44, 133, 134, 135], "p_": [16, 20, 44, 97], "sigma_d": 16, "approx": [16, 19, 20, 40, 54], "left": [16, 18, 20, 23, 25, 44, 45, 61, 62, 63, 88, 97, 117, 120, 131, 135, 141], "right": [16, 18, 20, 23, 25, 44, 45, 61, 62, 63, 88, 97, 117, 120, 131, 135, 141], "median": [16, 75], "hyperparamet": [16, 19, 20, 29, 30, 40, 61, 83, 84, 111, 117, 129, 130, 131], "control": [16, 18, 20, 37, 40, 61, 82, 130, 135], "strength": [16, 20], "medianfilt": 16, "1e2": 16, "pula": 16, "posterior": [16, 17, 19, 20, 44, 129, 130, 131, 133, 134, 135], "compar": [16, 17, 20, 141], "signific": [16, 35], "evid": 16, "easi": [16, 47], "wherea": [16, 18, 19, 109, 124, 128], "ula_mean": 16, "ula_var": 16, "pula_mean": 16, "pula_var": 16, "485": 16, "78it": [16, 18, 29], "mont": [16, 20, 38, 61, 62, 63, 73, 132, 133, 134, 135], "carlo": [16, 20, 38, 61, 62, 63, 73, 132, 133, 134, 135], "446": 16, "329": [16, 21, 48], "demo_custom_kernel": [16, 21, 48], "arxiv": [17, 52, 53, 54, 57, 65, 72, 73, 109, 113, 129, 130, 131, 134, 135], "pdf": [17, 52, 65], "2209": [17, 130], "11888": 17, "known": [17, 89], "variou": [17, 25, 38, 44], "linspac": [17, 18, 19, 125, 129], "diff": 17, "etab": [17, 129], "ab": [17, 18, 20, 53, 54, 57, 72, 73, 87, 109, 113, 129, 130, 131, 134, 135], "sum": [17, 19, 20, 30, 41, 43, 92, 124, 145], "42it": [17, 22, 29, 30, 33], "18it": [17, 19, 23, 29, 30, 31, 32], "30it": [17, 22, 29, 32], "27it": [17, 19, 22, 23, 24, 29, 30, 32], "give": [17, 86, 91], "diffusionsampl": [17, 44], "fulli": [17, 22, 23, 24, 25, 66, 82], "fledg": 17, "var": [17, 20, 133], "std": [17, 20], "dev": [17, 20], "flatten": [17, 20, 145], "72it": [17, 18, 23, 29], "75it": [17, 29, 30, 33], "90": [17, 18, 19, 22, 28, 29, 31, 38, 73], "32e": 17, "55e": 17, "558": [17, 21, 48], "demo_ddrm": [17, 21, 48], "tutori": [18, 19, 45, 141], "revisit": 18, "zhou": 18, "tqdm": [18, 19], "butterfli": [18, 19], "best": [18, 19, 24, 25], "256x256": [18, 19], "x_true": [18, 19], "sigma_nois": 18, "revers": [18, 19], "decreas": [18, 19, 85, 129, 130, 131], "equat": [18, 19, 32, 41, 43, 45, 85, 100, 101, 102, 103, 104, 105, 130, 131, 141], "mathbf": [18, 19, 130, 131], "_t": [18, 19, 130, 131], "overlin": [18, 19, 130, 131], "widehat": [18, 19, 130, 131], "cdot": [18, 19, 41, 43, 44, 45, 83, 84, 85, 86, 88, 94, 97, 130, 131], "rho_t": [18, 131], "varepsilon": [18, 19, 130, 131], "zeta": [18, 131], "amount": [18, 40, 135], "refer": [18, 38, 40, 43, 52, 146], "poissonlikelihood": 18, "leq": [18, 88, 101, 105], "sequenc": [18, 71, 124, 130, 131], "posit": [18, 25, 41, 62, 63, 79, 94, 122], "detail": [18, 19, 32, 38, 43, 45, 53, 54, 58, 62, 63, 69, 71, 72, 74, 78, 79, 80, 81, 83, 85, 99, 136, 137, 139, 141, 143, 144], "later": [18, 19], "let": [18, 19, 73], "section": [18, 43], "condit": [18, 23, 71, 131], "author": [18, 19, 38, 71, 79], "ho": [18, 38, 71], "diffunet": [18, 19, 38], "large_model": [18, 19, 71], "befor": [18, 19, 32, 54, 70, 79, 87, 99, 122, 143, 144, 152], "being": 18, "abl": [18, 19], "timestep": [18, 19, 71, 130, 131], "dure": [18, 19, 31, 82, 85, 126], "get_alpha": 18, "beta_start": [18, 19, 71, 131], "beta_end": [18, 19, 71, 131], "num_train_timestep": [18, 19, 71, 131], "beta": [18, 19, 22, 28, 29, 30, 31, 32, 33, 41, 92, 94, 100, 101, 102, 115, 130, 131], "float32": [18, 19, 22, 28, 29, 30, 32, 33, 71, 109, 124, 125], "from_numpi": [18, 19], "alphas_cumprod": 18, "cumprod": [18, 19], "axi": 18, "demo_diffpir": [18, 21, 48], "120": [18, 19, 29], "sigma_t": [18, 19], "find_nearest": [18, 71, 131], "arrai": [18, 71, 129, 131], "asarrai": 18, "idx": 18, "argmin": [18, 71, 88, 89, 91, 131], "arbitrari": [18, 19], "x_noisi": 18, "den": 18, "librari": [18, 28, 29, 30, 31, 33, 35, 67, 137], "simpli": [18, 19, 30, 39, 42], "meaning": 18, "y_denois": 18, "carefulli": 18, "simplic": [18, 28, 33], "x_prox": [18, 42], "last": [18, 87, 116], "firstli": 18, "effect": [18, 139], "residu": [18, 19, 66, 79, 82, 85, 133], "assum": [18, 19, 52, 71, 88, 108, 134, 135], "usual": [18, 19, 43], "why": [18, 19], "rescal": [18, 19, 150], "x_prox_scal": 18, "y_scale": 18, "t_i": 18, "ep": [18, 23, 24, 25, 51], "notic": [18, 88], "secondli": 18, "combin": [18, 38, 39, 131], "realiz": [18, 118, 137], "white": [18, 19, 107, 108, 113, 117], "x_sampled_sc": 18, "x_sampl": 18, "appropri": [18, 73, 91], "suggest": [18, 19, 47, 88], "diffusion_step": 18, "lambda_": [18, 131], "seq": [18, 19], "figsiz": 18, "rcparam": 18, "font": 18, "121": [18, 19], "xlabel": 18, "ylabel": 18, "122": [18, 19], "suptitl": 18, "regularis": [18, 32, 41, 43, 54, 85, 87, 99, 143, 144], "eventu": 18, "no_grad": [18, 52], "len": 18, "curr_sigma": 18, "x0": [18, 19, 31, 117], "normal": [18, 19, 29, 30, 64, 72, 79, 91, 94, 97, 117, 122, 146], "next_sigma": 18, "t_im1": 18, "25it": [18, 19, 22, 23, 29, 31, 32], "47it": [18, 22, 29], "62it": [18, 22, 30], "73": [18, 19, 22, 28, 33], "90it": [18, 29, 31], "83": [18, 19, 22, 24], "93": [18, 19, 22, 29], "readili": [18, 19], "095": [18, 21, 48], "introduc": [19, 67, 68, 72, 78, 79, 134], "chung": 19, "visual": [19, 28, 29, 30, 31, 33, 136, 137], "progress": [19, 70, 129, 130, 131, 132, 133, 134, 135, 136, 137], "addition": [19, 139], "addit": [19, 41, 42, 43, 53, 69, 74, 85, 91, 99, 143, 144], "awgn": 19, "pixelwis": [19, 116], "groundtruth": 19, "pre": [19, 45], "wa": [19, 67, 68, 72, 78, 79, 134], "name": [19, 32, 83, 99, 143, 144], "ffhq": [19, 38, 71], "human": 19, "face": 19, "veri": 19, "nevertheless": 19, "suffici": [19, 23, 85], "diffusion_ffhq_10m": 19, "pt": [19, 22], "357m": 19, "12m": 19, "4mb": [19, 23], "6m": [19, 22], "84": [19, 22, 28, 29, 30, 31, 33], "6mb": 19, "118mb": 19, "133mb": 19, "9m": [19, 22], "135mb": 19, "139mb": 19, "95": [19, 22, 31], "171mb": 19, "114m": 19, "180mb": 19, "135m": 19, "191mb": 19, "156m": 19, "201mb": 19, "176m": 19, "203mb": 19, "197mb": 19, "214m": [19, 22], "193mb": 19, "65": [19, 22, 28, 31, 32, 33], "233m": 19, "183mb": 19, "250m": 19, "76": [19, 22, 29, 30, 32], "271m": 19, "82": [19, 22, 23, 29, 32, 33], "293m": 19, "204mb": 19, "313m": 19, "333m": 19, "354m": 19, "beta_t": 19, "beta_": 19, "rm": 19, "alpha_t": 19, "bar": [19, 131], "prod_": 19, "alpha_j": 19, "alwai": [19, 124], "sim": [19, 20, 52, 61, 62, 63, 73, 109, 114, 121, 126, 127, 135], "hereaft": 19, "_0": 19, "reparametr": 19, "trick": 19, "get_beta": 19, "retriev": 19, "compute_alpha": 19, "index_select": 19, "nabla_": [19, 91, 130], "a_t": [19, 130], "b_t": [19, 130], "tild": [19, 107, 109, 111, 113, 117, 119, 120, 122, 125, 130], "constant": [19, 28, 37, 61, 62, 63, 115, 117, 130, 133, 134, 135], "q": [19, 87], "sigmat": 19, "xt": 19, "x0_t": 19, "bay": 19, "rule": [19, 85], "former": [19, 39, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "tweedi": [19, 20, 44, 97], "formula": [19, 20, 44, 86, 95, 97, 109, 113, 117, 120, 125], "latter": [19, 50, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "intract": 19, "propos": [19, 30, 53, 54, 73], "theorem": [19, 45, 141], "remark": 19, "hat": [19, 23, 52, 57, 64], "sigma_i": [19, 128], "differenti": [19, 41, 43, 52, 86, 94, 95, 96, 101, 130, 134, 135], "enable_grad": 19, "turn": [19, 38, 45, 73, 132, 141, 142], "ll": 19, "grad_ll": 19, "autograd": 19, "grad": [19, 86, 91, 95, 96, 98], "visit": 19, "compon": 19, "readi": 19, "everi": [19, 51, 55, 66, 68, 70, 75, 76, 77, 78, 80, 81, 137], "backpropag": [19, 53, 54, 67], "ddpm": 19, "im": 19, "There": [19, 25], "caveat": 19, "origin": [19, 29, 38, 61, 70, 72, 129, 131, 139], "ancestr": 19, "ddim": [19, 130], "sampler": [19, 44, 132, 133, 134, 135], "One": 19, "freeli": 19, "nfe": 19, "advis": 19, "actual": [19, 92], "static": 19, "ell_2": [19, 32, 64, 88, 89, 91, 117], "simeq": 19, "With": 19, "mind": 19, "num_step": 19, "skip": [19, 82], "seq_next": 19, "time_pair": 19, "x_t": [19, 131], "x0_pred": 19, "next_t": 19, "at_next": 19, "call": [19, 22, 42, 43, 44, 45, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 87, 92, 136, 137], "instead": [19, 39, 51, 53, 55, 65, 66, 68, 75, 76, 77, 78, 80, 81, 104], "aux_x": 19, "option": [19, 41, 82, 85, 87, 94, 106, 107, 113, 119, 124, 136, 141, 148], "l2_loss": 19, "norm_grad": 19, "sigma_tild": 19, "c2": 19, "xt_next": 19, "append": [19, 145], "19it": [19, 29, 31, 32], "22it": [19, 22, 23, 29, 32], "23it": [19, 29, 30, 32], "24it": [19, 29, 30, 32], "09": [19, 22, 26, 29, 30, 48, 51], "34": [19, 22, 29, 33], "41": [19, 22, 28, 32, 33, 48], "42": [19, 22, 23, 25, 28, 29], "51": [19, 20, 22, 26, 29, 54], "69": [19, 22, 28, 29, 33], "74": [19, 22, 23, 29, 33], "79": [19, 22, 24, 25, 32, 33], "85": [19, 22, 23, 28, 31, 129], "91": [19, 22, 23, 32], "92": [19, 22, 29, 30], "101": [19, 23], "102": [19, 29], "104": [19, 28, 33], "105": [19, 28, 29], "106": 19, "110": 19, "111": [19, 28, 29], "112": 19, "113": [19, 28], "115": 19, "116": [19, 22], "117": [19, 28, 29], "118": 19, "119": 19, "123": [19, 21, 29, 48], "124": [19, 28], "125": [19, 28], "126": [19, 28, 29], "127": 19, "129": [19, 29], "130": [19, 33], "131": 19, "132": [19, 29], "134": [19, 28], "135": [19, 28, 29, 32], "136": 19, "137": 19, "138": [19, 29], "139": 19, "140": 19, "141": [19, 29], "142": 19, "143": 19, "144": [19, 29], "145": [19, 28], "146": 19, "147": [19, 29], "148": 19, "149": [19, 28], "150": [19, 22, 28, 29], "151": 19, "152": [19, 28], "153": [19, 29], "154": [19, 28, 33], "155": [19, 28], "156": [19, 29], "21it": [19, 22, 29, 30, 32], "157": [19, 28], "158": [19, 80, 81], "159": [19, 28, 29], "160": 19, "161": 19, "162": [19, 29], "163": [19, 28], "164": [19, 28], "165": [19, 29], "166": [19, 28], "167": 19, "168": [19, 28, 29], "169": 19, "170": [19, 28], "171": [19, 29, 33], "172": [19, 31, 34, 48], "173": [19, 33], "174": [19, 29], "175": 19, "176": [19, 22, 28], "177": [19, 29], "178": [19, 28], "179": [19, 33], "180": [19, 29, 79, 125], "181": [19, 22, 28], "182": 19, "183": [19, 28, 29], "184": 19, "185": 19, "187": 19, "188": [19, 33], "190": 19, "191": [19, 28], "192": [19, 29], "193": 19, "194": [19, 33], "195": [19, 29], "196": 19, "197": 19, "198": [19, 29], "199": [19, 28], "demo_dp": [19, 21, 48], "quantifi": 20, "bayesian": 20, "neg": [20, 44, 94, 122, 133, 134, 135], "propto": [20, 44, 97], "point": [20, 28, 35, 39, 41, 43, 45, 53, 85, 86, 87, 88, 91, 92, 117, 141], "role": 20, "fnejacobianspectralnorm": 20, "make": [20, 35, 38, 137], "firmli": 20, "expans": 20, "nonexpans": [20, 38, 53], "help": [20, 35], "stabil": 20, "download_lipschitz": [20, 72], "dncnn_sigma2_lipschitz_color": 20, "56m": 20, "176mb": 20, "5e3": 20, "28it": [20, 22, 29, 30, 32], "06it": [20, 22, 29, 30, 31], "572": [20, 21, 48], "demo_sampl": [20, 21, 48], "677": 21, "present": [22, 23, 24], "beyond": 22, "subset": [22, 24, 25, 116], "coil": [22, 118], "fastmri": 22, "973": 22, "320x320": 22, "faster": 22, "fastmri_knee_singlecoil": 22, "399m": 22, "73m": 22, "1m": [22, 33], "0mib": [22, 33], "8mib": [22, 33], "5mib": [22, 33], "4mib": [22, 33], "1mib": [22, 33], "9mib": [22, 33], "104m": 22, "112m": 22, "119m": 22, "127m": 22, "134m": 22, "142m": 22, "150m": 22, "165m": 22, "180m": 22, "187m": 22, "193m": 22, "200m": 22, "208m": 22, "221m": 22, "227m": 22, "234m": 22, "240m": 22, "247m": 22, "254m": 22, "259m": 22, "267m": 22, "273m": 22, "281m": 22, "288m": 22, "296m": 22, "304m": 22, "309m": 22, "317m": 22, "323m": 22, "332m": 22, "338m": 22, "343m": 22, "352m": 22, "358m": 22, "364m": 22, "368m": 22, "377m": 22, "383m": 22, "389m": 22, "393m": 22, "397m": 22, "mri_mask_128x128": 22, "900": 22, "demo_equivariant_imag": [22, 26, 48], "opt": 22, "hostedtoolcach": 22, "x64": 22, "lib": 22, "python3": 22, "site": 22, "packag": [22, 37, 38, 41, 42, 44, 45, 67], "1603": 22, "antialia": 22, "randomresizedcrop": 22, "chang": [22, 35, 85, 87, 137], "v0": [22, 79], "pil": 22, "backend": 22, "suppress": 22, "warn": [22, 95], "directli": [22, 31, 47, 71, 79, 99, 143, 144], "pass": [22, 28, 35, 39, 41, 45, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 99, 113, 126, 141, 142, 143, 144], "futur": [22, 35], "still": 22, "antialias": 22, "infer": 22, "tabl": [22, 29, 30, 40], "wrap": [22, 28, 29, 30, 33, 38, 67], "scheme": [22, 23], "mc": [22, 23, 73], "ei": [22, 52], "group": [22, 38, 52, 73], "rotat": [22, 23, 38, 52, 73, 128], "acquisit": [22, 42, 85, 117, 120, 124, 133, 134, 135], "translat": [22, 52, 140], "scratch": [22, 23, 24, 25], "mcloss": [22, 23], "eiloss": 22, "new_demo_ei_ckp_150_v3": 22, "17m": 22, "05m": 22, "9mb": [22, 24], "ckp_interv": [22, 23, 137], "187019": 22, "loss_mc": [22, 23], "36e": 22, "loss_ei": 22, "000175": 22, "000189": 22, "35e": 22, "000122": 22, "000136": 22, "000128": 22, "00014": 22, "3e": 22, "000153": 22, "18e": 22, "000126": 22, "000138": 22, "baseunfold": [22, 29, 30, 31, 32, 33, 45, 141, 143, 144], "fixed_point": [22, 28, 29, 30, 31, 32, 33], "fixedpoint": [22, 28, 29, 30, 31, 32, 33, 41, 43, 45, 85, 92, 141], "hqsiter": [22, 28], "fstephq": [22, 28], "gstephq": [22, 28], "init_params_algo": [22, 28, 29, 30, 31, 32, 33], "parameterdict": [22, 28, 29, 30, 31, 32, 33], "type": [22, 28, 29, 30, 31, 32, 33, 73, 74, 109, 125, 149, 153, 154, 155], "parameterlist": [22, 28, 29, 30, 32, 33], "modulelist": [22, 28, 29, 30, 31, 32, 33], "in_conv": [22, 28, 31, 33], "conv_list": [22, 28, 31, 33], "out_conv": [22, 28, 31, 33], "nl_list": [22, 28, 31, 33], "equivariant_imag": 22, "16it": [22, 25, 30, 31, 32], "32it": [22, 29, 30, 32], "44it": [22, 28, 29], "20it": [22, 29, 30, 31, 32], "59it": [22, 23, 28, 32], "92it": [22, 23, 29, 31], "09it": [22, 29, 30, 31, 32], "36it": [22, 23, 25, 28, 29, 30], "17it": [22, 23, 29, 30, 31, 32], "33it": [22, 23, 29], "37it": [22, 29, 32], "39it": [22, 28, 29], "40it": [22, 29], "34it": [22, 29, 30], "43it": [22, 29, 30], "11it": [22, 29, 30, 31, 32], "45it": [22, 28], "13it": [22, 29, 30, 31, 32, 33], "12it": [22, 29, 30, 31, 32], "05it": [22, 29, 30, 31, 32], "223185918102523": 22, "1478173985231379": 22, "70320398513585": 22, "1404058468490259": 22, "649": [22, 26, 48], "y_i": [23, 57], "a_": [23, 57, 109], "g_i": [23, 57], "dot": [23, 57, 83], "approach": [23, 39, 65], "unsupervis": [23, 137], "sum_": [23, 73], "mnist": [23, 24, 25, 29, 30, 36, 50], "train_base_dataset": [23, 28, 29, 30, 32, 33], "root": [23, 24, 25, 29, 30, 35, 36], "test_base_dataset": [23, 28, 29, 30, 32, 33], "receiv": 23, "whole": [23, 24, 25, 82, 133], "number_of_oper": 23, "demo_multioperator_imag": [23, 26, 48], "test_datapoint": [23, 24, 25, 29, 30, 50], "452": 23, "995": 23, "534": 23, "10it": [23, 29, 31], "985": 23, "543": 23, "02it": [23, 30, 31], "1001": 23, "530": 23, "1029": 23, "531": 23, "1039": 23, "529": 23, "1035": 23, "536": 23, "1046": 23, "1047": 23, "544": 23, "1045": 23, "1028": 23, "artifact": [23, 65, 79, 136, 137], "remov": [23, 43, 65, 116, 136, 137], "phi": [23, 65], "multi": [23, 39, 57], "moi": [23, 57], "necessari": [23, 35, 71, 130, 131], "moiloss": 23, "demo_moi_ckp_10": 23, "19m": 23, "2m": 23, "0mb": 23, "2mb": [23, 24], "2069441": 23, "00173": [23, 31], "loss_moi": 23, "00445": 23, "00618": 23, "00123": 23, "00323": 23, "00446": [23, 31], "00118": 23, "00298": 23, "00416": [23, 31], "0044": 23, "00558": 23, "00115": 23, "00502": 23, "00616": 23, "00152": 23, "00457": 23, "00609": 23, "00185": [23, 31], "00436": 23, "00621": 23, "0019": [23, 31], "00469": 23, "00659": 23, "00291": 23, "00465": 23, "00755": 23, "00275": 23, "00461": 23, "00737": 23, "00288": 23, "00728": 23, "00296": 23, "00431": 23, "00284": 23, "00507": 23, "0079": 23, "00282": 23, "00477": 23, "0076": 23, "00277": 23, "00742": [23, 31], "00279": 23, "00464": 23, "00743": 23, "00272": 23, "00466": 23, "00738": 23, "00267": 23, "00458": 23, "00725": 23, "00266": 23, "00447": 23, "00714": 23, "00262": 23, "00434": 23, "00695": 23, "95it": [23, 29, 31, 33], "00254": 23, "00414": 23, "00669": 23, "00249": 23, "0043": 23, "00679": 23, "00241": 23, "00233": 23, "00237": 23, "00474": 23, "00235": 23, "00704": 23, "0024": 23, "00463": 23, "00703": 23, "00452": 23, "00687": 23, "00229": [23, 31], "00451": 23, "0068": 23, "00688": 23, "00234": 23, "00681": 23, "0023": 23, "00453": 23, "00682": 23, "00228": [23, 31], "00675": 23, "00225": [23, 31], "00448": 23, "00673": 23, "00221": [23, 31], "00442": 23, "00663": 23, "00218": [23, 31], "00432": 23, "0065": 23, "00214": [23, 31], "00438": 23, "00652": 23, "00213": [23, 31], "00644": 23, "00209": [23, 31], "00649": 23, "00206": [23, 31], "00439": [23, 31], "00645": 23, "00202": [23, 31], "00634": 23, "00199": [23, 31], "00433": 23, "00632": 23, "00197": [23, 31], "0063": 23, "00195": [23, 31], "00427": [23, 31], "00622": 23, "00193": [23, 31], "00426": 23, "00619": 23, "00196": [23, 31], "00421": 23, "00617": 23, "00417": 23, "0061": 23, "00191": [23, 31], "00422": 23, "00613": 23, "batchnorm2d": [23, 24, 25, 82], "momentum": [23, 24, 25, 85, 87, 141], "affin": [23, 24, 25], "track_running_stat": [23, 24, 25], "multioperator_imag": 23, "67it": [23, 25, 30], "870219421386718": 23, "8191799853780084": 23, "103665447235107": 23, "7379694923885824": 23, "correl": 24, "neighbor": [24, 58], "map": [24, 31, 40, 42, 44, 58, 71, 80, 81, 97, 112, 117, 120, 130, 131], "propag": [24, 52, 58], "corrupt": [24, 25], "demo_n2n": 24, "451": 24, "908": 24, "ckp_50_demo_n2n": 24, "14m": [24, 25], "18m": [24, 25], "444737": [24, 25], "0745": [24, 29, 30], "0695": [24, 29], "0678": 24, "826131057739257": 24, "5348207475459481": 24, "346026992797853": [24, 25], "7863419781551304": [24, 25], "700": [24, 26, 48], "demo_n2n_denois": [24, 26, 48], "knowledg": 25, "about": [25, 37, 38], "unbias": [25, 61, 62, 63], "odot": [25, 62, 63, 115], "bernoulli": [25, 62, 63, 116], "elementwis": [25, 62, 63], "yann": [25, 29], "lecun": [25, 29], "exdb": [25, 29], "idx3": [25, 29], "ubyt": [25, 29], "gz": [25, 29], "raw": [25, 29], "9912422": [25, 29], "226842597": 25, "extract": [25, 29], "idx1": [25, 29], "28881": [25, 29], "181885426": 25, "t10k": [25, 29], "1648877": [25, 29], "141331004": 25, "4542": [25, 29], "38958136": 25, "demo_sur": 25, "943": 25, "surepoissonloss": 25, "suregaussianloss": 25, "surepgloss": 25, "ckp_10_demo_sur": 25, "3mb": 25, "00219": [25, 31], "0011": 25, "0022": [25, 31], "000707": 25, "000629": 25, "420438003540038": 25, "5207505328858359": 25, "370": [25, 26, 48], "demo_sure_denois": [25, 26, 48], "822": 26, "000": 27, "toi": 28, "larger": [28, 33, 50, 71, 109, 117, 125, 134, 135], "wandb": [28, 31, 33, 136, 137], "gd": [28, 103, 141], "deq_build": [28, 45], "cbsd500": [28, 31, 33], "replac": [28, 31, 33, 43, 45], "demo_deq": [28, 34, 48], "generated_datasets_path": [28, 29, 30, 33], "helper": [28, 33, 99, 143, 144], "anderson_acceleration_forward": 28, "anderson": [28, 85, 87, 141], "anderson_acceleration_backward": [28, 141], "anderson_history_s": 28, "histori": [28, 85, 87, 141], "anderson_acceler": [28, 85, 87], "history_size_backward": [28, 141], "history_s": [28, 85, 87], "188166": 28, "808": 28, "923": 28, "952": 28, "264": 28, "48it": [28, 29], "841": 28, "462": 28, "0736": [28, 29, 30], "745": 28, "0963": 28, "285": 28, "58it": [28, 29, 30, 33], "58e": 28, "88e": 28, "41e": 28, "12e": 28, "09e": 28, "01e": 28, "13e": 28, "97e": 28, "50it": [28, 31], "9e": 28, "69e": 28, "66e": 28, "39e": 28, "71e": 28, "19e": 28, "81e": 28, "25e": 28, "288": 28, "227": 28, "343": 28, "basedeq": [28, 45, 143], "deq_hq": 28, "216714859008789": 28, "904853820800781": 28, "627": [28, 34, 48], "nutshel": 29, "involv": [29, 80, 81], "learnabl": [29, 30, 32, 43, 45, 79, 82, 142], "mnist_train": [29, 30], "train_test_transform": [29, 30], "188544282": 29, "186076334": 29, "103464706": 29, "45358401": 29, "highli": [29, 30], "10x": [29, 30], "under": [29, 30, 43], "demo_lista": [29, 34, 48], "712": 29, "min_x": [29, 30, 85, 87], "wx": 29, "_1": [29, 85, 87, 89, 90], "pgditer": [29, 30, 85, 87], "text": [29, 30, 61, 63, 73, 85, 88, 89, 91, 109, 111, 116, 126, 146], "ax_k": [29, 30], "waveletdict": 29, "both": [29, 30, 31, 38, 124, 125], "These": [29, 30, 37, 95, 142], "yield": [29, 30], "sigma_denoiser_init": 29, "loader": [29, 30, 136], "0995": 29, "0687": 29, "0801": [29, 30], "0851": 29, "0836": 29, "0868": 29, "0791": [29, 30], "0758": [29, 30], "0773": [29, 30], "08it": [29, 31, 32], "0785": [29, 30], "0797": [29, 30], "0778": [29, 30], "0823": 29, "0853": 29, "0854": 29, "0832": [29, 30], "0827": [29, 30], "0829": 29, "0808": [29, 30], "081": [29, 30], "0807": [29, 30], "079": [29, 30], "0769": [29, 30], "0795": [29, 30], "0784": [29, 30], "0781": [29, 30], "0782": [29, 30], "0775": [29, 30], "0796": 29, "0792": 29, "0777": [29, 30], "0765": [29, 30], "0756": [29, 30, 32], "0749": 29, "0748": 29, "0746": [29, 30], "0744": 29, "0752": [29, 30], "0741": 29, "0753": 29, "0754": [29, 30], "0733": [29, 30], "69it": [29, 30], "072": 29, "0715": [29, 30], "0712": [29, 112], "0707": 29, "0705": 29, "0699": 29, "069": [29, 32], "0685": 29, "14it": [29, 30, 31, 32], "0682": 29, "0679": [29, 32], "068": 29, "0676": 29, "0669": 29, "0677": 29, "0672": 29, "0666": 29, "0667": [29, 30], "0665": 29, "0663": 29, "0664": 29, "0661": 29, "35it": [29, 30, 33], "0662": 29, "0657": 29, "0658": 29, "0659": 29, "0656": 29, "0655": 29, "0653": 29, "0651": 29, "065": 29, "0649": 29, "0648": 29, "0647": 29, "0645": 29, "0642": 29, "0949": 29, "0641": 29, "0547": 29, "0424": 29, "0456": [29, 32], "0444": 29, "0466": 29, "0482": 29, "0492": 29, "0505": 29, "0495": 29, "0514": 29, "38it": [29, 32], "0527": 29, "052": 29, "0522": [29, 32], "0544": 29, "0568": 29, "0557": 29, "0562": 29, "0556": 29, "0558": 29, "0553": 29, "0561": 29, "0567": 29, "0554": 29, "0551": 29, "0548": 29, "0542": 29, "07it": [29, 30, 31], "0538": 29, "056": 29, "0565": 29, "0559": 29, "055": 29, "0549": 29, "0546": [29, 32], "0543": 29, "0541": 29, "054": 29, "0539": 29, "0536": 29, "0533": 29, "0532": 29, "0534": 29, "0537": 29, "053": 29, "0528": 29, "0525": 29, "0524": 29, "94it": [29, 30, 31, 32], "0523": 29, "0521": [29, 32], "0519": [29, 32], "0517": 29, "0516": 29, "0515": 29, "0513": 29, "0511": 29, "051": 29, "0509": 29, "0508": 29, "0507": 29, "0506": 29, "0603": 29, "049": 29, "0478": 29, "0464": 29, "0486": 29, "046": 29, "0458": 29, "0469": 29, "0476": 29, "0477": 29, "0483": 29, "0479": [29, 109], "047": 29, "0465": 29, "0475": 29, "0473": 29, "0467": 29, "0474": 29, "048": 29, "0468": 29, "99it": [29, 31, 32], "00it": [29, 31], "0498": 29, "0463": 29, "0425": 29, "0433": 29, "0438": 29, "0455": 29, "0452": 29, "0462": 29, "0451": 29, "0445": 29, "0436": 29, "0447": 29, "0459": 29, "0453": [29, 32], "045": 29, "0457": 29, "0454": 29, "0442": 29, "0443": 29, "0437": 29, "0402": 29, "0414": 29, "0428": 29, "0426": 29, "0423": 29, "0412": 29, "042": 29, "0415": 29, "0422": 29, "0448": 29, "0441": 29, "044": 29, "0439": 29, "0434": 29, "0435": 29, "0432": 29, "04it": [29, 30, 31, 32], "fsteppgd": [29, 30], "gsteppgd": [29, 30], "2x3": 29, "dwt": [29, 32], "dwtforward": [29, 32], "iwt": [29, 32], "dwtinvers": [29, 32], "column": [29, 30, 116, 150], "back": [29, 30, 125], "project": [29, 30, 35, 38, 88, 89, 125, 133, 134, 135], "domain": [29, 30, 67], "unfolded_pgd": [29, 30], "24512767791748": 29, "254467964172363": 29, "plot_paramet": [29, 30, 33], "init_param": [29, 30, 33, 152], "688": [29, 34, 48], "demo_licp": 30, "611": 30, "minimis": [30, 85, 100, 101, 102, 103, 104, 105], "tv": [30, 64, 80], "smooth": [30, 94], "c": [30, 32, 42, 62, 70, 71, 79, 88, 107, 108, 109, 111, 116, 124, 146, 150], "finit": 30, "dx": [30, 80, 81], "tv_smooth": 30, "mse_loss": 30, "reduct": [30, 79], "meth": [30, 32], "share": 30, "0721": 30, "0842": 30, "0811": 30, "0772": 30, "0787": 30, "0793": 30, "0799": 30, "0814": 30, "0815": 30, "0813": 30, "0809": 30, "0759": 30, "66it": 30, "0806": 30, "0835": 30, "0838": 30, "0847": 30, "0839": 30, "083": 30, "0826": 30, "0798": 30, "0794": 30, "0824": 30, "0761": 30, "0776": 30, "0779": 30, "0771": 30, "077": 30, "0768": 30, "0774": 30, "0757": 30, "0766": 30, "0767": 30, "0732": 30, "076": 30, "0722": 30, "0763": 30, "0755": 30, "075": 30, "228300094604492": 30, "30112361907959": 30, "were": 30, "check": [30, 32, 35, 85, 87, 117, 137], "892": [30, 34, 48], "demo_custom_prior_unfold": [30, 34, 48], "adler": 31, "jona": 31, "ozan": 31, "\u00f6ktem": 31, "transact": [31, 67], "medic": 31, "1322": 31, "1332": 31, "fly": 31, "odl": 31, "odlgroup": 31, "randomphantomdataset": 31, "shepplogandataset": 31, "cpiter": [31, 32], "fstep": [31, 41, 43], "gstep": [31, 41, 43], "pdnet_primalblock": 31, "pdnet_dualblock": 31, "pditer": 31, "redefin": 31, "respect": [31, 45, 73, 92], "afterward": [31, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "pdnetiter": 31, "gsteppdnet": 31, "fsteppdnet": 31, "Their": 31, "pdnetprior": 31, "pdnetdatafid": 31, "n_iter_train": 31, "1e5": 31, "n_data": 31, "n_primal": 31, "extend": [31, 39], "n_dual": 31, "repeat": 31, "u0": 31, "cosineannealinglr": 31, "t_max": 31, "clean": [31, 33, 106, 107, 109, 111, 113, 119, 120, 125], "random_phantom": 31, "online_measur": [31, 136, 137], "75594": 31, "00362": 31, "00919": [31, 32], "00684": 31, "00625": 31, "00581": 31, "00555": 31, "00548": 31, "00528": 31, "005": 31, "00488": 31, "00478": 31, "0046": 31, "00404": 31, "00188": 31, "00217": 31, "00223": 31, "00238": 31, "00227": 31, "00226": 31, "00232": 31, "0018": 31, "00208": 31, "00201": 31, "00204": 31, "00216": 31, "00215": 31, "00166": 31, "00194": 31, "00171": 31, "00177": 31, "00179": 31, "00184": 31, "00183": 31, "00189": 31, "00192": 31, "00203": 31, "00187": 31, "00186": 31, "00198": 31, "00155": 31, "00211": 31, "00136": 31, "00207": 31, "002": 31, "00159": 31, "00168": 31, "00165": 31, "00164": 31, "00162": 31, "00163": 31, "00169": 31, "00172": 31, "00174": 31, "00176": 31, "00175": 31, "00178": 31, "00181": 31, "00182": 31, "00148": 31, "00156": 31, "prelu": 31, "num_paramet": 31, "836183547973633": 31, "803513526916504": 31, "demo_learned_primal_du": [31, 34, 48], "reformul": 32, "underset": [32, 41, 43, 80, 81, 83, 84, 85, 88, 89, 91, 101, 117], "iota_": [32, 88], "regnam": [32, 41, 43, 85, 101], "ball": [32, 88, 89], "center": [32, 88, 89, 107, 108, 113, 117], "recal": [32, 45, 73, 142], "convex": [32, 41, 80, 81, 86, 88, 95], "infti": [32, 88], "fashion": [32, 45, 46, 109, 116, 124, 145], "63m": 32, "stepsize_du": [32, 41], "document": [32, 35, 39, 40, 43, 55, 61, 62, 63, 101, 115, 123], "0598": 32, "059": 32, "0604": 32, "0612": 32, "0576": 32, "0623": 32, "0616": 32, "0578": 32, "0399": 32, "0333": 32, "032": 32, "0293": 32, "0277": 32, "0278": 32, "0276": 32, "0257": [32, 119], "00329": 32, "00493": 32, "0088": 32, "0186": 32, "0163": 32, "014": 32, "0144": 32, "0162": 32, "0168": 32, "0161": 32, "0155": 32, "0121": 32, "0197": 32, "0175": 32, "0102": 32, "00429": 32, "00949": 32, "00972": 32, "00854": 32, "00758": 32, "00726": 32, "00967": 32, "00906": 32, "00933": 32, "00954": 32, "00925": 32, "00942": 32, "0097": 32, "00985": 32, "fstepcp": 32, "gstepcp": 32, "3x3": [32, 109, 110, 112, 116, 118, 125], "vialis": 32, "correctli": 32, "model_spec": 32, "eval": 32, "537": [32, 34, 48], "demo_unfolded_constrained_lista": [32, 34, 48], "jointli": 33, "gauss": 33, "demo_unfolded_sr": 33, "23m": 33, "dr": [33, 41, 99, 102, 143, 144], "dougla": [33, 99, 102, 143, 144], "rachford": [33, 99, 102, 143, 144], "resp": [33, 43], "lenght": 33, "element": [33, 38, 40, 55, 66, 106, 109, 115, 119], "relax": [33, 41, 43, 74, 80, 81, 92, 100, 101, 102], "188179": 33, "518": 33, "260": 33, "997": 33, "0833": 33, "243": 33, "203": 33, "205": 33, "drsiter": 33, "fstepdr": 33, "gstepdr": 33, "unfolded_dr": 33, "686464786529541": 33, "9960274696350098": 33, "798": [33, 34, 48], "demo_vanilla_unfold": [33, 34, 48], "714": 34, "driven": 35, "welcom": 35, "ultim": 35, "aim": [35, 43, 45], "comprehens": 35, "acknowledg": 35, "contributor": 35, "taken": 35, "decid": 35, "authorship": 35, "public": 35, "prefer": 35, "fork": 35, "repositori": [35, 47, 58, 69, 71, 72, 74, 78, 79], "submit": 35, "pull": 35, "pr": 35, "prepar": 35, "pleas": [35, 47], "compliant": 35, "black": [35, 107, 108, 113, 117], "style": 35, "directori": [35, 36, 136, 137, 152], "desir": [35, 50], "machin": 35, "pytest": 35, "html": [35, 80, 81], "doc": [35, 136, 137], "familiar": 35, "workflow": 35, "open": [35, 47], "tracker": [35, 47], "ask": 35, "question": [35, 47], "discord": [35, 47], "server": [35, 47], "try": [35, 47], "address": 35, "soon": 35, "send": 35, "email": 35, "develop": 35, "idea": 35, "subpackag": 36, "celeba": [36, 50], "transform_data": 36, "data_train": 36, "data_test": 36, "300": [36, 42], "format": [36, 50], "path": [36, 49, 69, 71, 72, 74, 78, 79, 137, 150, 151, 152], "dinv_dataset": [36, 50], "popular": 37, "especi": 37, "design": [37, 61, 62, 63], "written": [37, 41, 85], "alon": [37, 52], "submodul": 37, "augment": [37, 50, 52, 57], "togeth": 37, "lipschitz": [37, 38, 94, 117, 134, 135], "quick": 38, "block": [38, 39, 69, 74, 79], "standalon": 38, "equivariantdenois": 38, "moment": 38, "vertic": [38, 64, 73, 118], "horizont": [38, 64, 73], "flip": [38, 73, 109], "either": [38, 39, 41, 43, 45, 50, 71, 73, 79, 83, 84, 85, 99, 143, 144, 150], "uniformli": [38, 125, 126], "exact": [38, 107, 109, 111, 113, 117, 119, 125], "briefli": 38, "summar": [38, 40], "relev": [38, 85, 99, 143, 144], "host": 38, "monoton": 38, "constraint": [38, 133, 134, 135], "firm": [38, 53], "scunet": 38, "synthet": 38, "realist": 38, "artefact": 38, "swinir": 38, "page": 38, "hidden": [38, 71, 79], "dhariw": 38, "nichol": 38, "imagenet128": [38, 71], "compat": 39, "dataparallel": 39, "distributeddataparallel": 39, "gpu_numb": 39, "device_id": 39, "seamlessli": [39, 145], "loop": [39, 87], "drawback": 39, "within": [39, 51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "reader": [39, 43], "unifi": 40, "xset": [40, 41, 42, 43, 85, 86, 117, 120], "underli": [40, 71], "yset": [40, 41, 42, 43, 85, 86, 117, 120], "observ": [40, 57, 86, 92, 100, 102, 117, 120], "often": 40, "forw": [40, 42, 43, 52, 56, 57], "determinist": [40, 42, 117, 120], "captur": [40, 42, 117, 120], "system": [40, 87], "colon": 40, "stochast": [40, 42, 78, 79, 117, 120, 130, 134], "mapsto": [40, 41, 42, 43, 85, 117, 120], "datafid": [40, 41, 43, 45, 85, 86, 89, 91, 94], "distanc": [40, 41, 85, 86, 89, 91, 94, 95], "enforc": [40, 41, 43, 56, 75, 85], "choic": [40, 41, 61, 62, 63], "below": 40, "discrep": [40, 41, 85], "reg": [40, 41, 43, 44, 45, 85], "promot": 40, "plausibl": 40, "collect": [41, 42, 45, 47], "routin": [41, 45], "eq": [41, 43, 73, 85], "min_prob": [41, 43, 85], "tag": [41, 79, 85], "quad": [41, 43, 61, 63, 85], "datafidnam": [41, 43, 85, 86, 91, 94], "mathbb": [41, 43, 53, 54, 85, 109, 111, 116], "precis": [41, 43, 73, 85, 90, 117], "abov": [41, 85, 101], "qquad": [41, 43, 85, 87, 92], "baseoptim": [41, 43, 99, 142], "predefin": [41, 47, 117, 120], "serv": [41, 84], "come": [41, 95, 117], "distancenam": [41, 86, 91, 94, 101], "circ": [41, 55, 117, 120], "tikhonov": [41, 43], "overwritten": [41, 43, 95, 109, 117, 120, 125], "store": [41, 85, 87, 92, 109, 124, 133], "whose": [41, 115, 125, 152], "typic": [41, 44, 97], "enough": 41, "theori": [41, 43, 80, 81], "_g": [41, 43, 45, 92, 142], "appear": 42, "applic": [42, 80, 81], "character": [42, 117, 120], "affect": [42, 50, 88, 117, 120], "x_adj": 42, "x_dagger": [42, 117], "bilinear": [42, 113, 119], "optimis": 43, "read": 43, "denoisernam": [43, 73], "On": 43, "hand": 43, "assumpt": [43, 101, 130], "g_": 43, "parametr": 43, "consequ": 43, "encompass": [43, 142], "aris": 43, "includ": [44, 50, 72], "leverag": [44, 45, 54, 111, 141], "convolv": [44, 97], "valid": [44, 86, 95, 106, 107, 113, 119], "posteriori": [44, 97], "yosida": [44, 97], "envelop": [44, 97, 104], "inf_z": [44, 97], "sota": 44, "produc": [44, 117, 120], "statist": [44, 133, 134, 135], "mcmc": 44, "_f": [45, 92, 142], "sometim": 45, "builder": 45, "virtual": [45, 52, 141], "infinit": [45, 141], "look": 45, "partial": [45, 89, 141], "star": [45, 141], "incom": [45, 141], "wrapper": 46, "repres": [46, 85, 106, 119, 145], "better": 46, "scalar": [46, 64, 115, 137], "similar": [46, 109, 116, 124, 145], "quickli": 46, "framework": 47, "state": 47, "art": 47, "latest": 47, "version": [47, 73, 80, 81, 138, 140, 145], "pick": 47, "join": 47, "convers": 47, "touch": 47, "julian": 47, "tachella": 47, "dongdong": 47, "chen": 47, "samuel": 47, "matthieu": 47, "terri": 47, "477": 48, "bool": [49, 50, 52, 53, 54, 57, 59, 65, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 85, 87, 92, 99, 109, 116, 117, 122, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 143, 144, 146, 148, 150, 151, 152], "hd5": 50, "hd5dataset": 50, "assign": [50, 119], "evenli": 50, "datapoint": 50, "filenam": 50, "worker": 50, "charbonni": 51, "overridden": [51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "although": [51, 55, 66, 68, 75, 76, 77, 78, 80, 81, 95], "recip": [51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "regist": [51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "hook": [51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "silent": [51, 55, 66, 68, 75, 76, 77, 78, 80, 81], "mseloss": [52, 56, 57, 58, 59, 60], "apply_nois": [52, 57], "invari": [52, 88], "2103": [52, 135], "14756": 52, "t_g": [52, 73], "ell_1": [52, 56, 57, 58, 59, 60, 80, 83, 84, 89, 90], "sensor": [52, 57, 107, 109, 111, 113, 117, 119, 120, 125], "doe": [52, 53, 54, 67, 72, 88, 104, 117, 120, 142], "x_net": [52, 56, 57, 60, 61, 62, 63, 64, 137], "tol": [53, 54, 117, 120], "eval_mod": [53, 54], "jacobian": [53, 54, 80], "spectral": [53, 54, 117], "id": [53, 96], "denot": [53, 55, 88, 104, 106, 107, 108, 115], "du": [53, 54], "2012": [53, 54], "13247v2": [53, 54], "jacobianspectralnorm": 53, "toler": [53, 54, 117, 120], "whether": [53, 54, 79, 80, 81, 85, 99, 132, 141, 143, 144, 148, 152], "y_in": 53, "x_in": 53, "args_model": 53, "kwargs_model": 53, "fne": 53, "argument": [53, 85, 87, 99, 142, 143, 144], "kargs_model": 53, "keyword": [53, 87, 142], "df": 54, "usag": [54, 150], "reg_l2": 54, "diag": [54, 109, 111, 116], "largest": [54, 84, 85], "eigenvalu": 54, "regval": 54, "onesid": 55, "ell_p": 55, "_p": 55, "side": 55, "ieeexplor": [55, 61, 62, 63, 115, 123], "abstract": [55, 61, 62, 63, 115, 123], "6418031": 55, "wise": [55, 115], "physics_list": 57, "a_g": 57, "x_i": 57, "2201": [57, 129], "12151": 57, "taohuang2018": 58, "split_ratio": 59, "regular_mask": 59, "m_1": 59, "m_2": 59, "inversef": [59, 137], "pubm": 59, "ncbi": 59, "nlm": 59, "nih": 59, "gov": 59, "32614100": 59, "increas": [59, 82], "target": 60, "b_i": 61, "geq": [61, 71, 94, 133, 134, 135], "diverg": [61, 62, 63], "4099398": 61, "truli": [61, 62, 63], "noiseless": [61, 62, 63, 71], "sensit": [61, 62, 63], "proport": [61, 62, 63, 84], "tau1": 62, "tau2": 62, "tau_1": 62, "tau_2": 62, "2a": 62, "6714502": [62, 63], "variat": [64, 80, 81, 117], "pinv": 65, "ckpt_path": 65, "inspir": [65, 131], "fbpconvnet": 65, "1611": 65, "03679": 65, "dagger": [65, 111], "dim_input": 66, "dim_mid": 66, "dim_hid": 66, "connect": [66, 79, 82], "debug": 66, "prototyp": 66, "featur": 66, "latent": 66, "3d": 67, "collabor": 67, "davob": 67, "2007": 67, "unlik": [67, 72, 132], "furthermor": 67, "support": [67, 106], "un": 68, "suit": 68, "tupl": [68, 70, 75, 79, 85, 87, 106, 108, 109, 113, 115, 116, 118, 119, 124, 128, 132, 133, 134, 135, 136, 148], "scale_out": 68, "nc": [69, 74], "512": [69, 74], "nb": [69, 74], "act_mod": [69, 74], "downsample_mod": [69, 74], "strideconv": [69, 74], "upsample_mod": [69, 74], "convtranspos": [69, 74], "like": [69, 80], "encod": 69, "nf": [69, 72, 76, 77], "activ": [69, 72, 74], "leakyrelu": [69, 74, 122], "elu": [69, 74], "softplu": [69, 74], "avgpool": [69, 74], "pool": [69, 74, 75], "pixelsuffl": [69, 74], "upconv": [69, 74], "neighbour": [69, 74], "onlin": [69, 71, 72, 74, 78, 79, 136, 137], "final": [69, 71, 72, 74, 78, 79], "2500": [70, 107], "re_init": 70, "minimiza": 70, "slow": [70, 113], "use_fp16": 71, "attent": [71, 79], "embed": [71, 79], "jychoi118": 71, "ilvr_adm": 71, "handl": [71, 129, 130], "n_1": 71, "n_2": 71, "gb": 71, "357": 71, "convert_to_fp16": 71, "torso": 71, "float16": 71, "convert_to_fp32": 71, "find": [71, 123, 131, 141], "type_t": 71, "noise_level": 71, "tradit": 71, "forward_denois": 71, "width": [71, 118, 125, 140, 150], "height": [71, 118, 125, 140, 150], "divis": 71, "forward_diffus": 71, "get_alpha_prod": [71, 131], "0001": [71, 85, 87, 131, 141], "pure": [71, 131], "1608": 72, "03981": 72, "seri": 72, "bias": [72, 82, 136, 137], "epub": 72, "siam": [72, 80], "doi": 72, "1137": 72, "20m1387961": 72, "geometr": 73, "commut": 73, "action": 73, "Then": 73, "2312": 73, "01831": 73, "callabl": [73, 86, 93, 95, 96, 99, 111, 117, 120, 132, 143, 144], "rotoflip": 73, "overrid": [75, 79], "boolean": [75, 133], "ax_cur": 76, "atu": 77, "in_nc": 78, "config": 78, "drop_path_r": [78, 79], "input_resolut": 78, "swin": [78, 79], "conv": [78, 79], "practic": [78, 117], "blind": [78, 82, 106], "synthesi": 78, "stage": 78, "drop": 78, "patch_siz": 79, "in_chan": 79, "embed_dim": 79, "num_head": 79, "window_s": 79, "mlp_ratio": 79, "qkv_bia": 79, "qk_scale": 79, "drop_rat": 79, "attn_drop_r": 79, "norm_lay": 79, "layernorm": 79, "ap": 79, "patch_norm": 79, "use_checkpoint": 79, "upscal": 79, "img_rang": 79, "resi_connect": 79, "1conv": 79, "pretrained_noise_level": 79, "offici": 79, "patch": 79, "head": 79, "window": 79, "mlp": 79, "queri": 79, "qk": 79, "head_dim": 79, "dropout": 79, "absolut": [79, 117, 120], "memori": [79, 147], "sr": 79, "pixelshuffl": 79, "pixelshuffledirect": 79, "3conv": 79, "jingyunliang": 79, "releas": 79, "n_it_max": [80, 81], "u2": [80, 81], "r2": 80, "2nd": 80, "generalis": 80, "bredi": 80, "kunisch": 80, "sci": 80, "492": 80, "526": 80, "2010": 80, "uniqu": [80, 81], "auxiliari": [80, 85, 87], "field": [80, 81], "lambda_1": 80, "lambda_2": 80, "behav": 80, "frobeniu": 80, "hessian": 80, "lipschitzian": [80, 81], "composit": [80, 81], "vol": [80, 81], "460": [80, 81], "479": [80, 81], "2013": [80, 81], "descript": [80, 81], "laurent": [80, 81], "matlab": [80, 81], "lcondat": [80, 81], "softwar": [80, 81], "daniil": [80, 81], "smolyakov": [80, 81], "criterion": [80, 81, 85, 87, 88, 89, 117], "primari": [80, 81], "th": [80, 81, 83, 84, 90, 98, 135], "isotrop": [81, 128, 139], "circular_pad": 82, "free": [82, 147], "bfbatchnorm2d": 82, "biasfre": 82, "nan": 82, "encount": 82, "caus": 82, "fail": 82, "circular": [82, 106, 107, 108, 113, 119, 140], "batchnorm": 82, "robust": [82, 125], "And": 82, "interpret": [82, 84], "mohan": 82, "list_wv": 83, "db4": 83, "non_linear": [83, 84], "overcomplet": [83, 109, 117, 125], "psi": [83, 84], "_n": [83, 84], "psi_1": 83, "psi_2": 83, "psi_l": 83, "ell_0": [83, 84], "hard": [83, 84], "variant": [83, 84], "topk": [83, 84], "kept": [83, 84], "mother": [83, 84], "orthonorm": [84, 111], "subband": 84, "cheap": 84, "pywavelet": 84, "convent": [84, 110], "equal": [84, 97, 115, 116, 119, 124, 125], "hard_threshold_topk": 84, "prox_l0": 84, "prox_l1": 84, "gamma_backtrack": 85, "eta_backtrack": 85, "custom_metr": 85, "beta_anderson_acc": [85, 87], "eps_anderson_acc": [85, 87], "achiev": 85, "leftarrow": 85, "hold": 85, "float64": [85, 87], "a_forward": [85, 86, 87, 91], "optimalgo": 85, "claim": 85, "strategi": 85, "aux": 85, "ty": 85, "check_conv_fn": [85, 87], "check_iteration_fn": [85, 87], "init_iterate_fn": [85, 87], "x_0": [85, 101], "u_0": [85, 101], "f_0": 85, "init_metrics_fn": [85, 87], "metric_nam": 85, "update_data_fidelity_fn": [85, 87], "update_metrics_fn": [85, 87], "update_params_fn": [85, 87], "update_prior_fn": [85, 87], "nonlinear": 86, "f_x": 86, "0000": [86, 91, 107, 111, 116], "5000": [86, 91], "6000": [86, 91], "nabla_x": [86, 95, 96], "grad_d": [86, 89, 91, 94], "nabla_u": [86, 94], "stepsize_int": [86, 94, 95], "max_iter_int": [86, 94, 95], "tol_int": [86, 94, 95], "prox_conjug": [86, 95], "front": [86, 88, 95], "prox_d": [86, 88, 89, 91, 94], "hspace": 87, "2cm": 87, "prox_g": 87, "sign": [87, 89, 90, 109], "initialis": [87, 117], "sol": 87, "proce": 87, "anderson_acceleration_step": 87, "tx_prev": 87, "x_hist": 87, "t_hist": 87, "evlauaton": 87, "hp": 87, "f_k": 87, "commonli": 87, "init_anderson_acceler": 87, "insid": [88, 125, 133], "1e16": 88, "au": [88, 89, 91], "proj": 88, "l1": 90, "normalis": 91, "grad_da": 91, "prox_da": 91, "abus": 92, "terminologi": 92, "pd": [92, 101], "relaxation_step": 92, "bkg": 94, "densiti": 94, "absenc": 94, "overwrit": 95, "forget": 95, "rais": 95, "mmse": 97, "string": [99, 143, 144], "direct": 100, "invert": [100, 101, 102], "kx": 101, "hal": 101, "scienc": 101, "00490826": 101, "satisfi": [101, 105], "intiliaz": 101, "three": 101, "z_0": 101, "v_": 103, "1f": 104, "lip": 105, "unknown": [106, 115], "replic": [106, 107, 113, 119], "reflect": [106, 107, 113, 119, 139], "listtensor": [106, 115], "blurri": 106, "delta": 106, "16x16": [107, 108], "middl": [107, 108, 113, 117], "2x2": [107, 108, 117], "without": [107, 109, 111, 113, 119, 120, 125], "fft": 108, "allow": [108, 116, 124, 145], "1801": 108, "0360": 108, "0072": 108, "prod": 109, "iid": [109, 124], "orthogon": [109, 134], "sor": 109, "1506": 109, "03521": 109, "dst": 109, "bigger": [109, 124, 150], "o": [109, 115, 124], "mn": [109, 124], "tend": 109, "due": [109, 125], "marcenko": 109, "pastur": 109, "law": 109, "discret": [109, 118], "sine": 109, "independ": [109, 124], "randn": [109, 110, 111, 112, 116, 117, 118, 119, 124, 125], "8522": 109, "2133": 109, "9897": [109, 125], "8714": 109, "8953": 109, "5284": 109, "4422": 109, "4238": 109, "7754": 109, "en": [109, 117, 125], "wiki": [109, 117, 125], "conjugate_gradient_method": [109, 117, 125], "pseudoinvers": [109, 111, 117, 120, 125], "rec601": 110, "1343": 110, "1329": 110, "1517": 110, "0790": 110, "6711": 110, "1414": 110, "1716": 110, "9021": 110, "0819": 110, "parent": [111, 117, 120], "express": 111, "recreat": 111, "mask_svd": 111, "5410": [111, 116], "1788": [111, 116], "5684": 111, "3986": [111, 116], "4033": [111, 116], "7193": [111, 116], "manner": [111, 136, 137], "incorpor": [111, 117, 120], "just": 112, "7302": 112, "2064": 112, "1985": 112, "4322": 112, "8064": 112, "2139": 112, "3624": 112, "3223": 112, "nonetyp": [113, 119], "0146": 113, "0398": 113, "use_fft": 113, "1510": 113, "00143": 113, "offset": 115, "5567108": 115, "exp": 115, "medium": 115, "transmiss": 115, "atmospher": 115, "light": 115, "hazi": 115, "match": [116, 123, 145], "simultan": 116, "empti": 116, "8380": 116, "0845": 116, "sensor_model": [117, 120], "verifi": [117, 133, 135], "quantiz": [117, 120], "satur": [117, 120], "closer": [117, 129, 131], "orgin": 117, "__add__": [117, 120, 145], "retain": 117, "__mul__": [117, 120, 145], "inde": 117, "quantiti": 117, "theoret": 117, "doubl": 117, "rel": 117, "image_s": 118, "320": 118, "acceleration_factor": 118, "magnet": 118, "reson": 118, "slice": 118, "sfx": 118, "4x": 118, "5305": 118, "3326": 118, "1730": 118, "7072": 118, "0418": 118, "reset": [118, 133, 137], "sample_mask": 118, "noise_color": 119, "noise_grai": 119, "0009": 119, "0251": 119, "0411": 119, "1576": 119, "1098": 119, "0340": 119, "0086": 119, "9084": 119, "2966": 119, "4015": 119, "guess": [120, 130, 131], "mul": 120, "concanten": 120, "clip_posit": 122, "divid": [122, 145], "9127841": 123, "review": 123, "grid": [123, 139, 150], "histogram": 123, "accord": 124, "item": 124, "round": 124, "integr": 125, "plane": 125, "rx": 125, "dimension": 125, "ramp": 125, "360": [125, 138], "inscrib": 125, "4x4": 125, "1650": 125, "2640": 125, "6995": 125, "4860": 125, "2674": 125, "9971": 125, "9002": 125, "3856": 125, "9360": 125, "4882": 125, "1068": 125, "5720": 125, "9493": 125, "7137": 125, "6536": 125, "8457": 125, "1666": 125, "7340": 125, "9793": 125, "sigma_min": 126, "sigma_max": 126, "sigma_": 126, "uniform": [126, 127, 153], "minimum": 126, "amplitud": 127, "sigma_x": 128, "anisotrop": 128, "11793": 129, "plain": [129, 131], "save_iter": 130, "14687": 130, "compute_alpha_beta": 130, "2305": 131, "08995": 131, "varepsilon_t": 131, "tun": 131, "sigma_n": 131, "get_alpha_beta": 131, "get_noise_schedul": 131, "g_statist": [132, 133, 134, 135], "save_chain": [132, 133, 134, 135], "chain": [132, 133, 134, 135], "thresh_conv": [133, 134, 135], "mykernel": 133, "iterator_param": 133, "new_x": 133, "mysampl": 133, "welford": 133, "integ": [133, 134, 135, 140], "percentag": [133, 134, 135], "burn": [133, 134, 135], "period": [133, 134, 135, 139], "discard": [133, 134, 135], "function_handl": [133, 134, 135], "get_chain": 133, "mean_has_converg": 133, "var_has_converg": 133, "inner_it": 134, "rung": 134, "kutta": 134, "chebyshev": 134, "stabilis": 134, "varga": 134, "pereyra": 134, "zygalaki": 134, "1908": 134, "08845": 134, "tip": [134, 135], "damp": 134, "inner": 134, "outer": 134, "04715": 135, "pi_": 135, "interv": 135, "wandb_setup": [136, 137], "plot_measur": [136, 137], "consol": [136, 137], "ai": [136, 137], "setup": [136, 137], "quickstart": [136, 137], "linear_std_psnr": 136, "grad_clip": 137, "eval_interv": 137, "check_grad": 137, "ckpt_pretrain": 137, "fact_loss": 137, "freq_plot": 137, "inpu": 137, "wider": 137, "n_tran": [138, 140], "n_transf": [138, 140], "padding_mod": 139, "resampl": 139, "shift_max": 140, "fraction": 140, "max_iter_backward": 141, "beta_anderson_acc_backward": 141, "eps_anderson_acc_backward": 141, "child": [141, 142], "baseiter": 142, "__neg__": 145, "negat": 145, "__sub__": 145, "substract": 145, "__truediv__": 145, "max_pixel": 146, "log_": 146, "max_i": 146, "2_2": 146, "chw": 146, "most": 147, "crop": 148, "img_list": 150, "tight": 150, "max_img": 150, "rescale_mod": 150, "min_max": 150, "return_fig": 150, "row": 150, "img1": 150, "img2": 150, "img3": 150, "layout": 150, "linearli": 150}, "objects": {"deepinv.datasets": [[49, 0, 1, "", "HDF5Dataset"], [50, 0, 1, "", "generate_dataset"]], "deepinv.loss": [[51, 0, 1, "", "CharbonnierLoss"], [52, 0, 1, "", "EILoss"], [53, 0, 1, "", "FNEJacobianSpectralNorm"], [54, 0, 1, "", "JacobianSpectralNorm"], [55, 0, 1, "", "LpNorm"], [56, 0, 1, "", "MCLoss"], [57, 0, 1, "", "MOILoss"], [58, 0, 1, "", "Neighbor2Neighbor"], [59, 0, 1, "", "SplittingLoss"], [60, 0, 1, "", "SupLoss"], [61, 0, 1, "", "SureGaussianLoss"], [62, 0, 1, "", "SurePGLoss"], [63, 0, 1, "", "SurePoissonLoss"], [64, 0, 1, "", "TVLoss"]], "deepinv.loss.CharbonnierLoss": [[51, 1, 1, "", "forward"]], "deepinv.loss.EILoss": [[52, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[53, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[54, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[55, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[56, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[57, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[58, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[59, 1, 1, "", "forward"]], "deepinv.loss.SupLoss": [[60, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[61, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[62, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[63, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[64, 1, 1, "", "forward"]], "deepinv.models": [[65, 0, 1, "", "ArtifactRemoval"], [66, 0, 1, "", "AutoEncoder"], [67, 0, 1, "", "BM3D"], [68, 0, 1, "", "ConvDecoder"], [69, 0, 1, "", "DRUNet"], [70, 0, 1, "", "DeepImagePrior"], [71, 0, 1, "", "DiffUNet"], [72, 0, 1, "", "DnCNN"], [73, 0, 1, "", "EquivariantDenoiser"], [74, 0, 1, "", "GSDRUNet"], [75, 0, 1, "", "MedianFilter"], [76, 0, 1, "", "PDNet_DualBlock"], [77, 0, 1, "", "PDNet_PrimalBlock"], [78, 0, 1, "", "SCUNet"], [79, 0, 1, "", "SwinIR"], [80, 0, 1, "", "TGV"], [81, 0, 1, "", "TV"], [82, 0, 1, "", "UNet"], [83, 0, 1, "", "WaveletDict"], [84, 0, 1, "", "WaveletPrior"]], "deepinv.models.ArtifactRemoval": [[65, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[66, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[67, 1, 1, "", "forward"]], "deepinv.models.ConvDecoder": [[68, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[69, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[70, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[71, 1, 1, "", "convert_to_fp16"], [71, 1, 1, "", "convert_to_fp32"], [71, 1, 1, "", "find_nearest"], [71, 1, 1, "", "forward"], [71, 1, 1, "", "forward_denoise"], [71, 1, 1, "", "forward_diffusion"], [71, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[72, 1, 1, "", "forward"]], "deepinv.models.EquivariantDenoiser": [[73, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[75, 1, 1, "", "forward"]], "deepinv.models.PDNet_DualBlock": [[76, 1, 1, "", "forward"]], "deepinv.models.PDNet_PrimalBlock": [[77, 1, 1, "", "forward"]], "deepinv.models.SCUNet": [[78, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[79, 1, 1, "", "forward"]], "deepinv.models.TGV": [[80, 1, 1, "", "forward"]], "deepinv.models.TV": [[81, 1, 1, "", "forward"]], "deepinv.models.UNet": [[82, 1, 1, "", "forward"]], "deepinv.models.WaveletDict": [[83, 1, 1, "", "forward"]], "deepinv.models.WaveletPrior": [[84, 1, 1, "", "forward"], [84, 1, 1, "", "hard_threshold_topk"], [84, 1, 1, "", "prox_l0"], [84, 1, 1, "", "prox_l1"]], "deepinv.optim": [[85, 0, 1, "", "BaseOptim"], [86, 0, 1, "", "DataFidelity"], [87, 0, 1, "", "FixedPoint"], [88, 0, 1, "", "IndicatorL2"], [89, 0, 1, "", "L1"], [90, 0, 1, "", "L1Prior"], [91, 0, 1, "", "L2"], [92, 0, 1, "", "OptimIterator"], [93, 0, 1, "", "PnP"], [94, 0, 1, "", "PoissonLikelihood"], [95, 0, 1, "", "Prior"], [96, 0, 1, "", "RED"], [97, 0, 1, "", "ScorePrior"], [98, 0, 1, "", "Tikhonov"], [99, 2, 1, "", "optim_builder"]], "deepinv.optim.BaseOptim": [[85, 1, 1, "", "check_conv_fn"], [85, 1, 1, "", "check_iteration_fn"], [85, 1, 1, "", "forward"], [85, 1, 1, "", "init_iterate_fn"], [85, 1, 1, "", "init_metrics_fn"], [85, 1, 1, "", "update_data_fidelity_fn"], [85, 1, 1, "", "update_metrics_fn"], [85, 1, 1, "", "update_params_fn"], [85, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[86, 1, 1, "", "d"], [86, 1, 1, "", "forward"], [86, 1, 1, "", "grad"], [86, 1, 1, "", "grad_d"], [86, 1, 1, "", "prox"], [86, 1, 1, "", "prox_conjugate"], [86, 1, 1, "", "prox_d"], [86, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.FixedPoint": [[87, 1, 1, "", "anderson_acceleration_step"], [87, 1, 1, "", "forward"], [87, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[88, 1, 1, "", "d"], [88, 1, 1, "", "prox"], [88, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[89, 1, 1, "", "d"], [89, 1, 1, "", "grad_d"], [89, 1, 1, "", "prox"], [89, 1, 1, "", "prox_d"]], "deepinv.optim.L1Prior": [[90, 1, 1, "", "g"], [90, 1, 1, "", "prox"]], "deepinv.optim.L2": [[91, 1, 1, "", "d"], [91, 1, 1, "", "grad_d"], [91, 1, 1, "", "prox"], [91, 1, 1, "", "prox_d"]], "deepinv.optim.OptimIterator": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "relaxation_step"]], "deepinv.optim.PnP": [[93, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[94, 1, 1, "", "d"], [94, 1, 1, "", "grad_d"], [94, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "g"], [95, 1, 1, "", "grad"], [95, 1, 1, "", "prox"], [95, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[96, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[97, 1, 1, "", "forward"]], "deepinv.optim.Tikhonov": [[98, 1, 1, "", "g"], [98, 1, 1, "", "grad"], [98, 1, 1, "", "prox"]], "deepinv.optim.optim_iterators": [[100, 0, 1, "", "ADMMIteration"], [101, 0, 1, "", "CPIteration"], [102, 0, 1, "", "DRSIteration"], [103, 0, 1, "", "GDIteration"], [104, 0, 1, "", "HQSIteration"], [105, 0, 1, "", "PGDIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[100, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[101, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[102, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.GDIteration": [[103, 1, 1, "", "forward"]], "deepinv.physics": [[106, 0, 1, "", "BlindBlur"], [107, 0, 1, "", "Blur"], [108, 0, 1, "", "BlurFFT"], [109, 0, 1, "", "CompressedSensing"], [110, 0, 1, "", "Decolorize"], [111, 0, 1, "", "DecomposablePhysics"], [112, 0, 1, "", "Denoising"], [113, 0, 1, "", "Downsampling"], [114, 0, 1, "", "GaussianNoise"], [115, 0, 1, "", "Haze"], [116, 0, 1, "", "Inpainting"], [117, 0, 1, "", "LinearPhysics"], [118, 0, 1, "", "MRI"], [119, 0, 1, "", "Pansharpen"], [120, 0, 1, "", "Physics"], [121, 0, 1, "", "PoissonGaussianNoise"], [122, 0, 1, "", "PoissonNoise"], [123, 0, 1, "", "SinglePhotonLidar"], [124, 0, 1, "", "SinglePixelCamera"], [125, 0, 1, "", "Tomography"], [126, 0, 1, "", "UniformGaussianNoise"], [127, 0, 1, "", "UniformNoise"]], "deepinv.physics.BlindBlur": [[106, 1, 1, "", "A"], [106, 1, 1, "", "A_dagger"]], "deepinv.physics.Blur": [[107, 1, 1, "", "A"], [107, 1, 1, "", "A_adjoint"]], "deepinv.physics.CompressedSensing": [[109, 1, 1, "", "A"], [109, 1, 1, "", "A_adjoint"], [109, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[111, 1, 1, "", "A"], [111, 1, 1, "", "A_adjoint"], [111, 1, 1, "", "A_dagger"], [111, 1, 1, "", "noise"], [111, 1, 1, "", "prox_l2"]], "deepinv.physics.Downsampling": [[113, 1, 1, "", "A"], [113, 1, 1, "", "A_adjoint"], [113, 1, 1, "", "prox_l2"]], "deepinv.physics.GaussianNoise": [[114, 1, 1, "", "forward"]], "deepinv.physics.Haze": [[115, 1, 1, "", "A"], [115, 1, 1, "", "A_dagger"]], "deepinv.physics.LinearPhysics": [[117, 1, 1, "", "A_adjoint"], [117, 1, 1, "", "A_dagger"], [117, 1, 1, "", "__add__"], [117, 1, 1, "", "__mul__"], [117, 1, 1, "", "adjointness_test"], [117, 1, 1, "", "compute_norm"], [117, 1, 1, "", "prox_l2"]], "deepinv.physics.MRI": [[118, 1, 1, "", "reset"], [118, 1, 1, "", "sample_mask"]], "deepinv.physics.Pansharpen": [[119, 1, 1, "", "A"], [119, 1, 1, "", "A_adjoint"], [119, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[120, 1, 1, "", "A"], [120, 1, 1, "", "A_dagger"], [120, 1, 1, "", "__add__"], [120, 1, 1, "", "__mul__"], [120, 1, 1, "", "forward"], [120, 1, 1, "", "noise"], [120, 1, 1, "", "sensor"]], "deepinv.physics.PoissonGaussianNoise": [[121, 1, 1, "", "forward"]], "deepinv.physics.PoissonNoise": [[122, 1, 1, "", "forward"]], "deepinv.physics.SinglePhotonLidar": [[123, 1, 1, "", "A"], [123, 1, 1, "", "A_dagger"]], "deepinv.physics.Tomography": [[125, 1, 1, "", "A"], [125, 1, 1, "", "A_adjoint"], [125, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformGaussianNoise": [[126, 1, 1, "", "forward"]], "deepinv.physics.UniformNoise": [[127, 1, 1, "", "forward"]], "deepinv.physics.blur": [[128, 2, 1, "", "gaussian_blur"]], "deepinv.sampling": [[129, 0, 1, "", "DDRM"], [130, 0, 1, "", "DPS"], [131, 0, 1, "", "DiffPIR"], [132, 0, 1, "", "DiffusionSampler"], [133, 0, 1, "", "MonteCarlo"], [134, 0, 1, "", "SKRock"], [135, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[129, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[130, 1, 1, "", "compute_alpha_betas"], [130, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[131, 1, 1, "", "find_nearest"], [131, 1, 1, "", "forward"], [131, 1, 1, "", "get_alpha_beta"], [131, 1, 1, "", "get_alpha_prod"], [131, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "get_chain"], [133, 1, 1, "", "mean_has_converged"], [133, 1, 1, "", "reset"], [133, 1, 1, "", "var_has_converged"]], "deepinv": [[136, 2, 1, "", "test"], [137, 2, 1, "", "train"]], "deepinv.transform": [[138, 0, 1, "", "Rotate"], [139, 0, 1, "", "Scale"], [140, 0, 1, "", "Shift"]], "deepinv.transform.Rotate": [[138, 1, 1, "", "forward"]], "deepinv.transform.Scale": [[139, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[140, 1, 1, "", "forward"]], "deepinv.unfolded": [[141, 0, 1, "", "BaseDEQ"], [142, 0, 1, "", "BaseUnfold"], [143, 2, 1, "", "DEQ_builder"], [144, 2, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[141, 1, 1, "", "forward"]], "deepinv.utils": [[145, 0, 1, "", "TensorList"], [146, 2, 1, "", "cal_psnr"], [147, 2, 1, "", "get_freer_gpu"], [148, 2, 1, "", "load_url_image"], [149, 2, 1, "", "ones_like"], [150, 2, 1, "", "plot"], [151, 2, 1, "", "plot_curves"], [152, 2, 1, "", "plot_parameters"], [153, 2, 1, "", "rand_like"], [154, 2, 1, "", "randn_like"], [155, 2, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[145, 1, 1, "", "__add__"], [145, 1, 1, "", "__mul__"], [145, 1, 1, "", "__neg__"], [145, 1, 1, "", "__sub__"], [145, 1, 1, "", "__truediv__"], [145, 1, 1, "", "append"], [145, 1, 1, "", "flatten"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"imag": [0, 1, 2, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 47], "deblur": [0, 11, 28], "custom": [0, 6, 12, 13, 16, 30, 31], "deep": [0, 2, 28, 45, 47], "explicit": 0, "prior": [0, 2, 13, 16, 20, 30, 31, 41, 43, 95], "setup": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "path": [0, 1, 4, 8, 11, 12, 13, 14, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "data": [0, 1, 4, 8, 11, 12, 13, 14, 18, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 41], "load": [0, 1, 2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "result": [0, 1, 2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "base": [0, 1, 8, 11, 12, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33], "dataset": [0, 1, 8, 11, 12, 13, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36], "degrad": [0, 1, 8, 11, 12, 13, 22, 23, 28, 29, 30, 31, 32, 33], "oper": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 20, 22, 23, 28, 29, 30, 31, 32, 33, 42], "defin": [0, 2, 4, 8, 12, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33], "physic": [0, 42, 120], "gener": [0, 1, 2, 3, 5, 6, 8, 11, 16, 17, 18, 20, 22, 23, 24, 25, 28, 29, 30, 32, 33, 41], "blur": [0, 7, 11, 107], "set": [0, 8, 11, 12, 14, 22, 23, 24, 25, 32], "up": [0, 8, 11, 12, 14, 22, 23, 24, 25, 32], "optim": [0, 12, 41], "algorithm": [0, 2, 11, 12, 13, 14, 16, 17, 18, 19, 20, 28, 29, 30, 31, 33, 43, 44, 45], "solv": [0, 11, 12, 14], "invers": [0, 11, 12, 14, 18, 19], "problem": [0, 11, 12, 13, 14, 18, 19], "evalu": [0, 11, 12, 13, 14], "reconstruct": [0, 2, 8, 17, 22, 23, 32], "creat": [1, 3, 6, 16, 17, 20], "your": [1, 16, 18, 19], "own": 1, "dataload": 1, "an": [2, 18], "us": [2, 6, 18, 19, 39, 49, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 99, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152], "from": [2, 7, 16, 17, 20, 23], "internet": [2, 7, 16, 17, 20], "forward": [2, 3, 4, 5, 6, 7, 8, 12, 14, 16, 17, 20, 32], "nois": [2, 16, 17, 20, 42], "model": [2, 3, 4, 8, 11, 12, 13, 14, 16, 17, 19, 20, 31, 32, 38], "measur": [2, 3, 16, 17, 20, 23, 29, 30], "run": [2, 16, 17, 20], "dip": 2, "plot": [2, 3, 12, 14, 16, 17, 20, 29, 30, 33, 46, 150], "singl": [3, 7], "photon": 3, "lidar": 3, "depth": 3, "rang": 3, "toi": [3, 5, 6], "signal": 3, "appli": 3, "match": 3, "filter": 3, "recov": 3, "save": [4, 32], "stack": 5, "concaten": 5, "verifi": [5, 6], "our": 6, "linear": [6, 42], "decompos": 6, "benefit": 6, "A": 7, "tour": 7, "sens": [7, 29], "denois": [7, 13, 17, 18, 19, 24, 25, 38, 43, 112], "inpaint": [7, 32, 116], "compress": [7, 29, 30], "comput": [7, 9, 14, 15, 21, 26, 27, 34, 48], "tomographi": [7, 14, 125], "mri": [7, 22, 118], "decolor": [7, 110], "pan": 7, "sharpen": 7, "pixel": 7, "camera": 7, "super": [7, 13, 33], "resolut": [7, 13, 28, 33], "train": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 46, 137], "network": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 37], "test": [8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 46, 136], "time": [9, 15, 21, 26, 27, 34, 48], "exampl": [10, 17, 49, 50, 52, 53, 56, 57, 58, 60, 61, 62, 63, 65, 68, 69, 70, 71, 72, 74, 75, 76, 77, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 99, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152], "basic": 10, "plug": 10, "plai": 10, "sampl": [10, 16, 17, 18, 20], "self": [10, 22, 23, 24, 25, 37], "supervis": [10, 22, 23, 24, 25, 37], "learn": [10, 22, 23, 29, 30, 31, 37, 47], "unfold": [10, 29, 30, 32, 33, 38, 45], "dpir": 11, "method": 11, "pnp": [11, 12, 13, 14, 20, 33, 43, 93], "condat": 12, "vu": 12, "primal": [12, 31], "dual": [12, 31], "fstep": 12, "gstep": 12, "modul": 12, "regular": [13, 37], "red": [13, 43, 96], "thi": 13, "involv": 13, "particular": 13, "definit": 13, "class": [13, 16], "vanilla": [14, 33], "ct": [14, 31], "paramet": [14, 22, 23, 24, 25, 28, 29, 30, 31, 33, 41], "build": 16, "iter": [16, 29, 30, 31, 41, 43], "sampler": [16, 17, 20], "precondit": 16, "standard": 16, "ula": [16, 20, 135], "diffus": [17, 19, 44], "mmse": 17, "mont": [17, 44], "carlo": [17, 44], "implement": [18, 19], "diffpir": [18, 131], "The": [18, 19], "step": [18, 19], "fidel": [18, 31, 41], "put": 18, "all": 18, "togeth": 18, "dp": [19, 130], "schedul": 19, "approxim": 19, "uncertainti": 20, "quantif": 20, "likelihood": 20, "mcmc": 20, "equivari": [22, 38], "knee": 22, "incomplet": 23, "multipl": [23, 39], "subsampl": 23, "neighbor2neighbor": [24, 58], "loss": [24, 25, 37], "noisi": [24, 25], "sure": 25, "equilibrium": [28, 45], "deq": 28, "low": [28, 33], "soft": 29, "threshold": 29, "lista": 29, "proxim": [29, 30], "gradient": [29, 30], "weight": [30, 38], "scan": 31, "pdnet": 31, "trainabl": 31, "term": 31, "random": 31, "phantom": 31, "chambol": 32, "pock": 32, "constrain": 32, "how": 35, "contribut": 35, "hd5dataset": 36, "transform": 37, "metric": 37, "classic": 38, "learnabl": 38, "architectur": 38, "pretrain": 38, "summari": 38, "gpu": 39, "math": 40, "notat": 40, "list": 40, "mathemat": 40, "symbol": 40, "non": 42, "distribut": 42, "util": [42, 46], "markov": 44, "chain": 44, "langevin": 44, "tensorlist": [46, 145], "other": 46, "deepinvers": 47, "pytorch": 47, "librari": 47, "featur": 47, "instal": 47, "get": 47, "start": 47, "find": 47, "help": 47, "lead": 47, "develop": 47, "hdf5dataset": 49, "generate_dataset": 50, "charbonnierloss": 51, "eiloss": 52, "fnejacobianspectralnorm": 53, "jacobianspectralnorm": 54, "lpnorm": 55, "mcloss": 56, "moiloss": 57, "splittingloss": 59, "suploss": 60, "suregaussianloss": 61, "surepgloss": 62, "surepoissonloss": 63, "tvloss": 64, "artifactremov": 65, "autoencod": 66, "bm3d": 67, "convdecod": 68, "drunet": 69, "deepimageprior": 70, "diffunet": 71, "dncnn": 72, "equivariantdenois": 73, "gsdrunet": 74, "medianfilt": 75, "pdnet_dualblock": 76, "pdnet_primalblock": 77, "scunet": 78, "swinir": 79, "tgv": 80, "tv": 81, "unet": 82, "waveletdict": 83, "waveletprior": 84, "baseoptim": 85, "datafidel": 86, "fixedpoint": 87, "indicatorl2": 88, "l1": 89, "l1prior": 90, "l2": 91, "optimiter": 92, "poissonlikelihood": 94, "scoreprior": 97, "tikhonov": 98, "optim_build": 99, "admmiter": 100, "cpiter": 101, "drsiter": 102, "gditer": 103, "hqsiter": 104, "pgditer": 105, "blindblur": 106, "blurfft": 108, "compressedsens": 109, "decomposablephys": 111, "downsampl": 113, "gaussiannois": 114, "haze": 115, "linearphys": 117, "pansharpen": 119, "poissongaussiannois": 121, "poissonnois": 122, "singlephotonlidar": 123, "singlepixelcamera": 124, "uniformgaussiannois": 126, "uniformnois": 127, "gaussian_blur": 128, "ddrm": 129, "diffusionsampl": 132, "montecarlo": 133, "skrock": 134, "rotat": 138, "scale": 139, "shift": 140, "basedeq": 141, "baseunfold": 142, "deq_build": 143, "unfolded_build": 144, "cal_psnr": 146, "get_freer_gpu": 147, "load_url_imag": 148, "ones_lik": 149, "plot_curv": 151, "plot_paramet": 152, "rand_lik": 153, "randn_lik": 154, "zeros_lik": 155}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Image deblurring with custom deep explicit prior.": [[0, "image-deblurring-with-custom-deep-explicit-prior"]], "Setup paths for data loading and results.": [[0, "setup-paths-for-data-loading-and-results"], [1, "setup-paths-for-data-loading-and-results"], [4, "setup-paths-for-data-loading-and-results"], [8, "setup-paths-for-data-loading-and-results"], [11, "setup-paths-for-data-loading-and-results"], [12, "setup-paths-for-data-loading-and-results"], [13, "setup-paths-for-data-loading-and-results"], [14, "setup-paths-for-data-loading-and-results"], [22, "setup-paths-for-data-loading-and-results"], [23, "setup-paths-for-data-loading-and-results"], [24, "setup-paths-for-data-loading-and-results"], [25, "setup-paths-for-data-loading-and-results"], [28, "setup-paths-for-data-loading-and-results"], [29, "setup-paths-for-data-loading-and-results"], [30, "setup-paths-for-data-loading-and-results"], [31, "setup-paths-for-data-loading-and-results"], [32, "setup-paths-for-data-loading-and-results"], [33, "setup-paths-for-data-loading-and-results"]], "Load base image datasets and degradation operators.": [[0, "load-base-image-datasets-and-degradation-operators"], [8, "load-base-image-datasets-and-degradation-operators"], [11, "load-base-image-datasets-and-degradation-operators"], [12, "load-base-image-datasets-and-degradation-operators"], [13, "load-base-image-datasets-and-degradation-operators"], [22, "load-base-image-datasets-and-degradation-operators"], [23, "load-base-image-datasets-and-degradation-operators"], [28, "load-base-image-datasets-and-degradation-operators"], [29, "load-base-image-datasets-and-degradation-operators"], [30, "load-base-image-datasets-and-degradation-operators"], [31, "load-base-image-datasets-and-degradation-operators"], [32, "load-base-image-datasets-and-degradation-operators"], [33, "load-base-image-datasets-and-degradation-operators"]], "Define physics operator": [[0, "define-physics-operator"]], "Generate a dataset of blurred images": [[0, "generate-a-dataset-of-blurred-images"]], "Set up the optimization algorithm to solve the inverse problem.": [[0, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[0, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Creating your own dataset": [[1, "creating-your-own-dataset"]], "Load base image datasets": [[1, "load-base-image-datasets"], [24, "load-base-image-datasets"], [25, "load-base-image-datasets"]], "Generate a dataset of degraded images and load it.": [[1, "generate-a-dataset-of-degraded-images-and-load-it"]], "Create a dataloader": [[1, "create-a-dataloader"]], "Reconstructing an image using the deep image prior.": [[2, "reconstructing-an-image-using-the-deep-image-prior"]], "Load image from the internet": [[2, "load-image-from-the-internet"], [7, "load-image-from-the-internet"], [16, "load-image-from-the-internet"], [20, "load-image-from-the-internet"]], "Define forward operator and noise model": [[2, "define-forward-operator-and-noise-model"], [16, "define-forward-operator-and-noise-model"], [17, "define-forward-operator-and-noise-model"], [20, "define-forward-operator-and-noise-model"]], "Generate the measurement": [[2, "generate-the-measurement"], [16, "generate-the-measurement"], [17, "generate-the-measurement"], [20, "generate-the-measurement"]], "Define the deep image prior": [[2, "define-the-deep-image-prior"]], "Run DIP algorithm and plot results": [[2, "run-dip-algorithm-and-plot-results"]], "Single photon lidar operator for depth ranging.": [[3, "single-photon-lidar-operator-for-depth-ranging"]], "Create forward model": [[3, "create-forward-model"]], "Generate toy signal and measurement": [[3, "generate-toy-signal-and-measurement"]], "Apply matched filtering to recover the signal and plot the results": [[3, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "Saving and loading models": [[4, "saving-and-loading-models"]], "Define a forward operator": [[4, "define-a-forward-operator"]], "Define a model": [[4, "define-a-model"]], "Stacking and concatenating forward operators.": [[5, "stacking-and-concatenating-forward-operators"]], "Stacking forward operators.": [[5, "stacking-forward-operators"]], "Generate toy image": [[5, "generate-toy-image"], [6, "generate-toy-image"]], "Verifying the stacked operator": [[5, "verifying-the-stacked-operator"]], "Concatenating forward operators.": [[5, "concatenating-forward-operators"]], "Verifying the concatenated operator": [[5, "verifying-the-concatenated-operator"]], "Creating a forward operator.": [[6, "creating-a-forward-operator"]], "Creating a custom forward operator.": [[6, "creating-a-custom-forward-operator"]], "Verifying our linear operator": [[6, "verifying-our-linear-operator"]], "Creating a decomposable forward operator.": [[6, "creating-a-decomposable-forward-operator"]], "Benefits of using a decomposable forward operator.": [[6, "benefits-of-using-a-decomposable-forward-operator"]], "A tour of forward sensing operators": [[7, "a-tour-of-forward-sensing-operators"]], "Denoising": [[7, "denoising"], [112, "denoising"]], "Inpainting": [[7, "inpainting"], [116, "inpainting"]], "Compressed Sensing": [[7, "compressed-sensing"]], "Computed Tomography": [[7, "computed-tomography"]], "MRI": [[7, "mri"], [118, "mri"]], "Decolorize": [[7, "decolorize"], [110, "decolorize"]], "Pan-sharpening": [[7, "pan-sharpening"]], "Single-Pixel Camera": [[7, "single-pixel-camera"]], "Blur": [[7, "blur"], [107, "blur"]], "Super-Resolution": [[7, "super-resolution"]], "Training a reconstruction network.": [[8, "training-a-reconstruction-network"]], "Define forward operator and generate dataset": [[8, "define-forward-operator-and-generate-dataset"], [32, "define-forward-operator-and-generate-dataset"]], "Set up the reconstruction network": [[8, "set-up-the-reconstruction-network"], [22, "set-up-the-reconstruction-network"], [23, "set-up-the-reconstruction-network"], [32, "set-up-the-reconstruction-network"]], "Train the model": [[8, "train-the-model"], [32, "train-the-model"]], "Test the network": [[8, "test-the-network"], [22, "test-the-network"], [23, "test-the-network"], [24, "test-the-network"], [25, "test-the-network"], [28, "test-the-network"], [31, "test-the-network"], [32, "test-the-network"], [33, "test-the-network"]], "Computation times": [[9, "computation-times"], [15, "computation-times"], [21, "computation-times"], [26, "computation-times"], [27, "computation-times"], [34, "computation-times"], [48, "computation-times"]], "Examples": [[10, "examples"]], "Basics": [[10, "basics"]], "Plug-and-Play": [[10, "plug-and-play"]], "Sampling": [[10, "sampling"]], "Self-Supervised Learning": [[10, "self-supervised-learning"], [37, "self-supervised-learning"]], "Unfolded": [[10, "unfolded"], [45, "id1"]], "DPIR method for PnP image deblurring.": [[11, "dpir-method-for-pnp-image-deblurring"]], "Generate a dataset of blurred images and load it.": [[11, "generate-a-dataset-of-blurred-images-and-load-it"]], "Set up the DPIR algorithm to solve the inverse problem.": [[11, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem.": [[11, "evaluate-the-model-on-the-problem"], [13, "evaluate-the-model-on-the-problem"]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[12, "pnp-with-custom-optimization-algorithm-condat-vu-primal-dual"]], "Define a custom optimization algorithm": [[12, "define-a-custom-optimization-algorithm"]], "Define the custom fStep and gStep modules": [[12, "define-the-custom-fstep-and-gstep-modules"]], "Set the forward operator": [[12, "set-the-forward-operator"], [14, "set-the-forward-operator"]], "Set up the PnP algorithm to solve the inverse problem.": [[12, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [14, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem and plot the results.": [[12, "evaluate-the-model-on-the-problem-and-plot-the-results"], [14, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Regularization by Denoising (RED) for Super-Resolution.": [[13, "regularization-by-denoising-red-for-super-resolution"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[13, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Vanilla PnP for computed tomography (CT).": [[14, "vanilla-pnp-for-computed-tomography-ct"]], "Load image and parameters": [[14, "load-image-and-parameters"]], "Building your custom sampling algorithm.": [[16, "building-your-custom-sampling-algorithm"]], "Define the sampling iteration": [[16, "define-the-sampling-iteration"]], "Build Sampler class": [[16, "build-sampler-class"]], "Define the prior": [[16, "define-the-prior"], [20, "define-the-prior"]], "Create the preconditioned and standard ULA samplers": [[16, "create-the-preconditioned-and-standard-ula-samplers"]], "Run sampling algorithms and plot results": [[16, "run-sampling-algorithms-and-plot-results"]], "Image reconstruction with a diffusion model": [[17, "image-reconstruction-with-a-diffusion-model"]], "Load example image from the internet": [[17, "load-example-image-from-the-internet"]], "Define the MMSE denoiser": [[17, "define-the-mmse-denoiser"]], "Create the Monte Carlo sampler": [[17, "create-the-monte-carlo-sampler"]], "Run the diffusion algorithm and plot results": [[17, "run-the-diffusion-algorithm-and-plot-results"]], "Create a Monte Carlo sampler": [[17, "create-a-monte-carlo-sampler"]], "Run sampling algorithm and plot results": [[17, "run-sampling-algorithm-and-plot-results"], [20, "run-sampling-algorithm-and-plot-results"]], "Implementing DiffPIR": [[18, "implementing-diffpir"]], "Generate an inverse problem": [[18, "generate-an-inverse-problem"]], "The DiffPIR algorithm": [[18, "the-diffpir-algorithm"]], "Denoising step": [[18, "denoising-step"], [19, "denoising-step"]], "Data fidelity step": [[18, "data-fidelity-step"]], "Sampling step": [[18, "sampling-step"]], "Putting it all together: the DiffPIR algorithm": [[18, "putting-it-all-together-the-diffpir-algorithm"]], "Using the DiffPIR algorithm in your inverse problem": [[18, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Implementing DPS": [[19, "implementing-dps"]], "Diffusion model loading": [[19, "diffusion-model-loading"]], "Define diffusion schedule": [[19, "define-diffusion-schedule"]], "The DPS algorithm": [[19, "the-dps-algorithm"]], "DPS approximation": [[19, "dps-approximation"]], "DPS Algorithm": [[19, "dps-algorithm"]], "Using DPS in your inverse problem": [[19, "using-dps-in-your-inverse-problem"]], "Uncertainty quantification with PnP-ULA.": [[20, "uncertainty-quantification-with-pnp-ula"]], "Define the likelihood": [[20, "define-the-likelihood"]], "Create the MCMC sampler": [[20, "create-the-mcmc-sampler"]], "Self-supervised learning with Equivariant Imaging for MRI.": [[22, "self-supervised-learning-with-equivariant-imaging-for-mri"]], "Generate a dataset of knee images and load it.": [[22, "generate-a-dataset-of-knee-images-and-load-it"]], "Set up the training parameters": [[22, "set-up-the-training-parameters"], [23, "set-up-the-training-parameters"], [24, "set-up-the-training-parameters"], [25, "set-up-the-training-parameters"]], "Train the network": [[22, "train-the-network"], [23, "train-the-network"], [24, "train-the-network"], [25, "train-the-network"], [28, "train-the-network"], [31, "train-the-network"], [33, "train-the-network"]], "Self-supervised learning from incomplete measurements of multiple operators.": [[23, "self-supervised-learning-from-incomplete-measurements-of-multiple-operators"]], "Generate a dataset of subsampled images and load it.": [[23, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[24, "self-supervised-denoising-with-the-neighbor2neighbor-loss"]], "Generate a dataset of noisy images": [[24, "generate-a-dataset-of-noisy-images"], [25, "generate-a-dataset-of-noisy-images"]], "Set up the denoiser network": [[24, "set-up-the-denoiser-network"], [25, "set-up-the-denoiser-network"]], "Self-supervised denoising with the SURE loss.": [[25, "self-supervised-denoising-with-the-sure-loss"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[28, "deep-equilibrium-deq-algorithms-for-image-deblurring"]], "Generate a dataset of low resolution images and load it.": [[28, "generate-a-dataset-of-low-resolution-images-and-load-it"], [33, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Define the  DEQ algorithm.": [[28, "define-the-deq-algorithm"]], "Define the training parameters.": [[28, "define-the-training-parameters"], [29, "define-the-training-parameters"], [30, "define-the-training-parameters"], [31, "define-the-training-parameters"], [33, "define-the-training-parameters"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[29, "learned-iterative-soft-thresholding-algorithm-lista-for-compressed-sensing"]], "Generate a dataset of compressed measurements and load it.": [[29, "generate-a-dataset-of-compressed-measurements-and-load-it"], [30, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Define the unfolded Proximal Gradient algorithm.": [[29, "define-the-unfolded-proximal-gradient-algorithm"], [30, "define-the-unfolded-proximal-gradient-algorithm"]], "Train the network.": [[29, "train-the-network"], [30, "train-the-network"]], "Test the network.": [[29, "test-the-network"], [30, "test-the-network"]], "Plotting the learned parameters.": [[29, "plotting-the-learned-parameters"]], "Learned iterative custom prior": [[30, "learned-iterative-custom-prior"]], "Plotting the weights of the network.": [[30, "plotting-the-weights-of-the-network"]], "Learned Primal-Dual algorithm for CT scan.": [[31, "learned-primal-dual-algorithm-for-ct-scan"]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[31, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define the trainable prior and data fidelity terms.": [[31, "define-the-trainable-prior-and-data-fidelity-terms"]], "Define the model.": [[31, "define-the-model"]], "Training dataset of random phantoms.": [[31, "training-dataset-of-random-phantoms"]], "Unfolded Chambolle-Pock for constrained image inpainting": [[32, "unfolded-chambolle-pock-for-constrained-image-inpainting"]], "Saving the model": [[32, "saving-the-model"]], "Loading the model": [[32, "loading-the-model"]], "Vanilla Unfolded algorithm for super-resolution": [[33, "vanilla-unfolded-algorithm-for-super-resolution"]], "Define the unfolded PnP algorithm.": [[33, "define-the-unfolded-pnp-algorithm"]], "Plotting the trained parameters.": [[33, "plotting-the-trained-parameters"]], "How to Contribute": [[35, "how-to-contribute"]], "Datasets": [[36, "datasets"]], "HD5Dataset": [[36, "hd5dataset"]], "Loss": [[37, "loss"]], "Supervised Learning": [[37, "supervised-learning"]], "Transforms": [[37, "transforms"]], "Network Regularization": [[37, "network-regularization"]], "Metrics": [[37, "metrics"]], "Models": [[38, "models"]], "Denoisers": [[38, "denoisers"]], "Classical Denoisers": [[38, "classical-denoisers"]], "Learnable Denoisers": [[38, "learnable-denoisers"]], "Equivariant denoisers": [[38, "equivariant-denoisers"]], "Unfolded architectures": [[38, "unfolded-architectures"]], "Pretrained weights": [[38, "pretrained-weights"]], "Summary of pretrained weights": [[38, "id13"]], "Using multiple GPUs": [[39, "using-multiple-gpus"]], "Math Notation": [[40, "math-notation"]], "List of mathematical symbols": [[40, "id1"]], "Optim": [[41, "optim"]], "Data Fidelity": [[41, "data-fidelity"]], "Priors": [[41, "priors"]], "Parameters": [[41, "parameters"]], "Iterators": [[41, "iterators"], [43, "iterators"]], "Generic Optimizers": [[41, "generic-optimizers"]], "Physics": [[42, "physics"], [120, "physics"]], "Linear operators": [[42, "linear-operators"]], "Non-linear operators": [[42, "non-linear-operators"]], "Noise distributions": [[42, "noise-distributions"]], "Utils": [[42, "utils"], [46, "utils"]], "PnP and RED algorithms": [[43, "pnp-and-red-algorithms"]], "Priors and denoisers": [[43, "priors-and-denoisers"]], "Diffusion algorithms": [[44, "diffusion-algorithms"]], "Diffusion": [[44, "diffusion"]], "Markov Chain Monte Carlo Langevin": [[44, "markov-chain-monte-carlo-langevin"]], "Unfolded algorithms": [[45, "unfolded-algorithms"]], "Deep Equilibrium": [[45, "deep-equilibrium"]], "Training and Testing": [[46, "training-and-testing"]], "Plotting": [[46, "plotting"]], "TensorList": [[46, "tensorlist"], [145, "tensorlist"]], "Other": [[46, "other"]], "DeepInverse: a Pytorch library for imaging with deep learning": [[47, "deepinverse-a-pytorch-library-for-imaging-with-deep-learning"]], "Featuring": [[47, "featuring"]], "Installation": [[47, "installation"]], "Getting Started": [[47, "getting-started"]], "Finding Help": [[47, "finding-help"]], "Lead Developers": [[47, "lead-developers"]], "HDF5Dataset": [[49, "hdf5dataset"]], "Examples using HDF5Dataset:": [[49, "examples-using-hdf5dataset"]], "generate_dataset": [[50, "generate-dataset"]], "Examples using generate_dataset:": [[50, "examples-using-generate-dataset"]], "CharbonnierLoss": [[51, "charbonnierloss"]], "EILoss": [[52, "eiloss"]], "Examples using EILoss:": [[52, "examples-using-eiloss"]], "FNEJacobianSpectralNorm": [[53, "fnejacobianspectralnorm"]], "Examples using FNEJacobianSpectralNorm:": [[53, "examples-using-fnejacobianspectralnorm"]], "JacobianSpectralNorm": [[54, "jacobianspectralnorm"]], "LpNorm": [[55, "lpnorm"]], "MCLoss": [[56, "mcloss"]], "Examples using MCLoss:": [[56, "examples-using-mcloss"]], "MOILoss": [[57, "moiloss"]], "Examples using MOILoss:": [[57, "examples-using-moiloss"]], "Neighbor2Neighbor": [[58, "neighbor2neighbor"]], "Examples using Neighbor2Neighbor:": [[58, "examples-using-neighbor2neighbor"]], "SplittingLoss": [[59, "splittingloss"]], "SupLoss": [[60, "suploss"]], "Examples using SupLoss:": [[60, "examples-using-suploss"]], "SureGaussianLoss": [[61, "suregaussianloss"]], "Examples using SureGaussianLoss:": [[61, "examples-using-suregaussianloss"]], "SurePGLoss": [[62, "surepgloss"]], "Examples using SurePGLoss:": [[62, "examples-using-surepgloss"]], "SurePoissonLoss": [[63, "surepoissonloss"]], "Examples using SurePoissonLoss:": [[63, "examples-using-surepoissonloss"]], "TVLoss": [[64, "tvloss"]], "ArtifactRemoval": [[65, "artifactremoval"]], "Examples using ArtifactRemoval:": [[65, "examples-using-artifactremoval"]], "AutoEncoder": [[66, "autoencoder"]], "BM3D": [[67, "bm3d"]], "ConvDecoder": [[68, "convdecoder"]], "Examples using ConvDecoder:": [[68, "examples-using-convdecoder"]], "DRUNet": [[69, "drunet"]], "Examples using DRUNet:": [[69, "examples-using-drunet"]], "DeepImagePrior": [[70, "deepimageprior"]], "Examples using DeepImagePrior:": [[70, "examples-using-deepimageprior"]], "DiffUNet": [[71, "diffunet"]], "Examples using DiffUNet:": [[71, "examples-using-diffunet"]], "DnCNN": [[72, "dncnn"]], "Examples using DnCNN:": [[72, "examples-using-dncnn"]], "EquivariantDenoiser": [[73, "equivariantdenoiser"]], "GSDRUNet": [[74, "gsdrunet"]], "Examples using GSDRUNet:": [[74, "examples-using-gsdrunet"]], "MedianFilter": [[75, "medianfilter"]], "Examples using MedianFilter:": [[75, "examples-using-medianfilter"]], "PDNet_DualBlock": [[76, "pdnet-dualblock"]], "Examples using PDNet_DualBlock:": [[76, "examples-using-pdnet-dualblock"]], "PDNet_PrimalBlock": [[77, "pdnet-primalblock"]], "Examples using PDNet_PrimalBlock:": [[77, "examples-using-pdnet-primalblock"]], "SCUNet": [[78, "scunet"]], "SwinIR": [[79, "swinir"]], "TGV": [[80, "tgv"]], "TV": [[81, "tv"]], "UNet": [[82, "unet"]], "Examples using UNet:": [[82, "examples-using-unet"]], "WaveletDict": [[83, "waveletdict"]], "Examples using WaveletDict:": [[83, "examples-using-waveletdict"]], "WaveletPrior": [[84, "waveletprior"]], "Examples using WaveletPrior:": [[84, "examples-using-waveletprior"]], "BaseOptim": [[85, "baseoptim"]], "Examples using BaseOptim:": [[85, "examples-using-baseoptim"]], "DataFidelity": [[86, "datafidelity"]], "Examples using DataFidelity:": [[86, "examples-using-datafidelity"]], "FixedPoint": [[87, "fixedpoint"]], "IndicatorL2": [[88, "indicatorl2"]], "Examples using IndicatorL2:": [[88, "examples-using-indicatorl2"]], "L1": [[89, "l1"]], "L1Prior": [[90, "l1prior"]], "L2": [[91, "l2"]], "Examples using L2:": [[91, "examples-using-l2"]], "OptimIterator": [[92, "optimiterator"]], "Examples using OptimIterator:": [[92, "examples-using-optimiterator"]], "PnP": [[93, "pnp"]], "Examples using PnP:": [[93, "examples-using-pnp"]], "PoissonLikelihood": [[94, "poissonlikelihood"]], "Examples using PoissonLikelihood:": [[94, "examples-using-poissonlikelihood"]], "Prior": [[95, "prior"]], "Examples using Prior:": [[95, "examples-using-prior"]], "RED": [[96, "red"]], "Examples using RED:": [[96, "examples-using-red"]], "ScorePrior": [[97, "scoreprior"]], "Examples using ScorePrior:": [[97, "examples-using-scoreprior"]], "Tikhonov": [[98, "tikhonov"]], "optim_builder": [[99, "optim-builder"]], "Examples using optim_builder:": [[99, "examples-using-optim-builder"]], "ADMMIteration": [[100, "admmiteration"]], "CPIteration": [[101, "cpiteration"]], "Examples using CPIteration:": [[101, "examples-using-cpiteration"]], "DRSIteration": [[102, "drsiteration"]], "GDIteration": [[103, "gditeration"]], "HQSIteration": [[104, "hqsiteration"]], "PGDIteration": [[105, "pgditeration"]], "Examples using PGDIteration:": [[105, "examples-using-pgditeration"]], "BlindBlur": [[106, "blindblur"]], "Examples using Blur:": [[107, "examples-using-blur"]], "BlurFFT": [[108, "blurfft"]], "Examples using BlurFFT:": [[108, "examples-using-blurfft"]], "CompressedSensing": [[109, "compressedsensing"]], "Examples using CompressedSensing:": [[109, "examples-using-compressedsensing"]], "Examples using Decolorize:": [[110, "examples-using-decolorize"]], "DecomposablePhysics": [[111, "decomposablephysics"]], "Examples using DecomposablePhysics:": [[111, "examples-using-decomposablephysics"]], "Examples using Denoising:": [[112, "examples-using-denoising"]], "Downsampling": [[113, "downsampling"]], "Examples using Downsampling:": [[113, "examples-using-downsampling"]], "GaussianNoise": [[114, "gaussiannoise"]], "Examples using GaussianNoise:": [[114, "examples-using-gaussiannoise"]], "Haze": [[115, "haze"]], "Examples using Inpainting:": [[116, "examples-using-inpainting"]], "LinearPhysics": [[117, "linearphysics"]], "Examples using LinearPhysics:": [[117, "examples-using-linearphysics"]], "Examples using MRI:": [[118, "examples-using-mri"]], "Pansharpen": [[119, "pansharpen"]], "Examples using Pansharpen:": [[119, "examples-using-pansharpen"]], "Examples using Physics:": [[120, "examples-using-physics"]], "PoissonGaussianNoise": [[121, "poissongaussiannoise"]], "Examples using PoissonGaussianNoise:": [[121, "examples-using-poissongaussiannoise"]], "PoissonNoise": [[122, "poissonnoise"]], "Examples using PoissonNoise:": [[122, "examples-using-poissonnoise"]], "SinglePhotonLidar": [[123, "singlephotonlidar"]], "Examples using SinglePhotonLidar:": [[123, "examples-using-singlephotonlidar"]], "SinglePixelCamera": [[124, "singlepixelcamera"]], "Examples using SinglePixelCamera:": [[124, "examples-using-singlepixelcamera"]], "Tomography": [[125, "tomography"]], "Examples using Tomography:": [[125, "examples-using-tomography"]], "UniformGaussianNoise": [[126, "uniformgaussiannoise"]], "UniformNoise": [[127, "uniformnoise"]], "gaussian_blur": [[128, "gaussian-blur"]], "Examples using gaussian_blur:": [[128, "examples-using-gaussian-blur"]], "DDRM": [[129, "ddrm"]], "Examples using DDRM:": [[129, "examples-using-ddrm"]], "DPS": [[130, "dps"]], "Examples using DPS:": [[130, "examples-using-dps"]], "DiffPIR": [[131, "diffpir"]], "Examples using DiffPIR:": [[131, "examples-using-diffpir"]], "DiffusionSampler": [[132, "diffusionsampler"]], "Examples using DiffusionSampler:": [[132, "examples-using-diffusionsampler"]], "MonteCarlo": [[133, "montecarlo"]], "Examples using MonteCarlo:": [[133, "examples-using-montecarlo"]], "SKRock": [[134, "skrock"]], "ULA": [[135, "ula"]], "Examples using ULA:": [[135, "examples-using-ula"]], "test": [[136, "test"]], "Examples using test:": [[136, "examples-using-test"]], "train": [[137, "train"]], "Examples using train:": [[137, "examples-using-train"]], "Rotate": [[138, "rotate"]], "Examples using Rotate:": [[138, "examples-using-rotate"]], "Scale": [[139, "scale"]], "Shift": [[140, "shift"]], "BaseDEQ": [[141, "basedeq"]], "Examples using BaseDEQ:": [[141, "examples-using-basedeq"]], "BaseUnfold": [[142, "baseunfold"]], "Examples using BaseUnfold:": [[142, "examples-using-baseunfold"]], "DEQ_builder": [[143, "deq-builder"]], "Examples using DEQ_builder:": [[143, "examples-using-deq-builder"]], "unfolded_builder": [[144, "unfolded-builder"]], "Examples using unfolded_builder:": [[144, "examples-using-unfolded-builder"]], "Examples using TensorList:": [[145, "examples-using-tensorlist"]], "cal_psnr": [[146, "cal-psnr"]], "Examples using cal_psnr:": [[146, "examples-using-cal-psnr"]], "get_freer_gpu": [[147, "get-freer-gpu"]], "Examples using get_freer_gpu:": [[147, "examples-using-get-freer-gpu"]], "load_url_image": [[148, "load-url-image"]], "Examples using load_url_image:": [[148, "examples-using-load-url-image"]], "ones_like": [[149, "ones-like"]], "plot": [[150, "plot"]], "Examples using plot:": [[150, "examples-using-plot"]], "plot_curves": [[151, "plot-curves"]], "Examples using plot_curves:": [[151, "examples-using-plot-curves"]], "plot_parameters": [[152, "plot-parameters"]], "Examples using plot_parameters:": [[152, "examples-using-plot-parameters"]], "rand_like": [[153, "rand-like"]], "randn_like": [[154, "randn-like"]], "zeros_like": [[155, "zeros-like"]]}, "indexentries": {"hdf5dataset (class in deepinv.datasets)": [[49, "deepinv.datasets.HDF5Dataset"]], "generate_dataset (class in deepinv.datasets)": [[50, "deepinv.datasets.generate_dataset"]], "charbonnierloss (class in deepinv.loss)": [[51, "deepinv.loss.CharbonnierLoss"]], "forward() (deepinv.loss.charbonnierloss method)": [[51, "deepinv.loss.CharbonnierLoss.forward"]], "eiloss (class in deepinv.loss)": [[52, "deepinv.loss.EILoss"]], "forward() (deepinv.loss.eiloss method)": [[52, "deepinv.loss.EILoss.forward"]], "fnejacobianspectralnorm (class in deepinv.loss)": [[53, "deepinv.loss.FNEJacobianSpectralNorm"]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[53, "deepinv.loss.FNEJacobianSpectralNorm.forward"]], "jacobianspectralnorm (class in deepinv.loss)": [[54, "deepinv.loss.JacobianSpectralNorm"]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[54, "deepinv.loss.JacobianSpectralNorm.forward"]], "lpnorm (class in deepinv.loss)": [[55, "deepinv.loss.LpNorm"]], "forward() (deepinv.loss.lpnorm method)": [[55, "deepinv.loss.LpNorm.forward"]], "mcloss (class in deepinv.loss)": [[56, "deepinv.loss.MCLoss"]], "forward() (deepinv.loss.mcloss method)": [[56, "deepinv.loss.MCLoss.forward"]], "moiloss (class in deepinv.loss)": [[57, "deepinv.loss.MOILoss"]], "forward() (deepinv.loss.moiloss method)": [[57, "deepinv.loss.MOILoss.forward"]], "neighbor2neighbor (class in deepinv.loss)": [[58, "deepinv.loss.Neighbor2Neighbor"]], "forward() (deepinv.loss.neighbor2neighbor method)": [[58, "deepinv.loss.Neighbor2Neighbor.forward"]], "splittingloss (class in deepinv.loss)": [[59, "deepinv.loss.SplittingLoss"]], "forward() (deepinv.loss.splittingloss method)": [[59, "deepinv.loss.SplittingLoss.forward"]], "suploss (class in deepinv.loss)": [[60, "deepinv.loss.SupLoss"]], "forward() (deepinv.loss.suploss method)": [[60, "deepinv.loss.SupLoss.forward"]], "suregaussianloss (class in deepinv.loss)": [[61, "deepinv.loss.SureGaussianLoss"]], "forward() (deepinv.loss.suregaussianloss method)": [[61, "deepinv.loss.SureGaussianLoss.forward"]], "surepgloss (class in deepinv.loss)": [[62, "deepinv.loss.SurePGLoss"]], "forward() (deepinv.loss.surepgloss method)": [[62, "deepinv.loss.SurePGLoss.forward"]], "surepoissonloss (class in deepinv.loss)": [[63, "deepinv.loss.SurePoissonLoss"]], "forward() (deepinv.loss.surepoissonloss method)": [[63, "deepinv.loss.SurePoissonLoss.forward"]], "tvloss (class in deepinv.loss)": [[64, "deepinv.loss.TVLoss"]], "forward() (deepinv.loss.tvloss method)": [[64, "deepinv.loss.TVLoss.forward"]], "artifactremoval (class in deepinv.models)": [[65, "deepinv.models.ArtifactRemoval"]], "forward() (deepinv.models.artifactremoval method)": [[65, "deepinv.models.ArtifactRemoval.forward"]], "autoencoder (class in deepinv.models)": [[66, "deepinv.models.AutoEncoder"]], "forward() (deepinv.models.autoencoder method)": [[66, "deepinv.models.AutoEncoder.forward"]], "bm3d (class in deepinv.models)": [[67, "deepinv.models.BM3D"]], "forward() (deepinv.models.bm3d method)": [[67, "deepinv.models.BM3D.forward"]], "convdecoder (class in deepinv.models)": [[68, "deepinv.models.ConvDecoder"]], "forward() (deepinv.models.convdecoder method)": [[68, "deepinv.models.ConvDecoder.forward"]], "drunet (class in deepinv.models)": [[69, "deepinv.models.DRUNet"]], "forward() (deepinv.models.drunet method)": [[69, "deepinv.models.DRUNet.forward"]], "deepimageprior (class in deepinv.models)": [[70, "deepinv.models.DeepImagePrior"]], "forward() (deepinv.models.deepimageprior method)": [[70, "deepinv.models.DeepImagePrior.forward"]], "diffunet (class in deepinv.models)": [[71, "deepinv.models.DiffUNet"]], "convert_to_fp16() (deepinv.models.diffunet method)": [[71, "deepinv.models.DiffUNet.convert_to_fp16"]], "convert_to_fp32() (deepinv.models.diffunet method)": [[71, "deepinv.models.DiffUNet.convert_to_fp32"]], "find_nearest() (deepinv.models.diffunet method)": [[71, "deepinv.models.DiffUNet.find_nearest"]], "forward() (deepinv.models.diffunet method)": [[71, "deepinv.models.DiffUNet.forward"]], "forward_denoise() (deepinv.models.diffunet method)": [[71, "deepinv.models.DiffUNet.forward_denoise"]], "forward_diffusion() (deepinv.models.diffunet method)": [[71, "deepinv.models.DiffUNet.forward_diffusion"]], "get_alpha_prod() (deepinv.models.diffunet method)": [[71, "deepinv.models.DiffUNet.get_alpha_prod"]], "dncnn (class in deepinv.models)": [[72, "deepinv.models.DnCNN"]], "forward() (deepinv.models.dncnn method)": [[72, "deepinv.models.DnCNN.forward"]], "equivariantdenoiser (class in deepinv.models)": [[73, "deepinv.models.EquivariantDenoiser"]], "forward() (deepinv.models.equivariantdenoiser method)": [[73, "deepinv.models.EquivariantDenoiser.forward"]], "gsdrunet (class in deepinv.models)": [[74, "deepinv.models.GSDRUNet"]], "medianfilter (class in deepinv.models)": [[75, "deepinv.models.MedianFilter"]], "forward() (deepinv.models.medianfilter method)": [[75, "deepinv.models.MedianFilter.forward"]], "pdnet_dualblock (class in deepinv.models)": [[76, "deepinv.models.PDNet_DualBlock"]], "forward() (deepinv.models.pdnet_dualblock method)": [[76, "deepinv.models.PDNet_DualBlock.forward"]], "pdnet_primalblock (class in deepinv.models)": [[77, "deepinv.models.PDNet_PrimalBlock"]], "forward() (deepinv.models.pdnet_primalblock method)": [[77, "deepinv.models.PDNet_PrimalBlock.forward"]], "scunet (class in deepinv.models)": [[78, "deepinv.models.SCUNet"]], "forward() (deepinv.models.scunet method)": [[78, "deepinv.models.SCUNet.forward"]], "swinir (class in deepinv.models)": [[79, "deepinv.models.SwinIR"]], "forward() (deepinv.models.swinir method)": [[79, "deepinv.models.SwinIR.forward"]], "tgv (class in deepinv.models)": [[80, "deepinv.models.TGV"]], "forward() (deepinv.models.tgv method)": [[80, "deepinv.models.TGV.forward"]], "tv (class in deepinv.models)": [[81, "deepinv.models.TV"]], "forward() (deepinv.models.tv method)": [[81, "deepinv.models.TV.forward"]], "unet (class in deepinv.models)": [[82, "deepinv.models.UNet"]], "forward() (deepinv.models.unet method)": [[82, "deepinv.models.UNet.forward"]], "waveletdict (class in deepinv.models)": [[83, "deepinv.models.WaveletDict"]], "forward() (deepinv.models.waveletdict method)": [[83, "deepinv.models.WaveletDict.forward"]], "waveletprior (class in deepinv.models)": [[84, "deepinv.models.WaveletPrior"]], "forward() (deepinv.models.waveletprior method)": [[84, "deepinv.models.WaveletPrior.forward"]], "hard_threshold_topk() (deepinv.models.waveletprior method)": [[84, "deepinv.models.WaveletPrior.hard_threshold_topk"]], "prox_l0() (deepinv.models.waveletprior method)": [[84, "deepinv.models.WaveletPrior.prox_l0"]], "prox_l1() (deepinv.models.waveletprior method)": [[84, "deepinv.models.WaveletPrior.prox_l1"]], "baseoptim (class in deepinv.optim)": [[85, "deepinv.optim.BaseOptim"]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.check_conv_fn"]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.check_iteration_fn"]], "forward() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.forward"]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.init_iterate_fn"]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.init_metrics_fn"]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.update_data_fidelity_fn"]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.update_metrics_fn"]], "update_params_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.update_params_fn"]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[85, "deepinv.optim.BaseOptim.update_prior_fn"]], "datafidelity (class in deepinv.optim)": [[86, "deepinv.optim.DataFidelity"]], "d() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.d"]], "forward() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.forward"]], "grad() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.grad"]], "grad_d() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.grad_d"]], "prox() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.prox"]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.prox_conjugate"]], "prox_d() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.prox_d"]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[86, "deepinv.optim.DataFidelity.prox_d_conjugate"]], "fixedpoint (class in deepinv.optim)": [[87, "deepinv.optim.FixedPoint"]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[87, "deepinv.optim.FixedPoint.anderson_acceleration_step"]], "forward() (deepinv.optim.fixedpoint method)": [[87, "deepinv.optim.FixedPoint.forward"]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[87, "deepinv.optim.FixedPoint.init_anderson_acceleration"]], "indicatorl2 (class in deepinv.optim)": [[88, "deepinv.optim.IndicatorL2"]], "d() (deepinv.optim.indicatorl2 method)": [[88, "deepinv.optim.IndicatorL2.d"]], "prox() (deepinv.optim.indicatorl2 method)": [[88, "deepinv.optim.IndicatorL2.prox"]], "prox_d() (deepinv.optim.indicatorl2 method)": [[88, "deepinv.optim.IndicatorL2.prox_d"]], "l1 (class in deepinv.optim)": [[89, "deepinv.optim.L1"]], "d() (deepinv.optim.l1 method)": [[89, "deepinv.optim.L1.d"]], "grad_d() (deepinv.optim.l1 method)": [[89, "deepinv.optim.L1.grad_d"]], "prox() (deepinv.optim.l1 method)": [[89, "deepinv.optim.L1.prox"]], "prox_d() (deepinv.optim.l1 method)": [[89, "deepinv.optim.L1.prox_d"]], "l1prior (class in deepinv.optim)": [[90, "deepinv.optim.L1Prior"]], "g() (deepinv.optim.l1prior method)": [[90, "deepinv.optim.L1Prior.g"]], "prox() (deepinv.optim.l1prior method)": [[90, "deepinv.optim.L1Prior.prox"]], "l2 (class in deepinv.optim)": [[91, "deepinv.optim.L2"]], "d() (deepinv.optim.l2 method)": [[91, "deepinv.optim.L2.d"]], "grad_d() (deepinv.optim.l2 method)": [[91, "deepinv.optim.L2.grad_d"]], "prox() (deepinv.optim.l2 method)": [[91, "deepinv.optim.L2.prox"]], "prox_d() (deepinv.optim.l2 method)": [[91, "deepinv.optim.L2.prox_d"]], "optimiterator (class in deepinv.optim)": [[92, "deepinv.optim.OptimIterator"]], "forward() (deepinv.optim.optimiterator method)": [[92, "deepinv.optim.OptimIterator.forward"]], "relaxation_step() (deepinv.optim.optimiterator method)": [[92, "deepinv.optim.OptimIterator.relaxation_step"]], "pnp (class in deepinv.optim)": [[93, "deepinv.optim.PnP"]], "prox() (deepinv.optim.pnp method)": [[93, "deepinv.optim.PnP.prox"]], "poissonlikelihood (class in deepinv.optim)": [[94, "deepinv.optim.PoissonLikelihood"]], "d() (deepinv.optim.poissonlikelihood method)": [[94, "deepinv.optim.PoissonLikelihood.d"]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[94, "deepinv.optim.PoissonLikelihood.grad_d"]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[94, "deepinv.optim.PoissonLikelihood.prox_d"]], "prior (class in deepinv.optim)": [[95, "deepinv.optim.Prior"]], "forward() (deepinv.optim.prior method)": [[95, "deepinv.optim.Prior.forward"]], "g() (deepinv.optim.prior method)": [[95, "deepinv.optim.Prior.g"]], "grad() (deepinv.optim.prior method)": [[95, "deepinv.optim.Prior.grad"]], "prox() (deepinv.optim.prior method)": [[95, "deepinv.optim.Prior.prox"]], "prox_conjugate() (deepinv.optim.prior method)": [[95, "deepinv.optim.Prior.prox_conjugate"]], "red (class in deepinv.optim)": [[96, "deepinv.optim.RED"]], "grad() (deepinv.optim.red method)": [[96, "deepinv.optim.RED.grad"]], "scoreprior (class in deepinv.optim)": [[97, "deepinv.optim.ScorePrior"]], "forward() (deepinv.optim.scoreprior method)": [[97, "deepinv.optim.ScorePrior.forward"]], "tikhonov (class in deepinv.optim)": [[98, "deepinv.optim.Tikhonov"]], "g() (deepinv.optim.tikhonov method)": [[98, "deepinv.optim.Tikhonov.g"]], "grad() (deepinv.optim.tikhonov method)": [[98, "deepinv.optim.Tikhonov.grad"]], "prox() (deepinv.optim.tikhonov method)": [[98, "deepinv.optim.Tikhonov.prox"]], "optim_builder() (in module deepinv.optim)": [[99, "deepinv.optim.optim_builder"]], "admmiteration (class in deepinv.optim.optim_iterators)": [[100, "deepinv.optim.optim_iterators.ADMMIteration"]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[100, "deepinv.optim.optim_iterators.ADMMIteration.forward"]], "cpiteration (class in deepinv.optim.optim_iterators)": [[101, "deepinv.optim.optim_iterators.CPIteration"]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[101, "deepinv.optim.optim_iterators.CPIteration.forward"]], "drsiteration (class in deepinv.optim.optim_iterators)": [[102, "deepinv.optim.optim_iterators.DRSIteration"]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[102, "deepinv.optim.optim_iterators.DRSIteration.forward"]], "gditeration (class in deepinv.optim.optim_iterators)": [[103, "deepinv.optim.optim_iterators.GDIteration"]], "forward() (deepinv.optim.optim_iterators.gditeration method)": [[103, "deepinv.optim.optim_iterators.GDIteration.forward"]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[104, "deepinv.optim.optim_iterators.HQSIteration"]], "pgditeration (class in deepinv.optim.optim_iterators)": [[105, "deepinv.optim.optim_iterators.PGDIteration"]], "a() (deepinv.physics.blindblur method)": [[106, "deepinv.physics.BlindBlur.A"]], "a_dagger() (deepinv.physics.blindblur method)": [[106, "deepinv.physics.BlindBlur.A_dagger"]], "blindblur (class in deepinv.physics)": [[106, "deepinv.physics.BlindBlur"]], "a() (deepinv.physics.blur method)": [[107, "deepinv.physics.Blur.A"]], "a_adjoint() (deepinv.physics.blur method)": [[107, "deepinv.physics.Blur.A_adjoint"]], "blur (class in deepinv.physics)": [[107, "deepinv.physics.Blur"]], "blurfft (class in deepinv.physics)": [[108, "deepinv.physics.BlurFFT"]], "a() (deepinv.physics.compressedsensing method)": [[109, "deepinv.physics.CompressedSensing.A"]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[109, "deepinv.physics.CompressedSensing.A_adjoint"]], "a_dagger() (deepinv.physics.compressedsensing method)": [[109, "deepinv.physics.CompressedSensing.A_dagger"]], "compressedsensing (class in deepinv.physics)": [[109, "deepinv.physics.CompressedSensing"]], "decolorize (class in deepinv.physics)": [[110, "deepinv.physics.Decolorize"]], "a() (deepinv.physics.decomposablephysics method)": [[111, "deepinv.physics.DecomposablePhysics.A"]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[111, "deepinv.physics.DecomposablePhysics.A_adjoint"]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[111, "deepinv.physics.DecomposablePhysics.A_dagger"]], "decomposablephysics (class in deepinv.physics)": [[111, "deepinv.physics.DecomposablePhysics"]], "noise() (deepinv.physics.decomposablephysics method)": [[111, "deepinv.physics.DecomposablePhysics.noise"]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[111, "deepinv.physics.DecomposablePhysics.prox_l2"]], "denoising (class in deepinv.physics)": [[112, "deepinv.physics.Denoising"]], "a() (deepinv.physics.downsampling method)": [[113, "deepinv.physics.Downsampling.A"]], "a_adjoint() (deepinv.physics.downsampling method)": [[113, "deepinv.physics.Downsampling.A_adjoint"]], "downsampling (class in deepinv.physics)": [[113, "deepinv.physics.Downsampling"]], "prox_l2() (deepinv.physics.downsampling method)": [[113, "deepinv.physics.Downsampling.prox_l2"]], "gaussiannoise (class in deepinv.physics)": [[114, "deepinv.physics.GaussianNoise"]], "forward() (deepinv.physics.gaussiannoise method)": [[114, "deepinv.physics.GaussianNoise.forward"]], "a() (deepinv.physics.haze method)": [[115, "deepinv.physics.Haze.A"]], "a_dagger() (deepinv.physics.haze method)": [[115, "deepinv.physics.Haze.A_dagger"]], "haze (class in deepinv.physics)": [[115, "deepinv.physics.Haze"]], "inpainting (class in deepinv.physics)": [[116, "deepinv.physics.Inpainting"]], "a_adjoint() (deepinv.physics.linearphysics method)": [[117, "deepinv.physics.LinearPhysics.A_adjoint"]], "a_dagger() (deepinv.physics.linearphysics method)": [[117, "deepinv.physics.LinearPhysics.A_dagger"]], "linearphysics (class in deepinv.physics)": [[117, "deepinv.physics.LinearPhysics"]], "__add__() (deepinv.physics.linearphysics method)": [[117, "deepinv.physics.LinearPhysics.__add__"]], "__mul__() (deepinv.physics.linearphysics method)": [[117, "deepinv.physics.LinearPhysics.__mul__"]], "adjointness_test() (deepinv.physics.linearphysics method)": [[117, "deepinv.physics.LinearPhysics.adjointness_test"]], "compute_norm() (deepinv.physics.linearphysics method)": [[117, "deepinv.physics.LinearPhysics.compute_norm"]], "prox_l2() (deepinv.physics.linearphysics method)": [[117, "deepinv.physics.LinearPhysics.prox_l2"]], "mri (class in deepinv.physics)": [[118, "deepinv.physics.MRI"]], "reset() (deepinv.physics.mri method)": [[118, "deepinv.physics.MRI.reset"]], "sample_mask() (deepinv.physics.mri method)": [[118, "deepinv.physics.MRI.sample_mask"]], "a() (deepinv.physics.pansharpen method)": [[119, "deepinv.physics.Pansharpen.A"]], "a_adjoint() (deepinv.physics.pansharpen method)": [[119, "deepinv.physics.Pansharpen.A_adjoint"]], "pansharpen (class in deepinv.physics)": [[119, "deepinv.physics.Pansharpen"]], "forward() (deepinv.physics.pansharpen method)": [[119, "deepinv.physics.Pansharpen.forward"]], "a() (deepinv.physics.physics method)": [[120, "deepinv.physics.Physics.A"]], "a_dagger() (deepinv.physics.physics method)": [[120, "deepinv.physics.Physics.A_dagger"]], "physics (class in deepinv.physics)": [[120, "deepinv.physics.Physics"]], "__add__() (deepinv.physics.physics method)": [[120, "deepinv.physics.Physics.__add__"]], "__mul__() (deepinv.physics.physics method)": [[120, "deepinv.physics.Physics.__mul__"]], "forward() (deepinv.physics.physics method)": [[120, "deepinv.physics.Physics.forward"]], "noise() (deepinv.physics.physics method)": [[120, "deepinv.physics.Physics.noise"]], "sensor() (deepinv.physics.physics method)": [[120, "deepinv.physics.Physics.sensor"]], "poissongaussiannoise (class in deepinv.physics)": [[121, "deepinv.physics.PoissonGaussianNoise"]], "forward() (deepinv.physics.poissongaussiannoise method)": [[121, "deepinv.physics.PoissonGaussianNoise.forward"]], "poissonnoise (class in deepinv.physics)": [[122, "deepinv.physics.PoissonNoise"]], "forward() (deepinv.physics.poissonnoise method)": [[122, "deepinv.physics.PoissonNoise.forward"]], "a() (deepinv.physics.singlephotonlidar method)": [[123, "deepinv.physics.SinglePhotonLidar.A"]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[123, "deepinv.physics.SinglePhotonLidar.A_dagger"]], "singlephotonlidar (class in deepinv.physics)": [[123, "deepinv.physics.SinglePhotonLidar"]], "singlepixelcamera (class in deepinv.physics)": [[124, "deepinv.physics.SinglePixelCamera"]], "a() (deepinv.physics.tomography method)": [[125, "deepinv.physics.Tomography.A"]], "a_adjoint() (deepinv.physics.tomography method)": [[125, "deepinv.physics.Tomography.A_adjoint"]], "a_dagger() (deepinv.physics.tomography method)": [[125, "deepinv.physics.Tomography.A_dagger"]], "tomography (class in deepinv.physics)": [[125, "deepinv.physics.Tomography"]], "uniformgaussiannoise (class in deepinv.physics)": [[126, "deepinv.physics.UniformGaussianNoise"]], "forward() (deepinv.physics.uniformgaussiannoise method)": [[126, "deepinv.physics.UniformGaussianNoise.forward"]], "uniformnoise (class in deepinv.physics)": [[127, "deepinv.physics.UniformNoise"]], "forward() (deepinv.physics.uniformnoise method)": [[127, "deepinv.physics.UniformNoise.forward"]], "gaussian_blur() (in module deepinv.physics.blur)": [[128, "deepinv.physics.blur.gaussian_blur"]], "ddrm (class in deepinv.sampling)": [[129, "deepinv.sampling.DDRM"]], "forward() (deepinv.sampling.ddrm method)": [[129, "deepinv.sampling.DDRM.forward"]], "dps (class in deepinv.sampling)": [[130, "deepinv.sampling.DPS"]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[130, "deepinv.sampling.DPS.compute_alpha_betas"]], "forward() (deepinv.sampling.dps method)": [[130, "deepinv.sampling.DPS.forward"]], "diffpir (class in deepinv.sampling)": [[131, "deepinv.sampling.DiffPIR"]], "find_nearest() (deepinv.sampling.diffpir method)": [[131, "deepinv.sampling.DiffPIR.find_nearest"]], "forward() (deepinv.sampling.diffpir method)": [[131, "deepinv.sampling.DiffPIR.forward"]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[131, "deepinv.sampling.DiffPIR.get_alpha_beta"]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[131, "deepinv.sampling.DiffPIR.get_alpha_prod"]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[131, "deepinv.sampling.DiffPIR.get_noise_schedule"]], "diffusionsampler (class in deepinv.sampling)": [[132, "deepinv.sampling.DiffusionSampler"]], "montecarlo (class in deepinv.sampling)": [[133, "deepinv.sampling.MonteCarlo"]], "forward() (deepinv.sampling.montecarlo method)": [[133, "deepinv.sampling.MonteCarlo.forward"]], "get_chain() (deepinv.sampling.montecarlo method)": [[133, "deepinv.sampling.MonteCarlo.get_chain"]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[133, "deepinv.sampling.MonteCarlo.mean_has_converged"]], "reset() (deepinv.sampling.montecarlo method)": [[133, "deepinv.sampling.MonteCarlo.reset"]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[133, "deepinv.sampling.MonteCarlo.var_has_converged"]], "skrock (class in deepinv.sampling)": [[134, "deepinv.sampling.SKRock"]], "ula (class in deepinv.sampling)": [[135, "deepinv.sampling.ULA"]], "test() (in module deepinv)": [[136, "deepinv.test"]], "train() (in module deepinv)": [[137, "deepinv.train"]], "rotate (class in deepinv.transform)": [[138, "deepinv.transform.Rotate"]], "forward() (deepinv.transform.rotate method)": [[138, "deepinv.transform.Rotate.forward"]], "scale (class in deepinv.transform)": [[139, "deepinv.transform.Scale"]], "forward() (deepinv.transform.scale method)": [[139, "deepinv.transform.Scale.forward"]], "shift (class in deepinv.transform)": [[140, "deepinv.transform.Shift"]], "forward() (deepinv.transform.shift method)": [[140, "deepinv.transform.Shift.forward"]], "basedeq (class in deepinv.unfolded)": [[141, "deepinv.unfolded.BaseDEQ"]], "forward() (deepinv.unfolded.basedeq method)": [[141, "deepinv.unfolded.BaseDEQ.forward"]], "baseunfold (class in deepinv.unfolded)": [[142, "deepinv.unfolded.BaseUnfold"]], "deq_builder() (in module deepinv.unfolded)": [[143, "deepinv.unfolded.DEQ_builder"]], "unfolded_builder() (in module deepinv.unfolded)": [[144, "deepinv.unfolded.unfolded_builder"]], "tensorlist (class in deepinv.utils)": [[145, "deepinv.utils.TensorList"]], "__add__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__add__"]], "__mul__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__mul__"]], "__neg__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__neg__"]], "__sub__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__sub__"]], "__truediv__() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.__truediv__"]], "append() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.append"]], "flatten() (deepinv.utils.tensorlist method)": [[145, "deepinv.utils.TensorList.flatten"]], "cal_psnr() (in module deepinv.utils)": [[146, "deepinv.utils.cal_psnr"]], "get_freer_gpu() (in module deepinv.utils)": [[147, "deepinv.utils.get_freer_gpu"]], "load_url_image() (in module deepinv.utils)": [[148, "deepinv.utils.load_url_image"]], "ones_like() (in module deepinv.utils)": [[149, "deepinv.utils.ones_like"]], "plot() (in module deepinv.utils)": [[150, "deepinv.utils.plot"]], "plot_curves() (in module deepinv.utils)": [[151, "deepinv.utils.plot_curves"]], "plot_parameters() (in module deepinv.utils)": [[152, "deepinv.utils.plot_parameters"]], "rand_like() (in module deepinv.utils)": [[153, "deepinv.utils.rand_like"]], "randn_like() (in module deepinv.utils)": [[154, "deepinv.utils.randn_like"]], "zeros_like() (in module deepinv.utils)": [[155, "deepinv.utils.zeros_like"]]}})